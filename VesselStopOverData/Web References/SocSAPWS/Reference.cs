//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.34209
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Ce code source a été automatiquement généré par Microsoft.VSDesigner, Version 4.0.30319.34209.
// 
#pragma warning disable 1591

namespace VesselStopOverData.SocSAPWS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SocSAPWebServiceSoap", Namespace="http://tempuri.org/")]
    public partial class SocSAPWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback LoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback LogOutOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddInvoiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddPurchaseOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddPurchaseDeliveryNoteOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddPurchaseInvoiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddPaymentOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddPaymentAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddPaymentCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddCreditNoteOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddPartialCreditNoteOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddJournalEntryAS400OperationCompleted;
        
        private System.Threading.SendOrPostCallback AddJournalEntryOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddGLAccountOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public SocSAPWebService() {
            this.Url = global::VesselStopOverData.Properties.Settings.Default.VesselStopOverData_SocSAPWS_SocSAPWebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event LoginCompletedEventHandler LoginCompleted;
        
        /// <remarks/>
        public event LogOutCompletedEventHandler LogOutCompleted;
        
        /// <remarks/>
        public event AddInvoiceCompletedEventHandler AddInvoiceCompleted;
        
        /// <remarks/>
        public event AddPurchaseOrderCompletedEventHandler AddPurchaseOrderCompleted;
        
        /// <remarks/>
        public event AddPurchaseDeliveryNoteCompletedEventHandler AddPurchaseDeliveryNoteCompleted;
        
        /// <remarks/>
        public event AddPurchaseInvoiceCompletedEventHandler AddPurchaseInvoiceCompleted;
        
        /// <remarks/>
        public event AddPaymentCompletedEventHandler AddPaymentCompleted;
        
        /// <remarks/>
        public event AddPaymentAccountCompletedEventHandler AddPaymentAccountCompleted;
        
        /// <remarks/>
        public event AddPaymentCheckCompletedEventHandler AddPaymentCheckCompleted;
        
        /// <remarks/>
        public event AddCreditNoteCompletedEventHandler AddCreditNoteCompleted;
        
        /// <remarks/>
        public event AddPartialCreditNoteCompletedEventHandler AddPartialCreditNoteCompleted;
        
        /// <remarks/>
        public event AddJournalEntryAS400CompletedEventHandler AddJournalEntryAS400Completed;
        
        /// <remarks/>
        public event AddJournalEntryCompletedEventHandler AddJournalEntryCompleted;
        
        /// <remarks/>
        public event AddGLAccountCompletedEventHandler AddGLAccountCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Login", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Login(string DataBaseServer, string DataBaseName, string DataBaseType, string DataBaseUserName, string DataBasePassword, string CompanyUserName, string CompanyPassword, string Language, string LicenseServer) {
            object[] results = this.Invoke("Login", new object[] {
                        DataBaseServer,
                        DataBaseName,
                        DataBaseType,
                        DataBaseUserName,
                        DataBasePassword,
                        CompanyUserName,
                        CompanyPassword,
                        Language,
                        LicenseServer});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoginAsync(string DataBaseServer, string DataBaseName, string DataBaseType, string DataBaseUserName, string DataBasePassword, string CompanyUserName, string CompanyPassword, string Language, string LicenseServer) {
            this.LoginAsync(DataBaseServer, DataBaseName, DataBaseType, DataBaseUserName, DataBasePassword, CompanyUserName, CompanyPassword, Language, LicenseServer, null);
        }
        
        /// <remarks/>
        public void LoginAsync(string DataBaseServer, string DataBaseName, string DataBaseType, string DataBaseUserName, string DataBasePassword, string CompanyUserName, string CompanyPassword, string Language, string LicenseServer, object userState) {
            if ((this.LoginOperationCompleted == null)) {
                this.LoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginOperationCompleted);
            }
            this.InvokeAsync("Login", new object[] {
                        DataBaseServer,
                        DataBaseName,
                        DataBaseType,
                        DataBaseUserName,
                        DataBasePassword,
                        CompanyUserName,
                        CompanyPassword,
                        Language,
                        LicenseServer}, this.LoginOperationCompleted, userState);
        }
        
        private void OnLoginOperationCompleted(object arg) {
            if ((this.LoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginCompleted(this, new LoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LogOut", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object LogOut(string sSessionID) {
            object[] results = this.Invoke("LogOut", new object[] {
                        sSessionID});
            return ((object)(results[0]));
        }
        
        /// <remarks/>
        public void LogOutAsync(string sSessionID) {
            this.LogOutAsync(sSessionID, null);
        }
        
        /// <remarks/>
        public void LogOutAsync(string sSessionID, object userState) {
            if ((this.LogOutOperationCompleted == null)) {
                this.LogOutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLogOutOperationCompleted);
            }
            this.InvokeAsync("LogOut", new object[] {
                        sSessionID}, this.LogOutOperationCompleted, userState);
        }
        
        private void OnLogOutOperationCompleted(object arg) {
            if ((this.LogOutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LogOutCompleted(this, new LogOutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddInvoice", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddInvoice(string SessionID, string cardCode, string docDate, string taxDate, string docDueDate, string numAtCard, string comments, LigneFacture[] lignesFacture) {
            object[] results = this.Invoke("AddInvoice", new object[] {
                        SessionID,
                        cardCode,
                        docDate,
                        taxDate,
                        docDueDate,
                        numAtCard,
                        comments,
                        lignesFacture});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddInvoiceAsync(string SessionID, string cardCode, string docDate, string taxDate, string docDueDate, string numAtCard, string comments, LigneFacture[] lignesFacture) {
            this.AddInvoiceAsync(SessionID, cardCode, docDate, taxDate, docDueDate, numAtCard, comments, lignesFacture, null);
        }
        
        /// <remarks/>
        public void AddInvoiceAsync(string SessionID, string cardCode, string docDate, string taxDate, string docDueDate, string numAtCard, string comments, LigneFacture[] lignesFacture, object userState) {
            if ((this.AddInvoiceOperationCompleted == null)) {
                this.AddInvoiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddInvoiceOperationCompleted);
            }
            this.InvokeAsync("AddInvoice", new object[] {
                        SessionID,
                        cardCode,
                        docDate,
                        taxDate,
                        docDueDate,
                        numAtCard,
                        comments,
                        lignesFacture}, this.AddInvoiceOperationCompleted, userState);
        }
        
        private void OnAddInvoiceOperationCompleted(object arg) {
            if ((this.AddInvoiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddInvoiceCompleted(this, new AddInvoiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddPurchaseOrder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddPurchaseOrder(string SessionID, string cardCode, string docDate, string taxDate, string docDueDate, string numAtCard, string comments, LigneCommandeFournisseur[] lignesCommande) {
            object[] results = this.Invoke("AddPurchaseOrder", new object[] {
                        SessionID,
                        cardCode,
                        docDate,
                        taxDate,
                        docDueDate,
                        numAtCard,
                        comments,
                        lignesCommande});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddPurchaseOrderAsync(string SessionID, string cardCode, string docDate, string taxDate, string docDueDate, string numAtCard, string comments, LigneCommandeFournisseur[] lignesCommande) {
            this.AddPurchaseOrderAsync(SessionID, cardCode, docDate, taxDate, docDueDate, numAtCard, comments, lignesCommande, null);
        }
        
        /// <remarks/>
        public void AddPurchaseOrderAsync(string SessionID, string cardCode, string docDate, string taxDate, string docDueDate, string numAtCard, string comments, LigneCommandeFournisseur[] lignesCommande, object userState) {
            if ((this.AddPurchaseOrderOperationCompleted == null)) {
                this.AddPurchaseOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddPurchaseOrderOperationCompleted);
            }
            this.InvokeAsync("AddPurchaseOrder", new object[] {
                        SessionID,
                        cardCode,
                        docDate,
                        taxDate,
                        docDueDate,
                        numAtCard,
                        comments,
                        lignesCommande}, this.AddPurchaseOrderOperationCompleted, userState);
        }
        
        private void OnAddPurchaseOrderOperationCompleted(object arg) {
            if ((this.AddPurchaseOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddPurchaseOrderCompleted(this, new AddPurchaseOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddPurchaseDeliveryNote", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddPurchaseDeliveryNote(string SessionID, string cardCode, string docDate, string taxDate, string docDueDate, string numAtCard, string comments, int idPO, LigneCommandeFournisseur[] lignesCommande) {
            object[] results = this.Invoke("AddPurchaseDeliveryNote", new object[] {
                        SessionID,
                        cardCode,
                        docDate,
                        taxDate,
                        docDueDate,
                        numAtCard,
                        comments,
                        idPO,
                        lignesCommande});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddPurchaseDeliveryNoteAsync(string SessionID, string cardCode, string docDate, string taxDate, string docDueDate, string numAtCard, string comments, int idPO, LigneCommandeFournisseur[] lignesCommande) {
            this.AddPurchaseDeliveryNoteAsync(SessionID, cardCode, docDate, taxDate, docDueDate, numAtCard, comments, idPO, lignesCommande, null);
        }
        
        /// <remarks/>
        public void AddPurchaseDeliveryNoteAsync(string SessionID, string cardCode, string docDate, string taxDate, string docDueDate, string numAtCard, string comments, int idPO, LigneCommandeFournisseur[] lignesCommande, object userState) {
            if ((this.AddPurchaseDeliveryNoteOperationCompleted == null)) {
                this.AddPurchaseDeliveryNoteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddPurchaseDeliveryNoteOperationCompleted);
            }
            this.InvokeAsync("AddPurchaseDeliveryNote", new object[] {
                        SessionID,
                        cardCode,
                        docDate,
                        taxDate,
                        docDueDate,
                        numAtCard,
                        comments,
                        idPO,
                        lignesCommande}, this.AddPurchaseDeliveryNoteOperationCompleted, userState);
        }
        
        private void OnAddPurchaseDeliveryNoteOperationCompleted(object arg) {
            if ((this.AddPurchaseDeliveryNoteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddPurchaseDeliveryNoteCompleted(this, new AddPurchaseDeliveryNoteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddPurchaseInvoice", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddPurchaseInvoice(string SessionID, string cardCode, string docDate, string taxDate, string docDueDate, string numAtCard, string comments, int idPDN, LigneCommandeFournisseur[] lignesCommande) {
            object[] results = this.Invoke("AddPurchaseInvoice", new object[] {
                        SessionID,
                        cardCode,
                        docDate,
                        taxDate,
                        docDueDate,
                        numAtCard,
                        comments,
                        idPDN,
                        lignesCommande});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddPurchaseInvoiceAsync(string SessionID, string cardCode, string docDate, string taxDate, string docDueDate, string numAtCard, string comments, int idPDN, LigneCommandeFournisseur[] lignesCommande) {
            this.AddPurchaseInvoiceAsync(SessionID, cardCode, docDate, taxDate, docDueDate, numAtCard, comments, idPDN, lignesCommande, null);
        }
        
        /// <remarks/>
        public void AddPurchaseInvoiceAsync(string SessionID, string cardCode, string docDate, string taxDate, string docDueDate, string numAtCard, string comments, int idPDN, LigneCommandeFournisseur[] lignesCommande, object userState) {
            if ((this.AddPurchaseInvoiceOperationCompleted == null)) {
                this.AddPurchaseInvoiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddPurchaseInvoiceOperationCompleted);
            }
            this.InvokeAsync("AddPurchaseInvoice", new object[] {
                        SessionID,
                        cardCode,
                        docDate,
                        taxDate,
                        docDueDate,
                        numAtCard,
                        comments,
                        idPDN,
                        lignesCommande}, this.AddPurchaseInvoiceOperationCompleted, userState);
        }
        
        private void OnAddPurchaseInvoiceOperationCompleted(object arg) {
            if ((this.AddPurchaseInvoiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddPurchaseInvoiceCompleted(this, new AddPurchaseInvoiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddPayment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddPayment(string SessionID, string cardCode, string docDate, string cashAccount, double cashSum, string taxDate, string vatDate, PayementFacture[] listFactures) {
            object[] results = this.Invoke("AddPayment", new object[] {
                        SessionID,
                        cardCode,
                        docDate,
                        cashAccount,
                        cashSum,
                        taxDate,
                        vatDate,
                        listFactures});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddPaymentAsync(string SessionID, string cardCode, string docDate, string cashAccount, double cashSum, string taxDate, string vatDate, PayementFacture[] listFactures) {
            this.AddPaymentAsync(SessionID, cardCode, docDate, cashAccount, cashSum, taxDate, vatDate, listFactures, null);
        }
        
        /// <remarks/>
        public void AddPaymentAsync(string SessionID, string cardCode, string docDate, string cashAccount, double cashSum, string taxDate, string vatDate, PayementFacture[] listFactures, object userState) {
            if ((this.AddPaymentOperationCompleted == null)) {
                this.AddPaymentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddPaymentOperationCompleted);
            }
            this.InvokeAsync("AddPayment", new object[] {
                        SessionID,
                        cardCode,
                        docDate,
                        cashAccount,
                        cashSum,
                        taxDate,
                        vatDate,
                        listFactures}, this.AddPaymentOperationCompleted, userState);
        }
        
        private void OnAddPaymentOperationCompleted(object arg) {
            if ((this.AddPaymentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddPaymentCompleted(this, new AddPaymentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddPaymentAccount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddPaymentAccount(string SessionID, string cardCode, string docDate, string transfAcct, string transfRef, string transfDate, string transfSum, PayementFacture[] listFactures) {
            object[] results = this.Invoke("AddPaymentAccount", new object[] {
                        SessionID,
                        cardCode,
                        docDate,
                        transfAcct,
                        transfRef,
                        transfDate,
                        transfSum,
                        listFactures});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddPaymentAccountAsync(string SessionID, string cardCode, string docDate, string transfAcct, string transfRef, string transfDate, string transfSum, PayementFacture[] listFactures) {
            this.AddPaymentAccountAsync(SessionID, cardCode, docDate, transfAcct, transfRef, transfDate, transfSum, listFactures, null);
        }
        
        /// <remarks/>
        public void AddPaymentAccountAsync(string SessionID, string cardCode, string docDate, string transfAcct, string transfRef, string transfDate, string transfSum, PayementFacture[] listFactures, object userState) {
            if ((this.AddPaymentAccountOperationCompleted == null)) {
                this.AddPaymentAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddPaymentAccountOperationCompleted);
            }
            this.InvokeAsync("AddPaymentAccount", new object[] {
                        SessionID,
                        cardCode,
                        docDate,
                        transfAcct,
                        transfRef,
                        transfDate,
                        transfSum,
                        listFactures}, this.AddPaymentAccountOperationCompleted, userState);
        }
        
        private void OnAddPaymentAccountOperationCompleted(object arg) {
            if ((this.AddPaymentAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddPaymentAccountCompleted(this, new AddPaymentAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddPaymentCheck", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddPaymentCheck(string SessionID, string cardCode, string docDate, string bankCode, string branch, string accounttNum, string checkSum, string checkNumber, PayementFacture[] listFactures) {
            object[] results = this.Invoke("AddPaymentCheck", new object[] {
                        SessionID,
                        cardCode,
                        docDate,
                        bankCode,
                        branch,
                        accounttNum,
                        checkSum,
                        checkNumber,
                        listFactures});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddPaymentCheckAsync(string SessionID, string cardCode, string docDate, string bankCode, string branch, string accounttNum, string checkSum, string checkNumber, PayementFacture[] listFactures) {
            this.AddPaymentCheckAsync(SessionID, cardCode, docDate, bankCode, branch, accounttNum, checkSum, checkNumber, listFactures, null);
        }
        
        /// <remarks/>
        public void AddPaymentCheckAsync(string SessionID, string cardCode, string docDate, string bankCode, string branch, string accounttNum, string checkSum, string checkNumber, PayementFacture[] listFactures, object userState) {
            if ((this.AddPaymentCheckOperationCompleted == null)) {
                this.AddPaymentCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddPaymentCheckOperationCompleted);
            }
            this.InvokeAsync("AddPaymentCheck", new object[] {
                        SessionID,
                        cardCode,
                        docDate,
                        bankCode,
                        branch,
                        accounttNum,
                        checkSum,
                        checkNumber,
                        listFactures}, this.AddPaymentCheckOperationCompleted, userState);
        }
        
        private void OnAddPaymentCheckOperationCompleted(object arg) {
            if ((this.AddPaymentCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddPaymentCheckCompleted(this, new AddPaymentCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddCreditNote", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddCreditNote(string SessionID, string cardCode, string docDueDate, string taxDate, string vatDate, string numAtCard, string comments, int idFact, LigneAvoir[] lignesAvoir) {
            object[] results = this.Invoke("AddCreditNote", new object[] {
                        SessionID,
                        cardCode,
                        docDueDate,
                        taxDate,
                        vatDate,
                        numAtCard,
                        comments,
                        idFact,
                        lignesAvoir});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddCreditNoteAsync(string SessionID, string cardCode, string docDueDate, string taxDate, string vatDate, string numAtCard, string comments, int idFact, LigneAvoir[] lignesAvoir) {
            this.AddCreditNoteAsync(SessionID, cardCode, docDueDate, taxDate, vatDate, numAtCard, comments, idFact, lignesAvoir, null);
        }
        
        /// <remarks/>
        public void AddCreditNoteAsync(string SessionID, string cardCode, string docDueDate, string taxDate, string vatDate, string numAtCard, string comments, int idFact, LigneAvoir[] lignesAvoir, object userState) {
            if ((this.AddCreditNoteOperationCompleted == null)) {
                this.AddCreditNoteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddCreditNoteOperationCompleted);
            }
            this.InvokeAsync("AddCreditNote", new object[] {
                        SessionID,
                        cardCode,
                        docDueDate,
                        taxDate,
                        vatDate,
                        numAtCard,
                        comments,
                        idFact,
                        lignesAvoir}, this.AddCreditNoteOperationCompleted, userState);
        }
        
        private void OnAddCreditNoteOperationCompleted(object arg) {
            if ((this.AddCreditNoteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCreditNoteCompleted(this, new AddCreditNoteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddPartialCreditNote", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddPartialCreditNote(string SessionID, string cardCode, string docDueDate, string taxDate, string vatDate, string numAtCard, string comments, LigneAvoir[] lignesAvoir) {
            object[] results = this.Invoke("AddPartialCreditNote", new object[] {
                        SessionID,
                        cardCode,
                        docDueDate,
                        taxDate,
                        vatDate,
                        numAtCard,
                        comments,
                        lignesAvoir});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddPartialCreditNoteAsync(string SessionID, string cardCode, string docDueDate, string taxDate, string vatDate, string numAtCard, string comments, LigneAvoir[] lignesAvoir) {
            this.AddPartialCreditNoteAsync(SessionID, cardCode, docDueDate, taxDate, vatDate, numAtCard, comments, lignesAvoir, null);
        }
        
        /// <remarks/>
        public void AddPartialCreditNoteAsync(string SessionID, string cardCode, string docDueDate, string taxDate, string vatDate, string numAtCard, string comments, LigneAvoir[] lignesAvoir, object userState) {
            if ((this.AddPartialCreditNoteOperationCompleted == null)) {
                this.AddPartialCreditNoteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddPartialCreditNoteOperationCompleted);
            }
            this.InvokeAsync("AddPartialCreditNote", new object[] {
                        SessionID,
                        cardCode,
                        docDueDate,
                        taxDate,
                        vatDate,
                        numAtCard,
                        comments,
                        lignesAvoir}, this.AddPartialCreditNoteOperationCompleted, userState);
        }
        
        private void OnAddPartialCreditNoteOperationCompleted(object arg) {
            if ((this.AddPartialCreditNoteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddPartialCreditNoteCompleted(this, new AddPartialCreditNoteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddJournalEntryAS400", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddJournalEntryAS400(string SessionID, string refDate, string taxDate, string dueDate, string memo, string reference1, string reference2, string reference3, LigneJournal[] lignesJournal) {
            object[] results = this.Invoke("AddJournalEntryAS400", new object[] {
                        SessionID,
                        refDate,
                        taxDate,
                        dueDate,
                        memo,
                        reference1,
                        reference2,
                        reference3,
                        lignesJournal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddJournalEntryAS400Async(string SessionID, string refDate, string taxDate, string dueDate, string memo, string reference1, string reference2, string reference3, LigneJournal[] lignesJournal) {
            this.AddJournalEntryAS400Async(SessionID, refDate, taxDate, dueDate, memo, reference1, reference2, reference3, lignesJournal, null);
        }
        
        /// <remarks/>
        public void AddJournalEntryAS400Async(string SessionID, string refDate, string taxDate, string dueDate, string memo, string reference1, string reference2, string reference3, LigneJournal[] lignesJournal, object userState) {
            if ((this.AddJournalEntryAS400OperationCompleted == null)) {
                this.AddJournalEntryAS400OperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddJournalEntryAS400OperationCompleted);
            }
            this.InvokeAsync("AddJournalEntryAS400", new object[] {
                        SessionID,
                        refDate,
                        taxDate,
                        dueDate,
                        memo,
                        reference1,
                        reference2,
                        reference3,
                        lignesJournal}, this.AddJournalEntryAS400OperationCompleted, userState);
        }
        
        private void OnAddJournalEntryAS400OperationCompleted(object arg) {
            if ((this.AddJournalEntryAS400Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddJournalEntryAS400Completed(this, new AddJournalEntryAS400CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddJournalEntry", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddJournalEntry(string SessionID, string refDate, string taxDate, string dueDate, string memo, string reference1, string reference2, string reference3, LigneJournal[] lignesJournal) {
            object[] results = this.Invoke("AddJournalEntry", new object[] {
                        SessionID,
                        refDate,
                        taxDate,
                        dueDate,
                        memo,
                        reference1,
                        reference2,
                        reference3,
                        lignesJournal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddJournalEntryAsync(string SessionID, string refDate, string taxDate, string dueDate, string memo, string reference1, string reference2, string reference3, LigneJournal[] lignesJournal) {
            this.AddJournalEntryAsync(SessionID, refDate, taxDate, dueDate, memo, reference1, reference2, reference3, lignesJournal, null);
        }
        
        /// <remarks/>
        public void AddJournalEntryAsync(string SessionID, string refDate, string taxDate, string dueDate, string memo, string reference1, string reference2, string reference3, LigneJournal[] lignesJournal, object userState) {
            if ((this.AddJournalEntryOperationCompleted == null)) {
                this.AddJournalEntryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddJournalEntryOperationCompleted);
            }
            this.InvokeAsync("AddJournalEntry", new object[] {
                        SessionID,
                        refDate,
                        taxDate,
                        dueDate,
                        memo,
                        reference1,
                        reference2,
                        reference3,
                        lignesJournal}, this.AddJournalEntryOperationCompleted, userState);
        }
        
        private void OnAddJournalEntryOperationCompleted(object arg) {
            if ((this.AddJournalEntryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddJournalEntryCompleted(this, new AddJournalEntryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddGLAccount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddGLAccount(string SessionID, string numCpte, string libelleCpte) {
            object[] results = this.Invoke("AddGLAccount", new object[] {
                        SessionID,
                        numCpte,
                        libelleCpte});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddGLAccountAsync(string SessionID, string numCpte, string libelleCpte) {
            this.AddGLAccountAsync(SessionID, numCpte, libelleCpte, null);
        }
        
        /// <remarks/>
        public void AddGLAccountAsync(string SessionID, string numCpte, string libelleCpte, object userState) {
            if ((this.AddGLAccountOperationCompleted == null)) {
                this.AddGLAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddGLAccountOperationCompleted);
            }
            this.InvokeAsync("AddGLAccount", new object[] {
                        SessionID,
                        numCpte,
                        libelleCpte}, this.AddGLAccountOperationCompleted, userState);
        }
        
        private void OnAddGLAccountOperationCompleted(object arg) {
            if ((this.AddGLAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddGLAccountCompleted(this, new AddGLAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class LigneJournal {
        
        private string accountCodeField;
        
        private string shortNameField;
        
        private string controlAccountField;
        
        private double creditField;
        
        private double debitField;
        
        private string dueDateField;
        
        private string referenceDate1Field;
        
        private string reference1Field;
        
        private string reference2Field;
        
        private string lineMemoField;
        
        private string costingCodeField;
        
        private string costingCode2Field;
        
        private string costingCode3Field;
        
        private string costingCode4Field;
        
        private string costingCode5Field;
        
        private string taxDateField;
        
        private string vATGroupField;
        
        /// <remarks/>
        public string AccountCode {
            get {
                return this.accountCodeField;
            }
            set {
                this.accountCodeField = value;
            }
        }
        
        /// <remarks/>
        public string ShortName {
            get {
                return this.shortNameField;
            }
            set {
                this.shortNameField = value;
            }
        }
        
        /// <remarks/>
        public string ControlAccount {
            get {
                return this.controlAccountField;
            }
            set {
                this.controlAccountField = value;
            }
        }
        
        /// <remarks/>
        public double Credit {
            get {
                return this.creditField;
            }
            set {
                this.creditField = value;
            }
        }
        
        /// <remarks/>
        public double Debit {
            get {
                return this.debitField;
            }
            set {
                this.debitField = value;
            }
        }
        
        /// <remarks/>
        public string DueDate {
            get {
                return this.dueDateField;
            }
            set {
                this.dueDateField = value;
            }
        }
        
        /// <remarks/>
        public string ReferenceDate1 {
            get {
                return this.referenceDate1Field;
            }
            set {
                this.referenceDate1Field = value;
            }
        }
        
        /// <remarks/>
        public string Reference1 {
            get {
                return this.reference1Field;
            }
            set {
                this.reference1Field = value;
            }
        }
        
        /// <remarks/>
        public string Reference2 {
            get {
                return this.reference2Field;
            }
            set {
                this.reference2Field = value;
            }
        }
        
        /// <remarks/>
        public string LineMemo {
            get {
                return this.lineMemoField;
            }
            set {
                this.lineMemoField = value;
            }
        }
        
        /// <remarks/>
        public string CostingCode {
            get {
                return this.costingCodeField;
            }
            set {
                this.costingCodeField = value;
            }
        }
        
        /// <remarks/>
        public string CostingCode2 {
            get {
                return this.costingCode2Field;
            }
            set {
                this.costingCode2Field = value;
            }
        }
        
        /// <remarks/>
        public string CostingCode3 {
            get {
                return this.costingCode3Field;
            }
            set {
                this.costingCode3Field = value;
            }
        }
        
        /// <remarks/>
        public string CostingCode4 {
            get {
                return this.costingCode4Field;
            }
            set {
                this.costingCode4Field = value;
            }
        }
        
        /// <remarks/>
        public string CostingCode5 {
            get {
                return this.costingCode5Field;
            }
            set {
                this.costingCode5Field = value;
            }
        }
        
        /// <remarks/>
        public string TaxDate {
            get {
                return this.taxDateField;
            }
            set {
                this.taxDateField = value;
            }
        }
        
        /// <remarks/>
        public string VATGroup {
            get {
                return this.vATGroupField;
            }
            set {
                this.vATGroupField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class LigneAvoir {
        
        private string itemCodeField;
        
        private string quantityField;
        
        private double unitPriceField;
        
        private string vATGroupField;
        
        private string accountCodeField;
        
        /// <remarks/>
        public string ItemCode {
            get {
                return this.itemCodeField;
            }
            set {
                this.itemCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Quantity {
            get {
                return this.quantityField;
            }
            set {
                this.quantityField = value;
            }
        }
        
        /// <remarks/>
        public double UnitPrice {
            get {
                return this.unitPriceField;
            }
            set {
                this.unitPriceField = value;
            }
        }
        
        /// <remarks/>
        public string VATGroup {
            get {
                return this.vATGroupField;
            }
            set {
                this.vATGroupField = value;
            }
        }
        
        /// <remarks/>
        public string AccountCode {
            get {
                return this.accountCodeField;
            }
            set {
                this.accountCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PayementFacture {
        
        private string docEntryField;
        
        private double paidSumField;
        
        /// <remarks/>
        public string DocEntry {
            get {
                return this.docEntryField;
            }
            set {
                this.docEntryField = value;
            }
        }
        
        /// <remarks/>
        public double PaidSum {
            get {
                return this.paidSumField;
            }
            set {
                this.paidSumField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class LigneCommandeFournisseur {
        
        private string itemCodeField;
        
        private double unitPriceField;
        
        private string quantityField;
        
        private string vATGroupField;
        
        private string accountCodeField;
        
        /// <remarks/>
        public string ItemCode {
            get {
                return this.itemCodeField;
            }
            set {
                this.itemCodeField = value;
            }
        }
        
        /// <remarks/>
        public double UnitPrice {
            get {
                return this.unitPriceField;
            }
            set {
                this.unitPriceField = value;
            }
        }
        
        /// <remarks/>
        public string Quantity {
            get {
                return this.quantityField;
            }
            set {
                this.quantityField = value;
            }
        }
        
        /// <remarks/>
        public string VATGroup {
            get {
                return this.vATGroupField;
            }
            set {
                this.vATGroupField = value;
            }
        }
        
        /// <remarks/>
        public string AccountCode {
            get {
                return this.accountCodeField;
            }
            set {
                this.accountCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class LigneFacture {
        
        private string itemCodeField;
        
        private double unitPriceField;
        
        private string quantityField;
        
        private string vATGroupField;
        
        private string accountCodeField;
        
        /// <remarks/>
        public string ItemCode {
            get {
                return this.itemCodeField;
            }
            set {
                this.itemCodeField = value;
            }
        }
        
        /// <remarks/>
        public double UnitPrice {
            get {
                return this.unitPriceField;
            }
            set {
                this.unitPriceField = value;
            }
        }
        
        /// <remarks/>
        public string Quantity {
            get {
                return this.quantityField;
            }
            set {
                this.quantityField = value;
            }
        }
        
        /// <remarks/>
        public string VATGroup {
            get {
                return this.vATGroupField;
            }
            set {
                this.vATGroupField = value;
            }
        }
        
        /// <remarks/>
        public string AccountCode {
            get {
                return this.accountCodeField;
            }
            set {
                this.accountCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void LoginCompletedEventHandler(object sender, LoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void LogOutCompletedEventHandler(object sender, LogOutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LogOutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LogOutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void AddInvoiceCompletedEventHandler(object sender, AddInvoiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddInvoiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddInvoiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void AddPurchaseOrderCompletedEventHandler(object sender, AddPurchaseOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddPurchaseOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddPurchaseOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void AddPurchaseDeliveryNoteCompletedEventHandler(object sender, AddPurchaseDeliveryNoteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddPurchaseDeliveryNoteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddPurchaseDeliveryNoteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void AddPurchaseInvoiceCompletedEventHandler(object sender, AddPurchaseInvoiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddPurchaseInvoiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddPurchaseInvoiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void AddPaymentCompletedEventHandler(object sender, AddPaymentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddPaymentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddPaymentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void AddPaymentAccountCompletedEventHandler(object sender, AddPaymentAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddPaymentAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddPaymentAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void AddPaymentCheckCompletedEventHandler(object sender, AddPaymentCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddPaymentCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddPaymentCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void AddCreditNoteCompletedEventHandler(object sender, AddCreditNoteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddCreditNoteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddCreditNoteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void AddPartialCreditNoteCompletedEventHandler(object sender, AddPartialCreditNoteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddPartialCreditNoteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddPartialCreditNoteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void AddJournalEntryAS400CompletedEventHandler(object sender, AddJournalEntryAS400CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddJournalEntryAS400CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddJournalEntryAS400CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void AddJournalEntryCompletedEventHandler(object sender, AddJournalEntryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddJournalEntryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddJournalEntryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void AddGLAccountCompletedEventHandler(object sender, AddGLAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddGLAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddGLAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591