#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.17929
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VesselStopOverData
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="VSOMBD")]
	public partial class VSOMClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Définitions de méthodes d'extensibilité
    partial void OnCreated();
    partial void InsertACCONIER(ACCONIER instance);
    partial void UpdateACCONIER(ACCONIER instance);
    partial void DeleteACCONIER(ACCONIER instance);
    partial void InsertARMATEUR(ARMATEUR instance);
    partial void UpdateARMATEUR(ARMATEUR instance);
    partial void DeleteARMATEUR(ARMATEUR instance);
    partial void InsertARTICLE(ARTICLE instance);
    partial void UpdateARTICLE(ARTICLE instance);
    partial void DeleteARTICLE(ARTICLE instance);
    partial void InsertBON_ENLEVEMENT(BON_ENLEVEMENT instance);
    partial void UpdateBON_ENLEVEMENT(BON_ENLEVEMENT instance);
    partial void DeleteBON_ENLEVEMENT(BON_ENLEVEMENT instance);
    partial void InsertCODE_TVA(CODE_TVA instance);
    partial void UpdateCODE_TVA(CODE_TVA instance);
    partial void DeleteCODE_TVA(CODE_TVA instance);
    partial void InsertCUBAGE(CUBAGE instance);
    partial void UpdateCUBAGE(CUBAGE instance);
    partial void DeleteCUBAGE(CUBAGE instance);
    partial void InsertDEMANDE_CAUTION(DEMANDE_CAUTION instance);
    partial void UpdateDEMANDE_CAUTION(DEMANDE_CAUTION instance);
    partial void DeleteDEMANDE_CAUTION(DEMANDE_CAUTION instance);
    partial void InsertDEMANDE_LIVRAISON(DEMANDE_LIVRAISON instance);
    partial void UpdateDEMANDE_LIVRAISON(DEMANDE_LIVRAISON instance);
    partial void DeleteDEMANDE_LIVRAISON(DEMANDE_LIVRAISON instance);
    partial void InsertDROIT(DROIT instance);
    partial void UpdateDROIT(DROIT instance);
    partial void DeleteDROIT(DROIT instance);
    partial void InsertEMPLACEMENT(EMPLACEMENT instance);
    partial void UpdateEMPLACEMENT(EMPLACEMENT instance);
    partial void DeleteEMPLACEMENT(EMPLACEMENT instance);
    partial void InsertFACTURE_DIT(FACTURE_DIT instance);
    partial void UpdateFACTURE_DIT(FACTURE_DIT instance);
    partial void DeleteFACTURE_DIT(FACTURE_DIT instance);
    partial void InsertFAMILLE_ARTICLE(FAMILLE_ARTICLE instance);
    partial void UpdateFAMILLE_ARTICLE(FAMILLE_ARTICLE instance);
    partial void DeleteFAMILLE_ARTICLE(FAMILLE_ARTICLE instance);
    partial void InsertJOURNAL(JOURNAL instance);
    partial void UpdateJOURNAL(JOURNAL instance);
    partial void DeleteJOURNAL(JOURNAL instance);
    partial void InsertLIEU(LIEU instance);
    partial void UpdateLIEU(LIEU instance);
    partial void DeleteLIEU(LIEU instance);
    partial void InsertLIGNE_PROFORMA(LIGNE_PROFORMA instance);
    partial void UpdateLIGNE_PROFORMA(LIGNE_PROFORMA instance);
    partial void DeleteLIGNE_PROFORMA(LIGNE_PROFORMA instance);
    partial void InsertLIGNE_SERVICE(LIGNE_SERVICE instance);
    partial void UpdateLIGNE_SERVICE(LIGNE_SERVICE instance);
    partial void DeleteLIGNE_SERVICE(LIGNE_SERVICE instance);
    partial void InsertNAVIRE(NAVIRE instance);
    partial void UpdateNAVIRE(NAVIRE instance);
    partial void DeleteNAVIRE(NAVIRE instance);
    partial void InsertOCCUPATION(OCCUPATION instance);
    partial void UpdateOCCUPATION(OCCUPATION instance);
    partial void DeleteOCCUPATION(OCCUPATION instance);
    partial void InsertOPERATION(OPERATION instance);
    partial void UpdateOPERATION(OPERATION instance);
    partial void DeleteOPERATION(OPERATION instance);
    partial void InsertOPERATION_ARMATEUR(OPERATION_ARMATEUR instance);
    partial void UpdateOPERATION_ARMATEUR(OPERATION_ARMATEUR instance);
    partial void DeleteOPERATION_ARMATEUR(OPERATION_ARMATEUR instance);
    partial void InsertOPERATION_CONTENEUR(OPERATION_CONTENEUR instance);
    partial void UpdateOPERATION_CONTENEUR(OPERATION_CONTENEUR instance);
    partial void DeleteOPERATION_CONTENEUR(OPERATION_CONTENEUR instance);
    partial void InsertOPERATION_CONVENTIONNEL(OPERATION_CONVENTIONNEL instance);
    partial void UpdateOPERATION_CONVENTIONNEL(OPERATION_CONVENTIONNEL instance);
    partial void DeleteOPERATION_CONVENTIONNEL(OPERATION_CONVENTIONNEL instance);
    partial void InsertOPERATION_VEHICULE(OPERATION_VEHICULE instance);
    partial void UpdateOPERATION_VEHICULE(OPERATION_VEHICULE instance);
    partial void DeleteOPERATION_VEHICULE(OPERATION_VEHICULE instance);
    partial void InsertORDRE_SERVICE(ORDRE_SERVICE instance);
    partial void UpdateORDRE_SERVICE(ORDRE_SERVICE instance);
    partial void DeleteORDRE_SERVICE(ORDRE_SERVICE instance);
    partial void InsertPARAMETRE(PARAMETRE instance);
    partial void UpdatePARAMETRE(PARAMETRE instance);
    partial void DeletePARAMETRE(PARAMETRE instance);
    partial void InsertPAYEMENT(PAYEMENT instance);
    partial void UpdatePAYEMENT(PAYEMENT instance);
    partial void DeletePAYEMENT(PAYEMENT instance);
    partial void InsertPORT(PORT instance);
    partial void UpdatePORT(PORT instance);
    partial void DeletePORT(PORT instance);
    partial void InsertTYPE_CONVENTIONNEL(TYPE_CONVENTIONNEL instance);
    partial void UpdateTYPE_CONVENTIONNEL(TYPE_CONVENTIONNEL instance);
    partial void DeleteTYPE_CONVENTIONNEL(TYPE_CONVENTIONNEL instance);
    partial void InsertTYPE_OPERATION(TYPE_OPERATION instance);
    partial void UpdateTYPE_OPERATION(TYPE_OPERATION instance);
    partial void DeleteTYPE_OPERATION(TYPE_OPERATION instance);
    partial void InsertTYPE_SINISTRE(TYPE_SINISTRE instance);
    partial void UpdateTYPE_SINISTRE(TYPE_SINISTRE instance);
    partial void DeleteTYPE_SINISTRE(TYPE_SINISTRE instance);
    partial void InsertTYPE_VEHICULE(TYPE_VEHICULE instance);
    partial void UpdateTYPE_VEHICULE(TYPE_VEHICULE instance);
    partial void DeleteTYPE_VEHICULE(TYPE_VEHICULE instance);
    partial void InsertUTILISATEUR(UTILISATEUR instance);
    partial void UpdateUTILISATEUR(UTILISATEUR instance);
    partial void DeleteUTILISATEUR(UTILISATEUR instance);
    partial void InsertESCALE(ESCALE instance);
    partial void UpdateESCALE(ESCALE instance);
    partial void DeleteESCALE(ESCALE instance);
    partial void InsertCLIENT(CLIENT instance);
    partial void UpdateCLIENT(CLIENT instance);
    partial void DeleteCLIENT(CLIENT instance);
    partial void InsertDEMANDE_REDUCTION(DEMANDE_REDUCTION instance);
    partial void UpdateDEMANDE_REDUCTION(DEMANDE_REDUCTION instance);
    partial void DeleteDEMANDE_REDUCTION(DEMANDE_REDUCTION instance);
    partial void InsertTYPE_CONTENEUR(TYPE_CONTENEUR instance);
    partial void UpdateTYPE_CONTENEUR(TYPE_CONTENEUR instance);
    partial void DeleteTYPE_CONTENEUR(TYPE_CONTENEUR instance);
    partial void InsertEXTENSION_FRANCHISE(EXTENSION_FRANCHISE instance);
    partial void UpdateEXTENSION_FRANCHISE(EXTENSION_FRANCHISE instance);
    partial void DeleteEXTENSION_FRANCHISE(EXTENSION_FRANCHISE instance);
    partial void InsertMANIFESTE(MANIFESTE instance);
    partial void UpdateMANIFESTE(MANIFESTE instance);
    partial void DeleteMANIFESTE(MANIFESTE instance);
    partial void InsertOPERATION_CONNAISSEMENT(OPERATION_CONNAISSEMENT instance);
    partial void UpdateOPERATION_CONNAISSEMENT(OPERATION_CONNAISSEMENT instance);
    partial void DeleteOPERATION_CONNAISSEMENT(OPERATION_CONNAISSEMENT instance);
    partial void InsertTYPE_VISITE(TYPE_VISITE instance);
    partial void UpdateTYPE_VISITE(TYPE_VISITE instance);
    partial void DeleteTYPE_VISITE(TYPE_VISITE instance);
    partial void InsertVISITE_VEHICULE(VISITE_VEHICULE instance);
    partial void UpdateVISITE_VEHICULE(VISITE_VEHICULE instance);
    partial void DeleteVISITE_VEHICULE(VISITE_VEHICULE instance);
    partial void InsertDEMANDE_VISITE(DEMANDE_VISITE instance);
    partial void UpdateDEMANDE_VISITE(DEMANDE_VISITE instance);
    partial void DeleteDEMANDE_VISITE(DEMANDE_VISITE instance);
    partial void InsertHIST_CONNAISSEMENT(HIST_CONNAISSEMENT instance);
    partial void UpdateHIST_CONNAISSEMENT(HIST_CONNAISSEMENT instance);
    partial void DeleteHIST_CONNAISSEMENT(HIST_CONNAISSEMENT instance);
    partial void InsertOPERATION_ESCALE(OPERATION_ESCALE instance);
    partial void UpdateOPERATION_ESCALE(OPERATION_ESCALE instance);
    partial void DeleteOPERATION_ESCALE(OPERATION_ESCALE instance);
    partial void InsertOPERATION_MANIFESTE(OPERATION_MANIFESTE instance);
    partial void UpdateOPERATION_MANIFESTE(OPERATION_MANIFESTE instance);
    partial void DeleteOPERATION_MANIFESTE(OPERATION_MANIFESTE instance);
    partial void InsertLIGNE_AVOIR(LIGNE_AVOIR instance);
    partial void UpdateLIGNE_AVOIR(LIGNE_AVOIR instance);
    partial void DeleteLIGNE_AVOIR(LIGNE_AVOIR instance);
    partial void InsertCUBAGE_VEHICULE(CUBAGE_VEHICULE instance);
    partial void UpdateCUBAGE_VEHICULE(CUBAGE_VEHICULE instance);
    partial void DeleteCUBAGE_VEHICULE(CUBAGE_VEHICULE instance);
    partial void InsertELEMENT_FACTURATION(ELEMENT_FACTURATION instance);
    partial void UpdateELEMENT_FACTURATION(ELEMENT_FACTURATION instance);
    partial void DeleteELEMENT_FACTURATION(ELEMENT_FACTURATION instance);
    partial void InsertSINISTRE(SINISTRE instance);
    partial void UpdateSINISTRE(SINISTRE instance);
    partial void DeleteSINISTRE(SINISTRE instance);
    partial void InsertOPERATION_SINISTRE(OPERATION_SINISTRE instance);
    partial void UpdateOPERATION_SINISTRE(OPERATION_SINISTRE instance);
    partial void DeleteOPERATION_SINISTRE(OPERATION_SINISTRE instance);
    partial void InsertAVOIR(AVOIR instance);
    partial void UpdateAVOIR(AVOIR instance);
    partial void DeleteAVOIR(AVOIR instance);
    partial void InsertCONNAISSEMENT(CONNAISSEMENT instance);
    partial void UpdateCONNAISSEMENT(CONNAISSEMENT instance);
    partial void DeleteCONNAISSEMENT(CONNAISSEMENT instance);
    partial void InsertPROFORMA(PROFORMA instance);
    partial void UpdatePROFORMA(PROFORMA instance);
    partial void DeletePROFORMA(PROFORMA instance);
    partial void InsertFACTURE(FACTURE instance);
    partial void UpdateFACTURE(FACTURE instance);
    partial void DeleteFACTURE(FACTURE instance);
    partial void InsertVEHICULE(VEHICULE instance);
    partial void UpdateVEHICULE(VEHICULE instance);
    partial void DeleteVEHICULE(VEHICULE instance);
    partial void InsertCONTENEUR(CONTENEUR instance);
    partial void UpdateCONTENEUR(CONTENEUR instance);
    partial void DeleteCONTENEUR(CONTENEUR instance);
    partial void InsertCONVENTIONNEL(CONVENTIONNEL instance);
    partial void UpdateCONVENTIONNEL(CONVENTIONNEL instance);
    partial void DeleteCONVENTIONNEL(CONVENTIONNEL instance);
    partial void InsertBON_SORTIE(BON_SORTIE instance);
    partial void UpdateBON_SORTIE(BON_SORTIE instance);
    partial void DeleteBON_SORTIE(BON_SORTIE instance);
    partial void InsertLIGNE_PRIX(LIGNE_PRIX instance);
    partial void UpdateLIGNE_PRIX(LIGNE_PRIX instance);
    partial void DeleteLIGNE_PRIX(LIGNE_PRIX instance);
    partial void InsertFOURNISSEUR(FOURNISSEUR instance);
    partial void UpdateFOURNISSEUR(FOURNISSEUR instance);
    partial void DeleteFOURNISSEUR(FOURNISSEUR instance);
    partial void InsertMAFI(MAFI instance);
    partial void UpdateMAFI(MAFI instance);
    partial void DeleteMAFI(MAFI instance);
    partial void InsertOPERATION_MAFI(OPERATION_MAFI instance);
    partial void UpdateOPERATION_MAFI(OPERATION_MAFI instance);
    partial void DeleteOPERATION_MAFI(OPERATION_MAFI instance);
    partial void InsertNOTE(NOTE instance);
    partial void UpdateNOTE(NOTE instance);
    partial void DeleteNOTE(NOTE instance);
    partial void InsertBANQUE(BANQUE instance);
    partial void UpdateBANQUE(BANQUE instance);
    partial void DeleteBANQUE(BANQUE instance);
    partial void InsertLIGNE_PAYEMENT(LIGNE_PAYEMENT instance);
    partial void UpdateLIGNE_PAYEMENT(LIGNE_PAYEMENT instance);
    partial void DeleteLIGNE_PAYEMENT(LIGNE_PAYEMENT instance);
    partial void InsertFACTURE_ARMATEUR(FACTURE_ARMATEUR instance);
    partial void UpdateFACTURE_ARMATEUR(FACTURE_ARMATEUR instance);
    partial void DeleteFACTURE_ARMATEUR(FACTURE_ARMATEUR instance);
    partial void InsertLIGNE_FACTURE_ARMATEUR(LIGNE_FACTURE_ARMATEUR instance);
    partial void UpdateLIGNE_FACTURE_ARMATEUR(LIGNE_FACTURE_ARMATEUR instance);
    partial void DeleteLIGNE_FACTURE_ARMATEUR(LIGNE_FACTURE_ARMATEUR instance);
    partial void InsertMOUVEMENT_TC(MOUVEMENT_TC instance);
    partial void UpdateMOUVEMENT_TC(MOUVEMENT_TC instance);
    partial void DeleteMOUVEMENT_TC(MOUVEMENT_TC instance);
    partial void InsertCONTENEUR_TC(CONTENEUR_TC instance);
    partial void UpdateCONTENEUR_TC(CONTENEUR_TC instance);
    partial void DeleteCONTENEUR_TC(CONTENEUR_TC instance);
    partial void InsertPARC(PARC instance);
    partial void UpdatePARC(PARC instance);
    partial void DeletePARC(PARC instance);
    partial void InsertDISPOSITION_CONTENEUR(DISPOSITION_CONTENEUR instance);
    partial void UpdateDISPOSITION_CONTENEUR(DISPOSITION_CONTENEUR instance);
    partial void DeleteDISPOSITION_CONTENEUR(DISPOSITION_CONTENEUR instance);
    partial void InsertINTERCHANGE(INTERCHANGE instance);
    partial void UpdateINTERCHANGE(INTERCHANGE instance);
    partial void DeleteINTERCHANGE(INTERCHANGE instance);
    partial void InsertFACTURE_SOCOMAR(FACTURE_SOCOMAR instance);
    partial void UpdateFACTURE_SOCOMAR(FACTURE_SOCOMAR instance);
    partial void DeleteFACTURE_SOCOMAR(FACTURE_SOCOMAR instance);
    partial void InsertLIGNE_FACTURE_SOCOMAR(LIGNE_FACTURE_SOCOMAR instance);
    partial void UpdateLIGNE_FACTURE_SOCOMAR(LIGNE_FACTURE_SOCOMAR instance);
    partial void DeleteLIGNE_FACTURE_SOCOMAR(LIGNE_FACTURE_SOCOMAR instance);
    partial void InsertREQUESTS(REQUESTS instance);
    partial void UpdateREQUESTS(REQUESTS instance);
    partial void DeleteREQUESTS(REQUESTS instance);
    partial void InsertREQUESTS_DETAILS(REQUESTS_DETAILS instance);
    partial void UpdateREQUESTS_DETAILS(REQUESTS_DETAILS instance);
    partial void DeleteREQUESTS_DETAILS(REQUESTS_DETAILS instance);
    partial void InsertPSION_SORTIES(PSION_SORTIES instance);
    partial void UpdatePSION_SORTIES(PSION_SORTIES instance);
    partial void DeletePSION_SORTIES(PSION_SORTIES instance);
    partial void InsertTRANSACTIONS(TRANSACTIONS instance);
    partial void UpdateTRANSACTIONS(TRANSACTIONS instance);
    partial void DeleteTRANSACTIONS(TRANSACTIONS instance);
    partial void InsertAVOIR_SPOT(AVOIR_SPOT instance);
    partial void UpdateAVOIR_SPOT(AVOIR_SPOT instance);
    partial void DeleteAVOIR_SPOT(AVOIR_SPOT instance);
    partial void InsertLIGNE_AVOIR_SPOT(LIGNE_AVOIR_SPOT instance);
    partial void UpdateLIGNE_AVOIR_SPOT(LIGNE_AVOIR_SPOT instance);
    partial void DeleteLIGNE_AVOIR_SPOT(LIGNE_AVOIR_SPOT instance);
    partial void InsertRMT_FACTURES(RMT_FACTURES instance);
    partial void UpdateRMT_FACTURES(RMT_FACTURES instance);
    partial void DeleteRMT_FACTURES(RMT_FACTURES instance);
    partial void InsertRMT_CONNAISSEMENT(RMT_CONNAISSEMENT instance);
    partial void UpdateRMT_CONNAISSEMENT(RMT_CONNAISSEMENT instance);
    partial void DeleteRMT_CONNAISSEMENT(RMT_CONNAISSEMENT instance);
    partial void InsertRMT_ELEMENT_FACTURE(RMT_ELEMENT_FACTURE instance);
    partial void UpdateRMT_ELEMENT_FACTURE(RMT_ELEMENT_FACTURE instance);
    partial void DeleteRMT_ELEMENT_FACTURE(RMT_ELEMENT_FACTURE instance);
    partial void InsertRMT_AVOIR(RMT_AVOIR instance);
    partial void UpdateRMT_AVOIR(RMT_AVOIR instance);
    partial void DeleteRMT_AVOIR(RMT_AVOIR instance);
    partial void InsertRMT_PAYEMENT(RMT_PAYEMENT instance);
    partial void UpdateRMT_PAYEMENT(RMT_PAYEMENT instance);
    partial void DeleteRMT_PAYEMENT(RMT_PAYEMENT instance);
    partial void InsertCLIENT_FIN_COND(CLIENT_FIN_COND instance);
    partial void UpdateCLIENT_FIN_COND(CLIENT_FIN_COND instance);
    partial void DeleteCLIENT_FIN_COND(CLIENT_FIN_COND instance);
    partial void InsertCLIENT_M_PAY(CLIENT_M_PAY instance);
    partial void UpdateCLIENT_M_PAY(CLIENT_M_PAY instance);
    partial void DeleteCLIENT_M_PAY(CLIENT_M_PAY instance);
    partial void InsertFACTURE_CTRL(FACTURE_CTRL instance);
    partial void UpdateFACTURE_CTRL(FACTURE_CTRL instance);
    partial void DeleteFACTURE_CTRL(FACTURE_CTRL instance);
    #endregion
		
		public VSOMClassesDataContext() : 
				base(global::VesselStopOverData.Properties.Settings.Default.VSOMBDConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public VSOMClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public VSOMClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public VSOMClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public VSOMClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ACCONIER> ACCONIER
		{
			get
			{
				return this.GetTable<ACCONIER>();
			}
		}
		
		public System.Data.Linq.Table<ARMATEUR> ARMATEUR
		{
			get
			{
				return this.GetTable<ARMATEUR>();
			}
		}
		
		public System.Data.Linq.Table<ARTICLE> ARTICLE
		{
			get
			{
				return this.GetTable<ARTICLE>();
			}
		}
		
		public System.Data.Linq.Table<BON_ENLEVEMENT> BON_ENLEVEMENT
		{
			get
			{
				return this.GetTable<BON_ENLEVEMENT>();
			}
		}
		
		public System.Data.Linq.Table<CODE_TVA> CODE_TVA
		{
			get
			{
				return this.GetTable<CODE_TVA>();
			}
		}
		
		public System.Data.Linq.Table<CUBAGE> CUBAGE
		{
			get
			{
				return this.GetTable<CUBAGE>();
			}
		}
		
		public System.Data.Linq.Table<DEMANDE_CAUTION> DEMANDE_CAUTION
		{
			get
			{
				return this.GetTable<DEMANDE_CAUTION>();
			}
		}
		
		public System.Data.Linq.Table<DEMANDE_LIVRAISON> DEMANDE_LIVRAISON
		{
			get
			{
				return this.GetTable<DEMANDE_LIVRAISON>();
			}
		}
		
		public System.Data.Linq.Table<DROIT> DROIT
		{
			get
			{
				return this.GetTable<DROIT>();
			}
		}
		
		public System.Data.Linq.Table<EMPLACEMENT> EMPLACEMENT
		{
			get
			{
				return this.GetTable<EMPLACEMENT>();
			}
		}
		
		public System.Data.Linq.Table<FACTURE_DIT> FACTURE_DIT
		{
			get
			{
				return this.GetTable<FACTURE_DIT>();
			}
		}
		
		public System.Data.Linq.Table<FAMILLE_ARTICLE> FAMILLE_ARTICLE
		{
			get
			{
				return this.GetTable<FAMILLE_ARTICLE>();
			}
		}
		
		public System.Data.Linq.Table<JOURNAL> JOURNAL
		{
			get
			{
				return this.GetTable<JOURNAL>();
			}
		}
		
		public System.Data.Linq.Table<LIEU> LIEU
		{
			get
			{
				return this.GetTable<LIEU>();
			}
		}
		
		public System.Data.Linq.Table<LIGNE_PROFORMA> LIGNE_PROFORMA
		{
			get
			{
				return this.GetTable<LIGNE_PROFORMA>();
			}
		}
		
		public System.Data.Linq.Table<LIGNE_SERVICE> LIGNE_SERVICE
		{
			get
			{
				return this.GetTable<LIGNE_SERVICE>();
			}
		}
		
		public System.Data.Linq.Table<NAVIRE> NAVIRE
		{
			get
			{
				return this.GetTable<NAVIRE>();
			}
		}
		
		public System.Data.Linq.Table<OCCUPATION> OCCUPATION
		{
			get
			{
				return this.GetTable<OCCUPATION>();
			}
		}
		
		public System.Data.Linq.Table<OPERATION> OPERATION
		{
			get
			{
				return this.GetTable<OPERATION>();
			}
		}
		
		public System.Data.Linq.Table<OPERATION_ARMATEUR> OPERATION_ARMATEUR
		{
			get
			{
				return this.GetTable<OPERATION_ARMATEUR>();
			}
		}
		
		public System.Data.Linq.Table<OPERATION_CONTENEUR> OPERATION_CONTENEUR
		{
			get
			{
				return this.GetTable<OPERATION_CONTENEUR>();
			}
		}
		
		public System.Data.Linq.Table<OPERATION_CONVENTIONNEL> OPERATION_CONVENTIONNEL
		{
			get
			{
				return this.GetTable<OPERATION_CONVENTIONNEL>();
			}
		}
		
		public System.Data.Linq.Table<OPERATION_VEHICULE> OPERATION_VEHICULE
		{
			get
			{
				return this.GetTable<OPERATION_VEHICULE>();
			}
		}
		
		public System.Data.Linq.Table<ORDRE_SERVICE> ORDRE_SERVICE
		{
			get
			{
				return this.GetTable<ORDRE_SERVICE>();
			}
		}
		
		public System.Data.Linq.Table<PARAMETRE> PARAMETRE
		{
			get
			{
				return this.GetTable<PARAMETRE>();
			}
		}
		
		public System.Data.Linq.Table<PAYEMENT> PAYEMENT
		{
			get
			{
				return this.GetTable<PAYEMENT>();
			}
		}
		
		public System.Data.Linq.Table<PORT> PORT
		{
			get
			{
				return this.GetTable<PORT>();
			}
		}
		
		public System.Data.Linq.Table<TYPE_CONVENTIONNEL> TYPE_CONVENTIONNEL
		{
			get
			{
				return this.GetTable<TYPE_CONVENTIONNEL>();
			}
		}
		
		public System.Data.Linq.Table<TYPE_OPERATION> TYPE_OPERATION
		{
			get
			{
				return this.GetTable<TYPE_OPERATION>();
			}
		}
		
		public System.Data.Linq.Table<TYPE_SINISTRE> TYPE_SINISTRE
		{
			get
			{
				return this.GetTable<TYPE_SINISTRE>();
			}
		}
		
		public System.Data.Linq.Table<TYPE_VEHICULE> TYPE_VEHICULE
		{
			get
			{
				return this.GetTable<TYPE_VEHICULE>();
			}
		}
		
		public System.Data.Linq.Table<UTILISATEUR> UTILISATEUR
		{
			get
			{
				return this.GetTable<UTILISATEUR>();
			}
		}
		
		public System.Data.Linq.Table<ESCALE> ESCALE
		{
			get
			{
				return this.GetTable<ESCALE>();
			}
		}
		
		public System.Data.Linq.Table<CLIENT> CLIENT
		{
			get
			{
				return this.GetTable<CLIENT>();
			}
		}
		
		public System.Data.Linq.Table<DEMANDE_REDUCTION> DEMANDE_REDUCTION
		{
			get
			{
				return this.GetTable<DEMANDE_REDUCTION>();
			}
		}
		
		public System.Data.Linq.Table<TYPE_CONTENEUR> TYPE_CONTENEUR
		{
			get
			{
				return this.GetTable<TYPE_CONTENEUR>();
			}
		}
		
		public System.Data.Linq.Table<EXTENSION_FRANCHISE> EXTENSION_FRANCHISE
		{
			get
			{
				return this.GetTable<EXTENSION_FRANCHISE>();
			}
		}
		
		public System.Data.Linq.Table<MANIFESTE> MANIFESTE
		{
			get
			{
				return this.GetTable<MANIFESTE>();
			}
		}
		
		public System.Data.Linq.Table<OPERATION_CONNAISSEMENT> OPERATION_CONNAISSEMENT
		{
			get
			{
				return this.GetTable<OPERATION_CONNAISSEMENT>();
			}
		}
		
		public System.Data.Linq.Table<TYPE_VISITE> TYPE_VISITE
		{
			get
			{
				return this.GetTable<TYPE_VISITE>();
			}
		}
		
		public System.Data.Linq.Table<VISITE_VEHICULE> VISITE_VEHICULE
		{
			get
			{
				return this.GetTable<VISITE_VEHICULE>();
			}
		}
		
		public System.Data.Linq.Table<DEMANDE_VISITE> DEMANDE_VISITE
		{
			get
			{
				return this.GetTable<DEMANDE_VISITE>();
			}
		}
		
		public System.Data.Linq.Table<HIST_CONNAISSEMENT> HIST_CONNAISSEMENT
		{
			get
			{
				return this.GetTable<HIST_CONNAISSEMENT>();
			}
		}
		
		public System.Data.Linq.Table<OPERATION_ESCALE> OPERATION_ESCALE
		{
			get
			{
				return this.GetTable<OPERATION_ESCALE>();
			}
		}
		
		public System.Data.Linq.Table<OPERATION_MANIFESTE> OPERATION_MANIFESTE
		{
			get
			{
				return this.GetTable<OPERATION_MANIFESTE>();
			}
		}
		
		public System.Data.Linq.Table<LIGNE_AVOIR> LIGNE_AVOIR
		{
			get
			{
				return this.GetTable<LIGNE_AVOIR>();
			}
		}
		
		public System.Data.Linq.Table<CUBAGE_VEHICULE> CUBAGE_VEHICULE
		{
			get
			{
				return this.GetTable<CUBAGE_VEHICULE>();
			}
		}
		
		public System.Data.Linq.Table<ELEMENT_FACTURATION> ELEMENT_FACTURATION
		{
			get
			{
				return this.GetTable<ELEMENT_FACTURATION>();
			}
		}
		
		public System.Data.Linq.Table<SINISTRE> SINISTRE
		{
			get
			{
				return this.GetTable<SINISTRE>();
			}
		}
		
		public System.Data.Linq.Table<OPERATION_SINISTRE> OPERATION_SINISTRE
		{
			get
			{
				return this.GetTable<OPERATION_SINISTRE>();
			}
		}
		
		public System.Data.Linq.Table<AVOIR> AVOIR
		{
			get
			{
				return this.GetTable<AVOIR>();
			}
		}
		
		public System.Data.Linq.Table<CONNAISSEMENT> CONNAISSEMENT
		{
			get
			{
				return this.GetTable<CONNAISSEMENT>();
			}
		}
		
		public System.Data.Linq.Table<PROFORMA> PROFORMA
		{
			get
			{
				return this.GetTable<PROFORMA>();
			}
		}
		
		public System.Data.Linq.Table<FACTURE> FACTURE
		{
			get
			{
				return this.GetTable<FACTURE>();
			}
		}
		
		public System.Data.Linq.Table<VEHICULE> VEHICULE
		{
			get
			{
				return this.GetTable<VEHICULE>();
			}
		}
		
		public System.Data.Linq.Table<CONTENEUR> CONTENEUR
		{
			get
			{
				return this.GetTable<CONTENEUR>();
			}
		}
		
		public System.Data.Linq.Table<CONVENTIONNEL> CONVENTIONNEL
		{
			get
			{
				return this.GetTable<CONVENTIONNEL>();
			}
		}
		
		public System.Data.Linq.Table<BON_SORTIE> BON_SORTIE
		{
			get
			{
				return this.GetTable<BON_SORTIE>();
			}
		}
		
		public System.Data.Linq.Table<LIGNE_PRIX> LIGNE_PRIX
		{
			get
			{
				return this.GetTable<LIGNE_PRIX>();
			}
		}
		
		public System.Data.Linq.Table<FOURNISSEUR> FOURNISSEUR
		{
			get
			{
				return this.GetTable<FOURNISSEUR>();
			}
		}
		
		public System.Data.Linq.Table<MAFI> MAFI
		{
			get
			{
				return this.GetTable<MAFI>();
			}
		}
		
		public System.Data.Linq.Table<OPERATION_MAFI> OPERATION_MAFI
		{
			get
			{
				return this.GetTable<OPERATION_MAFI>();
			}
		}
		
		public System.Data.Linq.Table<NOTE> NOTE
		{
			get
			{
				return this.GetTable<NOTE>();
			}
		}
		
		public System.Data.Linq.Table<BANQUE> BANQUE
		{
			get
			{
				return this.GetTable<BANQUE>();
			}
		}
		
		public System.Data.Linq.Table<LIGNE_PAYEMENT> LIGNE_PAYEMENT
		{
			get
			{
				return this.GetTable<LIGNE_PAYEMENT>();
			}
		}
		
		public System.Data.Linq.Table<FACTURE_ARMATEUR> FACTURE_ARMATEUR
		{
			get
			{
				return this.GetTable<FACTURE_ARMATEUR>();
			}
		}
		
		public System.Data.Linq.Table<LIGNE_FACTURE_ARMATEUR> LIGNE_FACTURE_ARMATEUR
		{
			get
			{
				return this.GetTable<LIGNE_FACTURE_ARMATEUR>();
			}
		}
		
		public System.Data.Linq.Table<MOUVEMENT_TC> MOUVEMENT_TC
		{
			get
			{
				return this.GetTable<MOUVEMENT_TC>();
			}
		}
		
		public System.Data.Linq.Table<CONTENEUR_TC> CONTENEUR_TC
		{
			get
			{
				return this.GetTable<CONTENEUR_TC>();
			}
		}
		
		public System.Data.Linq.Table<PARC> PARC
		{
			get
			{
				return this.GetTable<PARC>();
			}
		}
		
		public System.Data.Linq.Table<DISPOSITION_CONTENEUR> DISPOSITION_CONTENEUR
		{
			get
			{
				return this.GetTable<DISPOSITION_CONTENEUR>();
			}
		}
		
		public System.Data.Linq.Table<INTERCHANGE> INTERCHANGE
		{
			get
			{
				return this.GetTable<INTERCHANGE>();
			}
		}
		
		public System.Data.Linq.Table<FACTURE_SOCOMAR> FACTURE_SOCOMAR
		{
			get
			{
				return this.GetTable<FACTURE_SOCOMAR>();
			}
		}
		
		public System.Data.Linq.Table<LIGNE_FACTURE_SOCOMAR> LIGNE_FACTURE_SOCOMAR
		{
			get
			{
				return this.GetTable<LIGNE_FACTURE_SOCOMAR>();
			}
		}
		
		public System.Data.Linq.Table<REQUESTS> REQUESTS
		{
			get
			{
				return this.GetTable<REQUESTS>();
			}
		}
		
		public System.Data.Linq.Table<REQUESTS_DETAILS> REQUESTS_DETAILS
		{
			get
			{
				return this.GetTable<REQUESTS_DETAILS>();
			}
		}
		
		public System.Data.Linq.Table<PSION_SORTIES> PSION_SORTIES
		{
			get
			{
				return this.GetTable<PSION_SORTIES>();
			}
		}
		
		public System.Data.Linq.Table<TRANSACTIONS> TRANSACTIONS
		{
			get
			{
				return this.GetTable<TRANSACTIONS>();
			}
		}
		
		public System.Data.Linq.Table<AVOIR_SPOT> AVOIR_SPOT
		{
			get
			{
				return this.GetTable<AVOIR_SPOT>();
			}
		}
		
		public System.Data.Linq.Table<LIGNE_AVOIR_SPOT> LIGNE_AVOIR_SPOT
		{
			get
			{
				return this.GetTable<LIGNE_AVOIR_SPOT>();
			}
		}
		
		public System.Data.Linq.Table<RMT_FACTURES> RMT_FACTURES
		{
			get
			{
				return this.GetTable<RMT_FACTURES>();
			}
		}
		
		public System.Data.Linq.Table<RMT_CONNAISSEMENT> RMT_CONNAISSEMENT
		{
			get
			{
				return this.GetTable<RMT_CONNAISSEMENT>();
			}
		}
		
		public System.Data.Linq.Table<RMT_ELEMENT_FACTURE> RMT_ELEMENT_FACTURE
		{
			get
			{
				return this.GetTable<RMT_ELEMENT_FACTURE>();
			}
		}
		
		public System.Data.Linq.Table<RMT_AVOIR> RMT_AVOIR
		{
			get
			{
				return this.GetTable<RMT_AVOIR>();
			}
		}
		
		public System.Data.Linq.Table<RMT_PAYEMENT> RMT_PAYEMENT
		{
			get
			{
				return this.GetTable<RMT_PAYEMENT>();
			}
		}
		
		public System.Data.Linq.Table<CLIENT_FIN_COND> CLIENT_FIN_COND
		{
			get
			{
				return this.GetTable<CLIENT_FIN_COND>();
			}
		}
		
		public System.Data.Linq.Table<CLIENT_M_PAY> CLIENT_M_PAY
		{
			get
			{
				return this.GetTable<CLIENT_M_PAY>();
			}
		}
		
		public System.Data.Linq.Table<FACTURE_CTRL> FACTURE_CTRL
		{
			get
			{
				return this.GetTable<FACTURE_CTRL>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ACCONIER")]
	public partial class ACCONIER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdAcc;
		
		private string _CodeAcc;
		
		private string _NomAcc;
		
		private string _StatutAcc;
		
		private string _AIAcc;
		
		private string _CCAcc;
		
		private EntitySet<UTILISATEUR> _UTILISATEUR;
		
		private EntitySet<ESCALE> _ESCALE;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdAccChanging(int value);
    partial void OnIdAccChanged();
    partial void OnCodeAccChanging(string value);
    partial void OnCodeAccChanged();
    partial void OnNomAccChanging(string value);
    partial void OnNomAccChanged();
    partial void OnStatutAccChanging(string value);
    partial void OnStatutAccChanged();
    partial void OnAIAccChanging(string value);
    partial void OnAIAccChanged();
    partial void OnCCAccChanging(string value);
    partial void OnCCAccChanged();
    #endregion
		
		public ACCONIER()
		{
			this._UTILISATEUR = new EntitySet<UTILISATEUR>(new Action<UTILISATEUR>(this.attach_UTILISATEUR), new Action<UTILISATEUR>(this.detach_UTILISATEUR));
			this._ESCALE = new EntitySet<ESCALE>(new Action<ESCALE>(this.attach_ESCALE), new Action<ESCALE>(this.detach_ESCALE));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdAcc", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdAcc
		{
			get
			{
				return this._IdAcc;
			}
			set
			{
				if ((this._IdAcc != value))
				{
					this.OnIdAccChanging(value);
					this.SendPropertyChanging();
					this._IdAcc = value;
					this.SendPropertyChanged("IdAcc");
					this.OnIdAccChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeAcc", DbType="NVarChar(20)")]
		public string CodeAcc
		{
			get
			{
				return this._CodeAcc;
			}
			set
			{
				if ((this._CodeAcc != value))
				{
					this.OnCodeAccChanging(value);
					this.SendPropertyChanging();
					this._CodeAcc = value;
					this.SendPropertyChanged("CodeAcc");
					this.OnCodeAccChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NomAcc", DbType="NVarChar(50)")]
		public string NomAcc
		{
			get
			{
				return this._NomAcc;
			}
			set
			{
				if ((this._NomAcc != value))
				{
					this.OnNomAccChanging(value);
					this.SendPropertyChanging();
					this._NomAcc = value;
					this.SendPropertyChanged("NomAcc");
					this.OnNomAccChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatutAcc", DbType="NVarChar(1)")]
		public string StatutAcc
		{
			get
			{
				return this._StatutAcc;
			}
			set
			{
				if ((this._StatutAcc != value))
				{
					this.OnStatutAccChanging(value);
					this.SendPropertyChanging();
					this._StatutAcc = value;
					this.SendPropertyChanged("StatutAcc");
					this.OnStatutAccChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AIAcc", DbType="NVarChar(255)")]
		public string AIAcc
		{
			get
			{
				return this._AIAcc;
			}
			set
			{
				if ((this._AIAcc != value))
				{
					this.OnAIAccChanging(value);
					this.SendPropertyChanging();
					this._AIAcc = value;
					this.SendPropertyChanged("AIAcc");
					this.OnAIAccChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCAcc", DbType="NVarChar(20)")]
		public string CCAcc
		{
			get
			{
				return this._CCAcc;
			}
			set
			{
				if ((this._CCAcc != value))
				{
					this.OnCCAccChanging(value);
					this.SendPropertyChanging();
					this._CCAcc = value;
					this.SendPropertyChanged("CCAcc");
					this.OnCCAccChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ACCONIER_UTILISATEUR", Storage="_UTILISATEUR", ThisKey="IdAcc", OtherKey="IdAcc")]
		public EntitySet<UTILISATEUR> UTILISATEUR
		{
			get
			{
				return this._UTILISATEUR;
			}
			set
			{
				this._UTILISATEUR.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ACCONIER_ESCALE", Storage="_ESCALE", ThisKey="IdAcc", OtherKey="IdAcc")]
		public EntitySet<ESCALE> ESCALE
		{
			get
			{
				return this._ESCALE;
			}
			set
			{
				this._ESCALE.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UTILISATEUR(UTILISATEUR entity)
		{
			this.SendPropertyChanging();
			entity.ACCONIER = this;
		}
		
		private void detach_UTILISATEUR(UTILISATEUR entity)
		{
			this.SendPropertyChanging();
			entity.ACCONIER = null;
		}
		
		private void attach_ESCALE(ESCALE entity)
		{
			this.SendPropertyChanging();
			entity.ACCONIER = this;
		}
		
		private void detach_ESCALE(ESCALE entity)
		{
			this.SendPropertyChanging();
			entity.ACCONIER = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ARMATEUR")]
	public partial class ARMATEUR : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdArm;
		
		private string _CodeArm;
		
		private string _NomArm;
		
		private string _StatutArm;
		
		private string _AIArm;
		
		private string _CCArm;
		
		private string _AdresseArm;
		
		private EntitySet<NAVIRE> _NAVIRE;
		
		private EntitySet<ESCALE> _ESCALE;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdArmChanging(int value);
    partial void OnIdArmChanged();
    partial void OnCodeArmChanging(string value);
    partial void OnCodeArmChanged();
    partial void OnNomArmChanging(string value);
    partial void OnNomArmChanged();
    partial void OnStatutArmChanging(string value);
    partial void OnStatutArmChanged();
    partial void OnAIArmChanging(string value);
    partial void OnAIArmChanged();
    partial void OnCCArmChanging(string value);
    partial void OnCCArmChanged();
    partial void OnAdresseArmChanging(string value);
    partial void OnAdresseArmChanged();
    #endregion
		
		public ARMATEUR()
		{
			this._NAVIRE = new EntitySet<NAVIRE>(new Action<NAVIRE>(this.attach_NAVIRE), new Action<NAVIRE>(this.detach_NAVIRE));
			this._ESCALE = new EntitySet<ESCALE>(new Action<ESCALE>(this.attach_ESCALE), new Action<ESCALE>(this.detach_ESCALE));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdArm", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdArm
		{
			get
			{
				return this._IdArm;
			}
			set
			{
				if ((this._IdArm != value))
				{
					this.OnIdArmChanging(value);
					this.SendPropertyChanging();
					this._IdArm = value;
					this.SendPropertyChanged("IdArm");
					this.OnIdArmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeArm", DbType="NVarChar(20)")]
		public string CodeArm
		{
			get
			{
				return this._CodeArm;
			}
			set
			{
				if ((this._CodeArm != value))
				{
					this.OnCodeArmChanging(value);
					this.SendPropertyChanging();
					this._CodeArm = value;
					this.SendPropertyChanged("CodeArm");
					this.OnCodeArmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NomArm", DbType="NVarChar(50)")]
		public string NomArm
		{
			get
			{
				return this._NomArm;
			}
			set
			{
				if ((this._NomArm != value))
				{
					this.OnNomArmChanging(value);
					this.SendPropertyChanging();
					this._NomArm = value;
					this.SendPropertyChanged("NomArm");
					this.OnNomArmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatutArm", DbType="NVarChar(1)")]
		public string StatutArm
		{
			get
			{
				return this._StatutArm;
			}
			set
			{
				if ((this._StatutArm != value))
				{
					this.OnStatutArmChanging(value);
					this.SendPropertyChanging();
					this._StatutArm = value;
					this.SendPropertyChanged("StatutArm");
					this.OnStatutArmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AIArm", DbType="NVarChar(255)")]
		public string AIArm
		{
			get
			{
				return this._AIArm;
			}
			set
			{
				if ((this._AIArm != value))
				{
					this.OnAIArmChanging(value);
					this.SendPropertyChanging();
					this._AIArm = value;
					this.SendPropertyChanged("AIArm");
					this.OnAIArmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCArm", DbType="NVarChar(20)")]
		public string CCArm
		{
			get
			{
				return this._CCArm;
			}
			set
			{
				if ((this._CCArm != value))
				{
					this.OnCCArmChanging(value);
					this.SendPropertyChanging();
					this._CCArm = value;
					this.SendPropertyChanged("CCArm");
					this.OnCCArmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdresseArm", DbType="NVarChar(255)")]
		public string AdresseArm
		{
			get
			{
				return this._AdresseArm;
			}
			set
			{
				if ((this._AdresseArm != value))
				{
					this.OnAdresseArmChanging(value);
					this.SendPropertyChanging();
					this._AdresseArm = value;
					this.SendPropertyChanged("AdresseArm");
					this.OnAdresseArmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ARMATEUR_NAVIRE", Storage="_NAVIRE", ThisKey="IdArm", OtherKey="IdArm")]
		public EntitySet<NAVIRE> NAVIRE
		{
			get
			{
				return this._NAVIRE;
			}
			set
			{
				this._NAVIRE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ARMATEUR_ESCALE", Storage="_ESCALE", ThisKey="IdArm", OtherKey="IdArm")]
		public EntitySet<ESCALE> ESCALE
		{
			get
			{
				return this._ESCALE;
			}
			set
			{
				this._ESCALE.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NAVIRE(NAVIRE entity)
		{
			this.SendPropertyChanging();
			entity.ARMATEUR = this;
		}
		
		private void detach_NAVIRE(NAVIRE entity)
		{
			this.SendPropertyChanging();
			entity.ARMATEUR = null;
		}
		
		private void attach_ESCALE(ESCALE entity)
		{
			this.SendPropertyChanging();
			entity.ARMATEUR = this;
		}
		
		private void detach_ESCALE(ESCALE entity)
		{
			this.SendPropertyChanging();
			entity.ARMATEUR = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ARTICLE")]
	public partial class ARTICLE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _CodeArticle;
		
		private string _LibArticle;
		
		private string _CCArticle;
		
		private string _CCArticleEx;
		
		private System.Nullable<short> _CodeFamArt;
		
		private string _CodeTVA;
		
		private string _Statut;
		
		private EntitySet<LIGNE_SERVICE> _LIGNE_SERVICE;
		
		private EntitySet<DEMANDE_REDUCTION> _DEMANDE_REDUCTION;
		
		private EntitySet<LIGNE_PRIX> _LIGNE_PRIX;
		
		private EntityRef<CODE_TVA> _CODE_TVA;
		
		private EntityRef<FAMILLE_ARTICLE> _FAMILLE_ARTICLE;
		
		private EntityRef<LIGNE_AVOIR_SPOT> _LIGNE_AVOIR_SPOT;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeArticleChanging(short value);
    partial void OnCodeArticleChanged();
    partial void OnLibArticleChanging(string value);
    partial void OnLibArticleChanged();
    partial void OnCCArticleChanging(string value);
    partial void OnCCArticleChanged();
    partial void OnCCArticleExChanging(string value);
    partial void OnCCArticleExChanged();
    partial void OnCodeFamArtChanging(System.Nullable<short> value);
    partial void OnCodeFamArtChanged();
    partial void OnCodeTVAChanging(string value);
    partial void OnCodeTVAChanged();
    partial void OnStatutChanging(string value);
    partial void OnStatutChanged();
    #endregion
		
		public ARTICLE()
		{
			this._LIGNE_SERVICE = new EntitySet<LIGNE_SERVICE>(new Action<LIGNE_SERVICE>(this.attach_LIGNE_SERVICE), new Action<LIGNE_SERVICE>(this.detach_LIGNE_SERVICE));
			this._DEMANDE_REDUCTION = new EntitySet<DEMANDE_REDUCTION>(new Action<DEMANDE_REDUCTION>(this.attach_DEMANDE_REDUCTION), new Action<DEMANDE_REDUCTION>(this.detach_DEMANDE_REDUCTION));
			this._LIGNE_PRIX = new EntitySet<LIGNE_PRIX>(new Action<LIGNE_PRIX>(this.attach_LIGNE_PRIX), new Action<LIGNE_PRIX>(this.detach_LIGNE_PRIX));
			this._CODE_TVA = default(EntityRef<CODE_TVA>);
			this._FAMILLE_ARTICLE = default(EntityRef<FAMILLE_ARTICLE>);
			this._LIGNE_AVOIR_SPOT = default(EntityRef<LIGNE_AVOIR_SPOT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeArticle", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short CodeArticle
		{
			get
			{
				return this._CodeArticle;
			}
			set
			{
				if ((this._CodeArticle != value))
				{
					if (this._LIGNE_AVOIR_SPOT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodeArticleChanging(value);
					this.SendPropertyChanging();
					this._CodeArticle = value;
					this.SendPropertyChanged("CodeArticle");
					this.OnCodeArticleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LibArticle", DbType="NVarChar(100)")]
		public string LibArticle
		{
			get
			{
				return this._LibArticle;
			}
			set
			{
				if ((this._LibArticle != value))
				{
					this.OnLibArticleChanging(value);
					this.SendPropertyChanging();
					this._LibArticle = value;
					this.SendPropertyChanged("LibArticle");
					this.OnLibArticleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCArticle", DbType="NVarChar(20)")]
		public string CCArticle
		{
			get
			{
				return this._CCArticle;
			}
			set
			{
				if ((this._CCArticle != value))
				{
					this.OnCCArticleChanging(value);
					this.SendPropertyChanging();
					this._CCArticle = value;
					this.SendPropertyChanged("CCArticle");
					this.OnCCArticleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCArticleEx", DbType="NVarChar(20)")]
		public string CCArticleEx
		{
			get
			{
				return this._CCArticleEx;
			}
			set
			{
				if ((this._CCArticleEx != value))
				{
					this.OnCCArticleExChanging(value);
					this.SendPropertyChanging();
					this._CCArticleEx = value;
					this.SendPropertyChanged("CCArticleEx");
					this.OnCCArticleExChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeFamArt", DbType="SmallInt")]
		public System.Nullable<short> CodeFamArt
		{
			get
			{
				return this._CodeFamArt;
			}
			set
			{
				if ((this._CodeFamArt != value))
				{
					if (this._FAMILLE_ARTICLE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodeFamArtChanging(value);
					this.SendPropertyChanging();
					this._CodeFamArt = value;
					this.SendPropertyChanged("CodeFamArt");
					this.OnCodeFamArtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeTVA", DbType="NVarChar(10)")]
		public string CodeTVA
		{
			get
			{
				return this._CodeTVA;
			}
			set
			{
				if ((this._CodeTVA != value))
				{
					if (this._CODE_TVA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodeTVAChanging(value);
					this.SendPropertyChanging();
					this._CodeTVA = value;
					this.SendPropertyChanged("CodeTVA");
					this.OnCodeTVAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Statut", DbType="nvarchar(5)")]
		public string Statut
		{
			get
			{
				return this._Statut;
			}
			set
			{
				if ((this._Statut != value))
				{
					this.OnStatutChanging(value);
					this.SendPropertyChanging();
					this._Statut = value;
					this.SendPropertyChanged("Statut");
					this.OnStatutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ARTICLE_LIGNE_SERVICE", Storage="_LIGNE_SERVICE", ThisKey="CodeArticle", OtherKey="CodeArticle")]
		public EntitySet<LIGNE_SERVICE> LIGNE_SERVICE
		{
			get
			{
				return this._LIGNE_SERVICE;
			}
			set
			{
				this._LIGNE_SERVICE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ARTICLE_DEMANDE_REDUCTION", Storage="_DEMANDE_REDUCTION", ThisKey="CodeArticle", OtherKey="CodeArticle")]
		public EntitySet<DEMANDE_REDUCTION> DEMANDE_REDUCTION
		{
			get
			{
				return this._DEMANDE_REDUCTION;
			}
			set
			{
				this._DEMANDE_REDUCTION.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ARTICLE_LIGNE_PRIX", Storage="_LIGNE_PRIX", ThisKey="CodeArticle", OtherKey="CodeArticle")]
		public EntitySet<LIGNE_PRIX> LIGNE_PRIX
		{
			get
			{
				return this._LIGNE_PRIX;
			}
			set
			{
				this._LIGNE_PRIX.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CODE_TVA_ARTICLE", Storage="_CODE_TVA", ThisKey="CodeTVA", OtherKey="CodeTVA", IsForeignKey=true)]
		public CODE_TVA CODE_TVA
		{
			get
			{
				return this._CODE_TVA.Entity;
			}
			set
			{
				CODE_TVA previousValue = this._CODE_TVA.Entity;
				if (((previousValue != value) 
							|| (this._CODE_TVA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CODE_TVA.Entity = null;
						previousValue.ARTICLE.Remove(this);
					}
					this._CODE_TVA.Entity = value;
					if ((value != null))
					{
						value.ARTICLE.Add(this);
						this._CodeTVA = value.CodeTVA;
					}
					else
					{
						this._CodeTVA = default(string);
					}
					this.SendPropertyChanged("CODE_TVA");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FAMILLE_ARTICLE_ARTICLE", Storage="_FAMILLE_ARTICLE", ThisKey="CodeFamArt", OtherKey="CodeFamArt", IsForeignKey=true, DeleteRule="CASCADE")]
		public FAMILLE_ARTICLE FAMILLE_ARTICLE
		{
			get
			{
				return this._FAMILLE_ARTICLE.Entity;
			}
			set
			{
				FAMILLE_ARTICLE previousValue = this._FAMILLE_ARTICLE.Entity;
				if (((previousValue != value) 
							|| (this._FAMILLE_ARTICLE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FAMILLE_ARTICLE.Entity = null;
						previousValue.ARTICLE.Remove(this);
					}
					this._FAMILLE_ARTICLE.Entity = value;
					if ((value != null))
					{
						value.ARTICLE.Add(this);
						this._CodeFamArt = value.CodeFamArt;
					}
					else
					{
						this._CodeFamArt = default(Nullable<short>);
					}
					this.SendPropertyChanged("FAMILLE_ARTICLE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LIGNE_AVOIR_SPOT_ARTICLE", Storage="_LIGNE_AVOIR_SPOT", ThisKey="CodeArticle", OtherKey="CodeArticle", IsForeignKey=true)]
		public LIGNE_AVOIR_SPOT LIGNE_AVOIR_SPOT
		{
			get
			{
				return this._LIGNE_AVOIR_SPOT.Entity;
			}
			set
			{
				LIGNE_AVOIR_SPOT previousValue = this._LIGNE_AVOIR_SPOT.Entity;
				if (((previousValue != value) 
							|| (this._LIGNE_AVOIR_SPOT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LIGNE_AVOIR_SPOT.Entity = null;
						previousValue.ARTICLE.Remove(this);
					}
					this._LIGNE_AVOIR_SPOT.Entity = value;
					if ((value != null))
					{
						value.ARTICLE.Add(this);
						this._CodeArticle = value.CodeArticle;
					}
					else
					{
						this._CodeArticle = default(short);
					}
					this.SendPropertyChanged("LIGNE_AVOIR_SPOT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LIGNE_SERVICE(LIGNE_SERVICE entity)
		{
			this.SendPropertyChanging();
			entity.ARTICLE = this;
		}
		
		private void detach_LIGNE_SERVICE(LIGNE_SERVICE entity)
		{
			this.SendPropertyChanging();
			entity.ARTICLE = null;
		}
		
		private void attach_DEMANDE_REDUCTION(DEMANDE_REDUCTION entity)
		{
			this.SendPropertyChanging();
			entity.ARTICLE = this;
		}
		
		private void detach_DEMANDE_REDUCTION(DEMANDE_REDUCTION entity)
		{
			this.SendPropertyChanging();
			entity.ARTICLE = null;
		}
		
		private void attach_LIGNE_PRIX(LIGNE_PRIX entity)
		{
			this.SendPropertyChanging();
			entity.ARTICLE = this;
		}
		
		private void detach_LIGNE_PRIX(LIGNE_PRIX entity)
		{
			this.SendPropertyChanging();
			entity.ARTICLE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BON_ENLEVEMENT")]
	public partial class BON_ENLEVEMENT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdBAE;
		
		private System.Nullable<System.DateTime> _DateBAE;
		
		private System.Nullable<System.DateTime> _DVBAE;
		
		private string _ELGBAE;
		
		private string _DLGBAE;
		
		private System.Nullable<System.DateTime> _DELGBAE;
		
		private System.Nullable<System.DateTime> _DFLGBAE;
		
		private string _AIBAE;
		
		private string _AIVBAE;
		
		private System.Nullable<int> _IdBL;
		
		private System.Nullable<int> _IdU;
		
		private System.Nullable<int> _IdUV;
		
		private EntitySet<VEHICULE> _VEHICULE;
		
		private EntitySet<CONTENEUR> _CONTENEUR;
		
		private EntitySet<CONVENTIONNEL> _CONVENTIONNEL;
		
		private EntitySet<MAFI> _MAFI;
		
		private EntitySet<NOTE> _NOTE;
		
		private EntityRef<UTILISATEUR> _UTILISATEUR;
		
		private EntityRef<CONNAISSEMENT> _CONNAISSEMENT;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdBAEChanging(int value);
    partial void OnIdBAEChanged();
    partial void OnDateBAEChanging(System.Nullable<System.DateTime> value);
    partial void OnDateBAEChanged();
    partial void OnDVBAEChanging(System.Nullable<System.DateTime> value);
    partial void OnDVBAEChanged();
    partial void OnELGBAEChanging(string value);
    partial void OnELGBAEChanged();
    partial void OnDLGBAEChanging(string value);
    partial void OnDLGBAEChanged();
    partial void OnDELGBAEChanging(System.Nullable<System.DateTime> value);
    partial void OnDELGBAEChanged();
    partial void OnDFLGBAEChanging(System.Nullable<System.DateTime> value);
    partial void OnDFLGBAEChanged();
    partial void OnAIBAEChanging(string value);
    partial void OnAIBAEChanged();
    partial void OnAIVBAEChanging(string value);
    partial void OnAIVBAEChanged();
    partial void OnIdBLChanging(System.Nullable<int> value);
    partial void OnIdBLChanged();
    partial void OnIdUChanging(System.Nullable<int> value);
    partial void OnIdUChanged();
    partial void OnIdUVChanging(System.Nullable<int> value);
    partial void OnIdUVChanged();
    #endregion
		
		public BON_ENLEVEMENT()
		{
			this._VEHICULE = new EntitySet<VEHICULE>(new Action<VEHICULE>(this.attach_VEHICULE), new Action<VEHICULE>(this.detach_VEHICULE));
			this._CONTENEUR = new EntitySet<CONTENEUR>(new Action<CONTENEUR>(this.attach_CONTENEUR), new Action<CONTENEUR>(this.detach_CONTENEUR));
			this._CONVENTIONNEL = new EntitySet<CONVENTIONNEL>(new Action<CONVENTIONNEL>(this.attach_CONVENTIONNEL), new Action<CONVENTIONNEL>(this.detach_CONVENTIONNEL));
			this._MAFI = new EntitySet<MAFI>(new Action<MAFI>(this.attach_MAFI), new Action<MAFI>(this.detach_MAFI));
			this._NOTE = new EntitySet<NOTE>(new Action<NOTE>(this.attach_NOTE), new Action<NOTE>(this.detach_NOTE));
			this._UTILISATEUR = default(EntityRef<UTILISATEUR>);
			this._CONNAISSEMENT = default(EntityRef<CONNAISSEMENT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdBAE", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdBAE
		{
			get
			{
				return this._IdBAE;
			}
			set
			{
				if ((this._IdBAE != value))
				{
					this.OnIdBAEChanging(value);
					this.SendPropertyChanging();
					this._IdBAE = value;
					this.SendPropertyChanged("IdBAE");
					this.OnIdBAEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateBAE", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateBAE
		{
			get
			{
				return this._DateBAE;
			}
			set
			{
				if ((this._DateBAE != value))
				{
					this.OnDateBAEChanging(value);
					this.SendPropertyChanging();
					this._DateBAE = value;
					this.SendPropertyChanged("DateBAE");
					this.OnDateBAEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DVBAE", DbType="DateTime")]
		public System.Nullable<System.DateTime> DVBAE
		{
			get
			{
				return this._DVBAE;
			}
			set
			{
				if ((this._DVBAE != value))
				{
					this.OnDVBAEChanging(value);
					this.SendPropertyChanging();
					this._DVBAE = value;
					this.SendPropertyChanged("DVBAE");
					this.OnDVBAEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ELGBAE", DbType="NVarChar(50)")]
		public string ELGBAE
		{
			get
			{
				return this._ELGBAE;
			}
			set
			{
				if ((this._ELGBAE != value))
				{
					this.OnELGBAEChanging(value);
					this.SendPropertyChanging();
					this._ELGBAE = value;
					this.SendPropertyChanged("ELGBAE");
					this.OnELGBAEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DLGBAE", DbType="NVarChar(50)")]
		public string DLGBAE
		{
			get
			{
				return this._DLGBAE;
			}
			set
			{
				if ((this._DLGBAE != value))
				{
					this.OnDLGBAEChanging(value);
					this.SendPropertyChanging();
					this._DLGBAE = value;
					this.SendPropertyChanged("DLGBAE");
					this.OnDLGBAEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DELGBAE", DbType="DateTime")]
		public System.Nullable<System.DateTime> DELGBAE
		{
			get
			{
				return this._DELGBAE;
			}
			set
			{
				if ((this._DELGBAE != value))
				{
					this.OnDELGBAEChanging(value);
					this.SendPropertyChanging();
					this._DELGBAE = value;
					this.SendPropertyChanged("DELGBAE");
					this.OnDELGBAEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DFLGBAE", DbType="DateTime")]
		public System.Nullable<System.DateTime> DFLGBAE
		{
			get
			{
				return this._DFLGBAE;
			}
			set
			{
				if ((this._DFLGBAE != value))
				{
					this.OnDFLGBAEChanging(value);
					this.SendPropertyChanging();
					this._DFLGBAE = value;
					this.SendPropertyChanged("DFLGBAE");
					this.OnDFLGBAEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AIBAE", DbType="NVarChar(255)")]
		public string AIBAE
		{
			get
			{
				return this._AIBAE;
			}
			set
			{
				if ((this._AIBAE != value))
				{
					this.OnAIBAEChanging(value);
					this.SendPropertyChanging();
					this._AIBAE = value;
					this.SendPropertyChanged("AIBAE");
					this.OnAIBAEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AIVBAE", DbType="NVarChar(255)")]
		public string AIVBAE
		{
			get
			{
				return this._AIVBAE;
			}
			set
			{
				if ((this._AIVBAE != value))
				{
					this.OnAIVBAEChanging(value);
					this.SendPropertyChanging();
					this._AIVBAE = value;
					this.SendPropertyChanged("AIVBAE");
					this.OnAIVBAEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdBL", DbType="Int")]
		public System.Nullable<int> IdBL
		{
			get
			{
				return this._IdBL;
			}
			set
			{
				if ((this._IdBL != value))
				{
					if (this._CONNAISSEMENT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdBLChanging(value);
					this.SendPropertyChanging();
					this._IdBL = value;
					this.SendPropertyChanged("IdBL");
					this.OnIdBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdU", DbType="Int")]
		public System.Nullable<int> IdU
		{
			get
			{
				return this._IdU;
			}
			set
			{
				if ((this._IdU != value))
				{
					if (this._UTILISATEUR.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdUChanging(value);
					this.SendPropertyChanging();
					this._IdU = value;
					this.SendPropertyChanged("IdU");
					this.OnIdUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUV", DbType="Int")]
		public System.Nullable<int> IdUV
		{
			get
			{
				return this._IdUV;
			}
			set
			{
				if ((this._IdUV != value))
				{
					this.OnIdUVChanging(value);
					this.SendPropertyChanging();
					this._IdUV = value;
					this.SendPropertyChanged("IdUV");
					this.OnIdUVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BON_ENLEVEMENT_VEHICULE", Storage="_VEHICULE", ThisKey="IdBAE", OtherKey="IdBAE")]
		public EntitySet<VEHICULE> VEHICULE
		{
			get
			{
				return this._VEHICULE;
			}
			set
			{
				this._VEHICULE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BON_ENLEVEMENT_CONTENEUR", Storage="_CONTENEUR", ThisKey="IdBAE", OtherKey="IdBAE")]
		public EntitySet<CONTENEUR> CONTENEUR
		{
			get
			{
				return this._CONTENEUR;
			}
			set
			{
				this._CONTENEUR.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BON_ENLEVEMENT_CONVENTIONNEL", Storage="_CONVENTIONNEL", ThisKey="IdBAE", OtherKey="IdBAE")]
		public EntitySet<CONVENTIONNEL> CONVENTIONNEL
		{
			get
			{
				return this._CONVENTIONNEL;
			}
			set
			{
				this._CONVENTIONNEL.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BON_ENLEVEMENT_MAFI", Storage="_MAFI", ThisKey="IdBAE", OtherKey="IdBAE")]
		public EntitySet<MAFI> MAFI
		{
			get
			{
				return this._MAFI;
			}
			set
			{
				this._MAFI.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BON_ENLEVEMENT_NOTE", Storage="_NOTE", ThisKey="IdBAE", OtherKey="IdBAE")]
		public EntitySet<NOTE> NOTE
		{
			get
			{
				return this._NOTE;
			}
			set
			{
				this._NOTE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UTILISATEUR_BON_ENLEVEMENT", Storage="_UTILISATEUR", ThisKey="IdU", OtherKey="IdU", IsForeignKey=true)]
		public UTILISATEUR UTILISATEUR
		{
			get
			{
				return this._UTILISATEUR.Entity;
			}
			set
			{
				UTILISATEUR previousValue = this._UTILISATEUR.Entity;
				if (((previousValue != value) 
							|| (this._UTILISATEUR.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UTILISATEUR.Entity = null;
						previousValue.BON_ENLEVEMENT.Remove(this);
					}
					this._UTILISATEUR.Entity = value;
					if ((value != null))
					{
						value.BON_ENLEVEMENT.Add(this);
						this._IdU = value.IdU;
					}
					else
					{
						this._IdU = default(Nullable<int>);
					}
					this.SendPropertyChanged("UTILISATEUR");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONNAISSEMENT_BON_ENLEVEMENT", Storage="_CONNAISSEMENT", ThisKey="IdBL", OtherKey="IdBL", IsForeignKey=true, DeleteRule="CASCADE")]
		public CONNAISSEMENT CONNAISSEMENT
		{
			get
			{
				return this._CONNAISSEMENT.Entity;
			}
			set
			{
				CONNAISSEMENT previousValue = this._CONNAISSEMENT.Entity;
				if (((previousValue != value) 
							|| (this._CONNAISSEMENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CONNAISSEMENT.Entity = null;
						previousValue.BON_ENLEVEMENT.Remove(this);
					}
					this._CONNAISSEMENT.Entity = value;
					if ((value != null))
					{
						value.BON_ENLEVEMENT.Add(this);
						this._IdBL = value.IdBL;
					}
					else
					{
						this._IdBL = default(Nullable<int>);
					}
					this.SendPropertyChanged("CONNAISSEMENT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VEHICULE(VEHICULE entity)
		{
			this.SendPropertyChanging();
			entity.BON_ENLEVEMENT = this;
		}
		
		private void detach_VEHICULE(VEHICULE entity)
		{
			this.SendPropertyChanging();
			entity.BON_ENLEVEMENT = null;
		}
		
		private void attach_CONTENEUR(CONTENEUR entity)
		{
			this.SendPropertyChanging();
			entity.BON_ENLEVEMENT = this;
		}
		
		private void detach_CONTENEUR(CONTENEUR entity)
		{
			this.SendPropertyChanging();
			entity.BON_ENLEVEMENT = null;
		}
		
		private void attach_CONVENTIONNEL(CONVENTIONNEL entity)
		{
			this.SendPropertyChanging();
			entity.BON_ENLEVEMENT = this;
		}
		
		private void detach_CONVENTIONNEL(CONVENTIONNEL entity)
		{
			this.SendPropertyChanging();
			entity.BON_ENLEVEMENT = null;
		}
		
		private void attach_MAFI(MAFI entity)
		{
			this.SendPropertyChanging();
			entity.BON_ENLEVEMENT = this;
		}
		
		private void detach_MAFI(MAFI entity)
		{
			this.SendPropertyChanging();
			entity.BON_ENLEVEMENT = null;
		}
		
		private void attach_NOTE(NOTE entity)
		{
			this.SendPropertyChanging();
			entity.BON_ENLEVEMENT = this;
		}
		
		private void detach_NOTE(NOTE entity)
		{
			this.SendPropertyChanging();
			entity.BON_ENLEVEMENT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CODE_TVA")]
	public partial class CODE_TVA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CodeTVA;
		
		private string _LibTVA;
		
		private System.Nullable<float> _TauxTVA;
		
		private string _CCompte;
		
		private EntitySet<ARTICLE> _ARTICLE;
		
		private EntitySet<CLIENT> _CLIENT;
		
		private EntitySet<ELEMENT_FACTURATION> _ELEMENT_FACTURATION;
		
		private EntitySet<CONNAISSEMENT> _CONNAISSEMENT;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeTVAChanging(string value);
    partial void OnCodeTVAChanged();
    partial void OnLibTVAChanging(string value);
    partial void OnLibTVAChanged();
    partial void OnTauxTVAChanging(System.Nullable<float> value);
    partial void OnTauxTVAChanged();
    partial void OnCCompteChanging(string value);
    partial void OnCCompteChanged();
    #endregion
		
		public CODE_TVA()
		{
			this._ARTICLE = new EntitySet<ARTICLE>(new Action<ARTICLE>(this.attach_ARTICLE), new Action<ARTICLE>(this.detach_ARTICLE));
			this._CLIENT = new EntitySet<CLIENT>(new Action<CLIENT>(this.attach_CLIENT), new Action<CLIENT>(this.detach_CLIENT));
			this._ELEMENT_FACTURATION = new EntitySet<ELEMENT_FACTURATION>(new Action<ELEMENT_FACTURATION>(this.attach_ELEMENT_FACTURATION), new Action<ELEMENT_FACTURATION>(this.detach_ELEMENT_FACTURATION));
			this._CONNAISSEMENT = new EntitySet<CONNAISSEMENT>(new Action<CONNAISSEMENT>(this.attach_CONNAISSEMENT), new Action<CONNAISSEMENT>(this.detach_CONNAISSEMENT));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeTVA", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CodeTVA
		{
			get
			{
				return this._CodeTVA;
			}
			set
			{
				if ((this._CodeTVA != value))
				{
					this.OnCodeTVAChanging(value);
					this.SendPropertyChanging();
					this._CodeTVA = value;
					this.SendPropertyChanged("CodeTVA");
					this.OnCodeTVAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LibTVA", DbType="NVarChar(50)")]
		public string LibTVA
		{
			get
			{
				return this._LibTVA;
			}
			set
			{
				if ((this._LibTVA != value))
				{
					this.OnLibTVAChanging(value);
					this.SendPropertyChanging();
					this._LibTVA = value;
					this.SendPropertyChanged("LibTVA");
					this.OnLibTVAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TauxTVA", DbType="Real")]
		public System.Nullable<float> TauxTVA
		{
			get
			{
				return this._TauxTVA;
			}
			set
			{
				if ((this._TauxTVA != value))
				{
					this.OnTauxTVAChanging(value);
					this.SendPropertyChanging();
					this._TauxTVA = value;
					this.SendPropertyChanged("TauxTVA");
					this.OnTauxTVAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCompte", DbType="nvarchar(10)")]
		public string CCompte
		{
			get
			{
				return this._CCompte;
			}
			set
			{
				if ((this._CCompte != value))
				{
					this.OnCCompteChanging(value);
					this.SendPropertyChanging();
					this._CCompte = value;
					this.SendPropertyChanged("CCompte");
					this.OnCCompteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CODE_TVA_ARTICLE", Storage="_ARTICLE", ThisKey="CodeTVA", OtherKey="CodeTVA")]
		public EntitySet<ARTICLE> ARTICLE
		{
			get
			{
				return this._ARTICLE;
			}
			set
			{
				this._ARTICLE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CODE_TVA_CLIENT", Storage="_CLIENT", ThisKey="CodeTVA", OtherKey="CodeTVA")]
		public EntitySet<CLIENT> CLIENT
		{
			get
			{
				return this._CLIENT;
			}
			set
			{
				this._CLIENT.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CODE_TVA_ELEMENT_FACTURATION", Storage="_ELEMENT_FACTURATION", ThisKey="CodeTVA", OtherKey="CodeTVA")]
		public EntitySet<ELEMENT_FACTURATION> ELEMENT_FACTURATION
		{
			get
			{
				return this._ELEMENT_FACTURATION;
			}
			set
			{
				this._ELEMENT_FACTURATION.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CODE_TVA_CONNAISSEMENT", Storage="_CONNAISSEMENT", ThisKey="CodeTVA", OtherKey="CodeTVA")]
		public EntitySet<CONNAISSEMENT> CONNAISSEMENT
		{
			get
			{
				return this._CONNAISSEMENT;
			}
			set
			{
				this._CONNAISSEMENT.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ARTICLE(ARTICLE entity)
		{
			this.SendPropertyChanging();
			entity.CODE_TVA = this;
		}
		
		private void detach_ARTICLE(ARTICLE entity)
		{
			this.SendPropertyChanging();
			entity.CODE_TVA = null;
		}
		
		private void attach_CLIENT(CLIENT entity)
		{
			this.SendPropertyChanging();
			entity.CODE_TVA = this;
		}
		
		private void detach_CLIENT(CLIENT entity)
		{
			this.SendPropertyChanging();
			entity.CODE_TVA = null;
		}
		
		private void attach_ELEMENT_FACTURATION(ELEMENT_FACTURATION entity)
		{
			this.SendPropertyChanging();
			entity.CODE_TVA = this;
		}
		
		private void detach_ELEMENT_FACTURATION(ELEMENT_FACTURATION entity)
		{
			this.SendPropertyChanging();
			entity.CODE_TVA = null;
		}
		
		private void attach_CONNAISSEMENT(CONNAISSEMENT entity)
		{
			this.SendPropertyChanging();
			entity.CODE_TVA = this;
		}
		
		private void detach_CONNAISSEMENT(CONNAISSEMENT entity)
		{
			this.SendPropertyChanging();
			entity.CODE_TVA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CUBAGE")]
	public partial class CUBAGE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdCubage;
		
		private System.Nullable<System.DateTime> _DateCubage;
		
		private System.Nullable<System.DateTime> _DateExCubage;
		
		private System.Nullable<System.DateTime> _DateCloCubage;
		
		private string _AICubage;
		
		private System.Nullable<int> _IdEsc;
		
		private EntitySet<CUBAGE_VEHICULE> _CUBAGE_VEHICULE;
		
		private EntitySet<NOTE> _NOTE;
		
		private EntityRef<ESCALE> _ESCALE;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdCubageChanging(int value);
    partial void OnIdCubageChanged();
    partial void OnDateCubageChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCubageChanged();
    partial void OnDateExCubageChanging(System.Nullable<System.DateTime> value);
    partial void OnDateExCubageChanged();
    partial void OnDateCloCubageChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCloCubageChanged();
    partial void OnAICubageChanging(string value);
    partial void OnAICubageChanged();
    partial void OnIdEscChanging(System.Nullable<int> value);
    partial void OnIdEscChanged();
    #endregion
		
		public CUBAGE()
		{
			this._CUBAGE_VEHICULE = new EntitySet<CUBAGE_VEHICULE>(new Action<CUBAGE_VEHICULE>(this.attach_CUBAGE_VEHICULE), new Action<CUBAGE_VEHICULE>(this.detach_CUBAGE_VEHICULE));
			this._NOTE = new EntitySet<NOTE>(new Action<NOTE>(this.attach_NOTE), new Action<NOTE>(this.detach_NOTE));
			this._ESCALE = default(EntityRef<ESCALE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCubage", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdCubage
		{
			get
			{
				return this._IdCubage;
			}
			set
			{
				if ((this._IdCubage != value))
				{
					this.OnIdCubageChanging(value);
					this.SendPropertyChanging();
					this._IdCubage = value;
					this.SendPropertyChanged("IdCubage");
					this.OnIdCubageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCubage", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCubage
		{
			get
			{
				return this._DateCubage;
			}
			set
			{
				if ((this._DateCubage != value))
				{
					this.OnDateCubageChanging(value);
					this.SendPropertyChanging();
					this._DateCubage = value;
					this.SendPropertyChanged("DateCubage");
					this.OnDateCubageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateExCubage", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateExCubage
		{
			get
			{
				return this._DateExCubage;
			}
			set
			{
				if ((this._DateExCubage != value))
				{
					this.OnDateExCubageChanging(value);
					this.SendPropertyChanging();
					this._DateExCubage = value;
					this.SendPropertyChanged("DateExCubage");
					this.OnDateExCubageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCloCubage", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCloCubage
		{
			get
			{
				return this._DateCloCubage;
			}
			set
			{
				if ((this._DateCloCubage != value))
				{
					this.OnDateCloCubageChanging(value);
					this.SendPropertyChanging();
					this._DateCloCubage = value;
					this.SendPropertyChanged("DateCloCubage");
					this.OnDateCloCubageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AICubage", DbType="NVarChar(255)")]
		public string AICubage
		{
			get
			{
				return this._AICubage;
			}
			set
			{
				if ((this._AICubage != value))
				{
					this.OnAICubageChanging(value);
					this.SendPropertyChanging();
					this._AICubage = value;
					this.SendPropertyChanged("AICubage");
					this.OnAICubageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEsc", DbType="Int")]
		public System.Nullable<int> IdEsc
		{
			get
			{
				return this._IdEsc;
			}
			set
			{
				if ((this._IdEsc != value))
				{
					if (this._ESCALE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdEscChanging(value);
					this.SendPropertyChanging();
					this._IdEsc = value;
					this.SendPropertyChanged("IdEsc");
					this.OnIdEscChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CUBAGE_CUBAGE_VEHICULE", Storage="_CUBAGE_VEHICULE", ThisKey="IdCubage", OtherKey="IdCubage")]
		public EntitySet<CUBAGE_VEHICULE> CUBAGE_VEHICULE
		{
			get
			{
				return this._CUBAGE_VEHICULE;
			}
			set
			{
				this._CUBAGE_VEHICULE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CUBAGE_NOTE", Storage="_NOTE", ThisKey="IdCubage", OtherKey="IdCubage")]
		public EntitySet<NOTE> NOTE
		{
			get
			{
				return this._NOTE;
			}
			set
			{
				this._NOTE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ESCALE_CUBAGE", Storage="_ESCALE", ThisKey="IdEsc", OtherKey="IdEsc", IsForeignKey=true, DeleteRule="CASCADE")]
		public ESCALE ESCALE
		{
			get
			{
				return this._ESCALE.Entity;
			}
			set
			{
				ESCALE previousValue = this._ESCALE.Entity;
				if (((previousValue != value) 
							|| (this._ESCALE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ESCALE.Entity = null;
						previousValue.CUBAGE.Remove(this);
					}
					this._ESCALE.Entity = value;
					if ((value != null))
					{
						value.CUBAGE.Add(this);
						this._IdEsc = value.IdEsc;
					}
					else
					{
						this._IdEsc = default(Nullable<int>);
					}
					this.SendPropertyChanged("ESCALE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CUBAGE_VEHICULE(CUBAGE_VEHICULE entity)
		{
			this.SendPropertyChanging();
			entity.CUBAGE = this;
		}
		
		private void detach_CUBAGE_VEHICULE(CUBAGE_VEHICULE entity)
		{
			this.SendPropertyChanging();
			entity.CUBAGE = null;
		}
		
		private void attach_NOTE(NOTE entity)
		{
			this.SendPropertyChanging();
			entity.CUBAGE = this;
		}
		
		private void detach_NOTE(NOTE entity)
		{
			this.SendPropertyChanging();
			entity.CUBAGE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DEMANDE_CAUTION")]
	public partial class DEMANDE_CAUTION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdDRC;
		
		private System.Nullable<System.DateTime> _DateDRC;
		
		private System.Nullable<System.DateTime> _DVDRC;
		
		private string _AIDRC;
		
		private string _AIVDRC;
		
		private System.Nullable<int> _IdBL;
		
		private System.Nullable<int> _IdU;
		
		private System.Nullable<int> _IdUV;
		
		private EntitySet<CONTENEUR> _CONTENEUR;
		
		private EntitySet<NOTE> _NOTE;
		
		private EntityRef<CONNAISSEMENT> _CONNAISSEMENT;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdDRCChanging(int value);
    partial void OnIdDRCChanged();
    partial void OnDateDRCChanging(System.Nullable<System.DateTime> value);
    partial void OnDateDRCChanged();
    partial void OnDVDRCChanging(System.Nullable<System.DateTime> value);
    partial void OnDVDRCChanged();
    partial void OnAIDRCChanging(string value);
    partial void OnAIDRCChanged();
    partial void OnAIVDRCChanging(string value);
    partial void OnAIVDRCChanged();
    partial void OnIdBLChanging(System.Nullable<int> value);
    partial void OnIdBLChanged();
    partial void OnIdUChanging(System.Nullable<int> value);
    partial void OnIdUChanged();
    partial void OnIdUVChanging(System.Nullable<int> value);
    partial void OnIdUVChanged();
    #endregion
		
		public DEMANDE_CAUTION()
		{
			this._CONTENEUR = new EntitySet<CONTENEUR>(new Action<CONTENEUR>(this.attach_CONTENEUR), new Action<CONTENEUR>(this.detach_CONTENEUR));
			this._NOTE = new EntitySet<NOTE>(new Action<NOTE>(this.attach_NOTE), new Action<NOTE>(this.detach_NOTE));
			this._CONNAISSEMENT = default(EntityRef<CONNAISSEMENT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDRC", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdDRC
		{
			get
			{
				return this._IdDRC;
			}
			set
			{
				if ((this._IdDRC != value))
				{
					this.OnIdDRCChanging(value);
					this.SendPropertyChanging();
					this._IdDRC = value;
					this.SendPropertyChanged("IdDRC");
					this.OnIdDRCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateDRC", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateDRC
		{
			get
			{
				return this._DateDRC;
			}
			set
			{
				if ((this._DateDRC != value))
				{
					this.OnDateDRCChanging(value);
					this.SendPropertyChanging();
					this._DateDRC = value;
					this.SendPropertyChanged("DateDRC");
					this.OnDateDRCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DVDRC", DbType="DateTime")]
		public System.Nullable<System.DateTime> DVDRC
		{
			get
			{
				return this._DVDRC;
			}
			set
			{
				if ((this._DVDRC != value))
				{
					this.OnDVDRCChanging(value);
					this.SendPropertyChanging();
					this._DVDRC = value;
					this.SendPropertyChanged("DVDRC");
					this.OnDVDRCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AIDRC", DbType="NVarChar(255)")]
		public string AIDRC
		{
			get
			{
				return this._AIDRC;
			}
			set
			{
				if ((this._AIDRC != value))
				{
					this.OnAIDRCChanging(value);
					this.SendPropertyChanging();
					this._AIDRC = value;
					this.SendPropertyChanged("AIDRC");
					this.OnAIDRCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AIVDRC", DbType="NVarChar(255)")]
		public string AIVDRC
		{
			get
			{
				return this._AIVDRC;
			}
			set
			{
				if ((this._AIVDRC != value))
				{
					this.OnAIVDRCChanging(value);
					this.SendPropertyChanging();
					this._AIVDRC = value;
					this.SendPropertyChanged("AIVDRC");
					this.OnAIVDRCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdBL", DbType="Int")]
		public System.Nullable<int> IdBL
		{
			get
			{
				return this._IdBL;
			}
			set
			{
				if ((this._IdBL != value))
				{
					if (this._CONNAISSEMENT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdBLChanging(value);
					this.SendPropertyChanging();
					this._IdBL = value;
					this.SendPropertyChanged("IdBL");
					this.OnIdBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdU", DbType="Int")]
		public System.Nullable<int> IdU
		{
			get
			{
				return this._IdU;
			}
			set
			{
				if ((this._IdU != value))
				{
					this.OnIdUChanging(value);
					this.SendPropertyChanging();
					this._IdU = value;
					this.SendPropertyChanged("IdU");
					this.OnIdUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUV", DbType="Int")]
		public System.Nullable<int> IdUV
		{
			get
			{
				return this._IdUV;
			}
			set
			{
				if ((this._IdUV != value))
				{
					this.OnIdUVChanging(value);
					this.SendPropertyChanging();
					this._IdUV = value;
					this.SendPropertyChanged("IdUV");
					this.OnIdUVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DEMANDE_CAUTION_CONTENEUR", Storage="_CONTENEUR", ThisKey="IdDRC", OtherKey="IdDRC")]
		public EntitySet<CONTENEUR> CONTENEUR
		{
			get
			{
				return this._CONTENEUR;
			}
			set
			{
				this._CONTENEUR.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DEMANDE_CAUTION_NOTE", Storage="_NOTE", ThisKey="IdDRC", OtherKey="IdDRC")]
		public EntitySet<NOTE> NOTE
		{
			get
			{
				return this._NOTE;
			}
			set
			{
				this._NOTE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONNAISSEMENT_DEMANDE_CAUTION", Storage="_CONNAISSEMENT", ThisKey="IdBL", OtherKey="IdBL", IsForeignKey=true, DeleteRule="CASCADE")]
		public CONNAISSEMENT CONNAISSEMENT
		{
			get
			{
				return this._CONNAISSEMENT.Entity;
			}
			set
			{
				CONNAISSEMENT previousValue = this._CONNAISSEMENT.Entity;
				if (((previousValue != value) 
							|| (this._CONNAISSEMENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CONNAISSEMENT.Entity = null;
						previousValue.DEMANDE_CAUTION.Remove(this);
					}
					this._CONNAISSEMENT.Entity = value;
					if ((value != null))
					{
						value.DEMANDE_CAUTION.Add(this);
						this._IdBL = value.IdBL;
					}
					else
					{
						this._IdBL = default(Nullable<int>);
					}
					this.SendPropertyChanged("CONNAISSEMENT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CONTENEUR(CONTENEUR entity)
		{
			this.SendPropertyChanging();
			entity.DEMANDE_CAUTION = this;
		}
		
		private void detach_CONTENEUR(CONTENEUR entity)
		{
			this.SendPropertyChanging();
			entity.DEMANDE_CAUTION = null;
		}
		
		private void attach_NOTE(NOTE entity)
		{
			this.SendPropertyChanging();
			entity.DEMANDE_CAUTION = this;
		}
		
		private void detach_NOTE(NOTE entity)
		{
			this.SendPropertyChanging();
			entity.DEMANDE_CAUTION = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DEMANDE_LIVRAISON")]
	public partial class DEMANDE_LIVRAISON : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdDBL;
		
		private System.Nullable<System.DateTime> _DateDBL;
		
		private System.Nullable<System.DateTime> _DVDBL;
		
		private string _AIDBL;
		
		private string _AIVDBL;
		
		private System.Nullable<int> _IdBL;
		
		private System.Nullable<int> _IdU;
		
		private System.Nullable<int> _IdUV;
		
		private System.Nullable<System.DateTime> _DateDepotDBL;
		
		private EntitySet<VEHICULE> _VEHICULE;
		
		private EntitySet<CONTENEUR> _CONTENEUR;
		
		private EntitySet<CONVENTIONNEL> _CONVENTIONNEL;
		
		private EntitySet<MAFI> _MAFI;
		
		private EntitySet<NOTE> _NOTE;
		
		private EntityRef<UTILISATEUR> _UTILISATEUR;
		
		private EntityRef<CONNAISSEMENT> _CONNAISSEMENT;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdDBLChanging(int value);
    partial void OnIdDBLChanged();
    partial void OnDateDBLChanging(System.Nullable<System.DateTime> value);
    partial void OnDateDBLChanged();
    partial void OnDVDBLChanging(System.Nullable<System.DateTime> value);
    partial void OnDVDBLChanged();
    partial void OnAIDBLChanging(string value);
    partial void OnAIDBLChanged();
    partial void OnAIVDBLChanging(string value);
    partial void OnAIVDBLChanged();
    partial void OnIdBLChanging(System.Nullable<int> value);
    partial void OnIdBLChanged();
    partial void OnIdUChanging(System.Nullable<int> value);
    partial void OnIdUChanged();
    partial void OnIdUVChanging(System.Nullable<int> value);
    partial void OnIdUVChanged();
    partial void OnDateDepotDBLChanging(System.Nullable<System.DateTime> value);
    partial void OnDateDepotDBLChanged();
    #endregion
		
		public DEMANDE_LIVRAISON()
		{
			this._VEHICULE = new EntitySet<VEHICULE>(new Action<VEHICULE>(this.attach_VEHICULE), new Action<VEHICULE>(this.detach_VEHICULE));
			this._CONTENEUR = new EntitySet<CONTENEUR>(new Action<CONTENEUR>(this.attach_CONTENEUR), new Action<CONTENEUR>(this.detach_CONTENEUR));
			this._CONVENTIONNEL = new EntitySet<CONVENTIONNEL>(new Action<CONVENTIONNEL>(this.attach_CONVENTIONNEL), new Action<CONVENTIONNEL>(this.detach_CONVENTIONNEL));
			this._MAFI = new EntitySet<MAFI>(new Action<MAFI>(this.attach_MAFI), new Action<MAFI>(this.detach_MAFI));
			this._NOTE = new EntitySet<NOTE>(new Action<NOTE>(this.attach_NOTE), new Action<NOTE>(this.detach_NOTE));
			this._UTILISATEUR = default(EntityRef<UTILISATEUR>);
			this._CONNAISSEMENT = default(EntityRef<CONNAISSEMENT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDBL", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdDBL
		{
			get
			{
				return this._IdDBL;
			}
			set
			{
				if ((this._IdDBL != value))
				{
					this.OnIdDBLChanging(value);
					this.SendPropertyChanging();
					this._IdDBL = value;
					this.SendPropertyChanged("IdDBL");
					this.OnIdDBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateDBL", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateDBL
		{
			get
			{
				return this._DateDBL;
			}
			set
			{
				if ((this._DateDBL != value))
				{
					this.OnDateDBLChanging(value);
					this.SendPropertyChanging();
					this._DateDBL = value;
					this.SendPropertyChanged("DateDBL");
					this.OnDateDBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DVDBL", DbType="DateTime")]
		public System.Nullable<System.DateTime> DVDBL
		{
			get
			{
				return this._DVDBL;
			}
			set
			{
				if ((this._DVDBL != value))
				{
					this.OnDVDBLChanging(value);
					this.SendPropertyChanging();
					this._DVDBL = value;
					this.SendPropertyChanged("DVDBL");
					this.OnDVDBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AIDBL", DbType="NVarChar(255)")]
		public string AIDBL
		{
			get
			{
				return this._AIDBL;
			}
			set
			{
				if ((this._AIDBL != value))
				{
					this.OnAIDBLChanging(value);
					this.SendPropertyChanging();
					this._AIDBL = value;
					this.SendPropertyChanged("AIDBL");
					this.OnAIDBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AIVDBL", DbType="NVarChar(255)")]
		public string AIVDBL
		{
			get
			{
				return this._AIVDBL;
			}
			set
			{
				if ((this._AIVDBL != value))
				{
					this.OnAIVDBLChanging(value);
					this.SendPropertyChanging();
					this._AIVDBL = value;
					this.SendPropertyChanged("AIVDBL");
					this.OnAIVDBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdBL", DbType="Int")]
		public System.Nullable<int> IdBL
		{
			get
			{
				return this._IdBL;
			}
			set
			{
				if ((this._IdBL != value))
				{
					if (this._CONNAISSEMENT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdBLChanging(value);
					this.SendPropertyChanging();
					this._IdBL = value;
					this.SendPropertyChanged("IdBL");
					this.OnIdBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdU", DbType="Int")]
		public System.Nullable<int> IdU
		{
			get
			{
				return this._IdU;
			}
			set
			{
				if ((this._IdU != value))
				{
					if (this._UTILISATEUR.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdUChanging(value);
					this.SendPropertyChanging();
					this._IdU = value;
					this.SendPropertyChanged("IdU");
					this.OnIdUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUV", DbType="Int")]
		public System.Nullable<int> IdUV
		{
			get
			{
				return this._IdUV;
			}
			set
			{
				if ((this._IdUV != value))
				{
					this.OnIdUVChanging(value);
					this.SendPropertyChanging();
					this._IdUV = value;
					this.SendPropertyChanged("IdUV");
					this.OnIdUVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateDepotDBL", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateDepotDBL
		{
			get
			{
				return this._DateDepotDBL;
			}
			set
			{
				if ((this._DateDepotDBL != value))
				{
					this.OnDateDepotDBLChanging(value);
					this.SendPropertyChanging();
					this._DateDepotDBL = value;
					this.SendPropertyChanged("DateDepotDBL");
					this.OnDateDepotDBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DEMANDE_LIVRAISON_VEHICULE", Storage="_VEHICULE", ThisKey="IdDBL", OtherKey="IdDBL")]
		public EntitySet<VEHICULE> VEHICULE
		{
			get
			{
				return this._VEHICULE;
			}
			set
			{
				this._VEHICULE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DEMANDE_LIVRAISON_CONTENEUR", Storage="_CONTENEUR", ThisKey="IdDBL", OtherKey="IdDBL")]
		public EntitySet<CONTENEUR> CONTENEUR
		{
			get
			{
				return this._CONTENEUR;
			}
			set
			{
				this._CONTENEUR.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DEMANDE_LIVRAISON_CONVENTIONNEL", Storage="_CONVENTIONNEL", ThisKey="IdDBL", OtherKey="IdDBL")]
		public EntitySet<CONVENTIONNEL> CONVENTIONNEL
		{
			get
			{
				return this._CONVENTIONNEL;
			}
			set
			{
				this._CONVENTIONNEL.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DEMANDE_LIVRAISON_MAFI", Storage="_MAFI", ThisKey="IdDBL", OtherKey="IdDBL")]
		public EntitySet<MAFI> MAFI
		{
			get
			{
				return this._MAFI;
			}
			set
			{
				this._MAFI.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DEMANDE_LIVRAISON_NOTE", Storage="_NOTE", ThisKey="IdDBL", OtherKey="IdDBL")]
		public EntitySet<NOTE> NOTE
		{
			get
			{
				return this._NOTE;
			}
			set
			{
				this._NOTE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UTILISATEUR_DEMANDE_LIVRAISON", Storage="_UTILISATEUR", ThisKey="IdU", OtherKey="IdU", IsForeignKey=true)]
		public UTILISATEUR UTILISATEUR
		{
			get
			{
				return this._UTILISATEUR.Entity;
			}
			set
			{
				UTILISATEUR previousValue = this._UTILISATEUR.Entity;
				if (((previousValue != value) 
							|| (this._UTILISATEUR.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UTILISATEUR.Entity = null;
						previousValue.DEMANDE_LIVRAISON.Remove(this);
					}
					this._UTILISATEUR.Entity = value;
					if ((value != null))
					{
						value.DEMANDE_LIVRAISON.Add(this);
						this._IdU = value.IdU;
					}
					else
					{
						this._IdU = default(Nullable<int>);
					}
					this.SendPropertyChanged("UTILISATEUR");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONNAISSEMENT_DEMANDE_LIVRAISON", Storage="_CONNAISSEMENT", ThisKey="IdBL", OtherKey="IdBL", IsForeignKey=true, DeleteRule="CASCADE")]
		public CONNAISSEMENT CONNAISSEMENT
		{
			get
			{
				return this._CONNAISSEMENT.Entity;
			}
			set
			{
				CONNAISSEMENT previousValue = this._CONNAISSEMENT.Entity;
				if (((previousValue != value) 
							|| (this._CONNAISSEMENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CONNAISSEMENT.Entity = null;
						previousValue.DEMANDE_LIVRAISON.Remove(this);
					}
					this._CONNAISSEMENT.Entity = value;
					if ((value != null))
					{
						value.DEMANDE_LIVRAISON.Add(this);
						this._IdBL = value.IdBL;
					}
					else
					{
						this._IdBL = default(Nullable<int>);
					}
					this.SendPropertyChanged("CONNAISSEMENT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VEHICULE(VEHICULE entity)
		{
			this.SendPropertyChanging();
			entity.DEMANDE_LIVRAISON = this;
		}
		
		private void detach_VEHICULE(VEHICULE entity)
		{
			this.SendPropertyChanging();
			entity.DEMANDE_LIVRAISON = null;
		}
		
		private void attach_CONTENEUR(CONTENEUR entity)
		{
			this.SendPropertyChanging();
			entity.DEMANDE_LIVRAISON = this;
		}
		
		private void detach_CONTENEUR(CONTENEUR entity)
		{
			this.SendPropertyChanging();
			entity.DEMANDE_LIVRAISON = null;
		}
		
		private void attach_CONVENTIONNEL(CONVENTIONNEL entity)
		{
			this.SendPropertyChanging();
			entity.DEMANDE_LIVRAISON = this;
		}
		
		private void detach_CONVENTIONNEL(CONVENTIONNEL entity)
		{
			this.SendPropertyChanging();
			entity.DEMANDE_LIVRAISON = null;
		}
		
		private void attach_MAFI(MAFI entity)
		{
			this.SendPropertyChanging();
			entity.DEMANDE_LIVRAISON = this;
		}
		
		private void detach_MAFI(MAFI entity)
		{
			this.SendPropertyChanging();
			entity.DEMANDE_LIVRAISON = null;
		}
		
		private void attach_NOTE(NOTE entity)
		{
			this.SendPropertyChanging();
			entity.DEMANDE_LIVRAISON = this;
		}
		
		private void detach_NOTE(NOTE entity)
		{
			this.SendPropertyChanging();
			entity.DEMANDE_LIVRAISON = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DROIT")]
	public partial class DROIT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdU;
		
		private short _IdOp;
		
		private EntityRef<OPERATION> _OPERATION;
		
		private EntityRef<UTILISATEUR> _UTILISATEUR;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdUChanging(int value);
    partial void OnIdUChanged();
    partial void OnIdOpChanging(short value);
    partial void OnIdOpChanged();
    #endregion
		
		public DROIT()
		{
			this._OPERATION = default(EntityRef<OPERATION>);
			this._UTILISATEUR = default(EntityRef<UTILISATEUR>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdU", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdU
		{
			get
			{
				return this._IdU;
			}
			set
			{
				if ((this._IdU != value))
				{
					if (this._UTILISATEUR.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdUChanging(value);
					this.SendPropertyChanging();
					this._IdU = value;
					this.SendPropertyChanged("IdU");
					this.OnIdUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdOp", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short IdOp
		{
			get
			{
				return this._IdOp;
			}
			set
			{
				if ((this._IdOp != value))
				{
					if (this._OPERATION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdOpChanging(value);
					this.SendPropertyChanging();
					this._IdOp = value;
					this.SendPropertyChanged("IdOp");
					this.OnIdOpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OPERATION_DROIT", Storage="_OPERATION", ThisKey="IdOp", OtherKey="IdOp", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public OPERATION OPERATION
		{
			get
			{
				return this._OPERATION.Entity;
			}
			set
			{
				OPERATION previousValue = this._OPERATION.Entity;
				if (((previousValue != value) 
							|| (this._OPERATION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OPERATION.Entity = null;
						previousValue.DROIT.Remove(this);
					}
					this._OPERATION.Entity = value;
					if ((value != null))
					{
						value.DROIT.Add(this);
						this._IdOp = value.IdOp;
					}
					else
					{
						this._IdOp = default(short);
					}
					this.SendPropertyChanged("OPERATION");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UTILISATEUR_DROIT", Storage="_UTILISATEUR", ThisKey="IdU", OtherKey="IdU", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public UTILISATEUR UTILISATEUR
		{
			get
			{
				return this._UTILISATEUR.Entity;
			}
			set
			{
				UTILISATEUR previousValue = this._UTILISATEUR.Entity;
				if (((previousValue != value) 
							|| (this._UTILISATEUR.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UTILISATEUR.Entity = null;
						previousValue.DROIT.Remove(this);
					}
					this._UTILISATEUR.Entity = value;
					if ((value != null))
					{
						value.DROIT.Add(this);
						this._IdU = value.IdU;
					}
					else
					{
						this._IdU = default(int);
					}
					this.SendPropertyChanged("UTILISATEUR");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EMPLACEMENT")]
	public partial class EMPLACEMENT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdEmpl;
		
		private string _LigEmpl;
		
		private string _ColEmpl;
		
		private System.Nullable<float> _LongMin;
		
		private System.Nullable<float> _LongMax;
		
		private System.Nullable<float> _LargMin;
		
		private System.Nullable<float> _LargMax;
		
		private string _StatutEmpl;
		
		private System.Nullable<int> _IdParc;
		
		private string _TypeEmpl;
		
		private EntitySet<OCCUPATION> _OCCUPATION;
		
		private EntityRef<PARC> _PARC;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdEmplChanging(int value);
    partial void OnIdEmplChanged();
    partial void OnLigEmplChanging(string value);
    partial void OnLigEmplChanged();
    partial void OnColEmplChanging(string value);
    partial void OnColEmplChanged();
    partial void OnLongMinChanging(System.Nullable<float> value);
    partial void OnLongMinChanged();
    partial void OnLongMaxChanging(System.Nullable<float> value);
    partial void OnLongMaxChanged();
    partial void OnLargMinChanging(System.Nullable<float> value);
    partial void OnLargMinChanged();
    partial void OnLargMaxChanging(System.Nullable<float> value);
    partial void OnLargMaxChanged();
    partial void OnStatutEmplChanging(string value);
    partial void OnStatutEmplChanged();
    partial void OnIdParcChanging(System.Nullable<int> value);
    partial void OnIdParcChanged();
    partial void OnTypeEmplChanging(string value);
    partial void OnTypeEmplChanged();
    #endregion
		
		public EMPLACEMENT()
		{
			this._OCCUPATION = new EntitySet<OCCUPATION>(new Action<OCCUPATION>(this.attach_OCCUPATION), new Action<OCCUPATION>(this.detach_OCCUPATION));
			this._PARC = default(EntityRef<PARC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEmpl", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdEmpl
		{
			get
			{
				return this._IdEmpl;
			}
			set
			{
				if ((this._IdEmpl != value))
				{
					this.OnIdEmplChanging(value);
					this.SendPropertyChanging();
					this._IdEmpl = value;
					this.SendPropertyChanged("IdEmpl");
					this.OnIdEmplChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LigEmpl", DbType="NVarChar(5)")]
		public string LigEmpl
		{
			get
			{
				return this._LigEmpl;
			}
			set
			{
				if ((this._LigEmpl != value))
				{
					this.OnLigEmplChanging(value);
					this.SendPropertyChanging();
					this._LigEmpl = value;
					this.SendPropertyChanged("LigEmpl");
					this.OnLigEmplChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColEmpl", DbType="NVarChar(5)")]
		public string ColEmpl
		{
			get
			{
				return this._ColEmpl;
			}
			set
			{
				if ((this._ColEmpl != value))
				{
					this.OnColEmplChanging(value);
					this.SendPropertyChanging();
					this._ColEmpl = value;
					this.SendPropertyChanged("ColEmpl");
					this.OnColEmplChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LongMin", DbType="Real")]
		public System.Nullable<float> LongMin
		{
			get
			{
				return this._LongMin;
			}
			set
			{
				if ((this._LongMin != value))
				{
					this.OnLongMinChanging(value);
					this.SendPropertyChanging();
					this._LongMin = value;
					this.SendPropertyChanged("LongMin");
					this.OnLongMinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LongMax", DbType="Real")]
		public System.Nullable<float> LongMax
		{
			get
			{
				return this._LongMax;
			}
			set
			{
				if ((this._LongMax != value))
				{
					this.OnLongMaxChanging(value);
					this.SendPropertyChanging();
					this._LongMax = value;
					this.SendPropertyChanged("LongMax");
					this.OnLongMaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LargMin", DbType="Real")]
		public System.Nullable<float> LargMin
		{
			get
			{
				return this._LargMin;
			}
			set
			{
				if ((this._LargMin != value))
				{
					this.OnLargMinChanging(value);
					this.SendPropertyChanging();
					this._LargMin = value;
					this.SendPropertyChanged("LargMin");
					this.OnLargMinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LargMax", DbType="Real")]
		public System.Nullable<float> LargMax
		{
			get
			{
				return this._LargMax;
			}
			set
			{
				if ((this._LargMax != value))
				{
					this.OnLargMaxChanging(value);
					this.SendPropertyChanging();
					this._LargMax = value;
					this.SendPropertyChanged("LargMax");
					this.OnLargMaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatutEmpl", DbType="NVarChar(255)")]
		public string StatutEmpl
		{
			get
			{
				return this._StatutEmpl;
			}
			set
			{
				if ((this._StatutEmpl != value))
				{
					this.OnStatutEmplChanging(value);
					this.SendPropertyChanging();
					this._StatutEmpl = value;
					this.SendPropertyChanged("StatutEmpl");
					this.OnStatutEmplChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdParc", DbType="Int")]
		public System.Nullable<int> IdParc
		{
			get
			{
				return this._IdParc;
			}
			set
			{
				if ((this._IdParc != value))
				{
					if (this._PARC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdParcChanging(value);
					this.SendPropertyChanging();
					this._IdParc = value;
					this.SendPropertyChanged("IdParc");
					this.OnIdParcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeEmpl", DbType="NVarChar(20)")]
		public string TypeEmpl
		{
			get
			{
				return this._TypeEmpl;
			}
			set
			{
				if ((this._TypeEmpl != value))
				{
					this.OnTypeEmplChanging(value);
					this.SendPropertyChanging();
					this._TypeEmpl = value;
					this.SendPropertyChanged("TypeEmpl");
					this.OnTypeEmplChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EMPLACEMENT_OCCUPATION", Storage="_OCCUPATION", ThisKey="IdEmpl", OtherKey="IdEmpl")]
		public EntitySet<OCCUPATION> OCCUPATION
		{
			get
			{
				return this._OCCUPATION;
			}
			set
			{
				this._OCCUPATION.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PARC_EMPLACEMENT", Storage="_PARC", ThisKey="IdParc", OtherKey="IdParc", IsForeignKey=true, DeleteRule="CASCADE")]
		public PARC PARC
		{
			get
			{
				return this._PARC.Entity;
			}
			set
			{
				PARC previousValue = this._PARC.Entity;
				if (((previousValue != value) 
							|| (this._PARC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PARC.Entity = null;
						previousValue.EMPLACEMENT.Remove(this);
					}
					this._PARC.Entity = value;
					if ((value != null))
					{
						value.EMPLACEMENT.Add(this);
						this._IdParc = value.IdParc;
					}
					else
					{
						this._IdParc = default(Nullable<int>);
					}
					this.SendPropertyChanged("PARC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OCCUPATION(OCCUPATION entity)
		{
			this.SendPropertyChanging();
			entity.EMPLACEMENT = this;
		}
		
		private void detach_OCCUPATION(OCCUPATION entity)
		{
			this.SendPropertyChanging();
			entity.EMPLACEMENT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FACTURE_DIT")]
	public partial class FACTURE_DIT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdFactDIT;
		
		private string _NumFactDIT;
		
		private System.Nullable<System.DateTime> _DateTrans;
		
		private System.Nullable<System.DateTime> _DateFact;
		
		private System.Nullable<int> _MntFact;
		
		private System.Nullable<int> _IdBL;
		
		private EntitySet<NOTE> _NOTE;
		
		private EntityRef<CONNAISSEMENT> _CONNAISSEMENT;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdFactDITChanging(int value);
    partial void OnIdFactDITChanged();
    partial void OnNumFactDITChanging(string value);
    partial void OnNumFactDITChanged();
    partial void OnDateTransChanging(System.Nullable<System.DateTime> value);
    partial void OnDateTransChanged();
    partial void OnDateFactChanging(System.Nullable<System.DateTime> value);
    partial void OnDateFactChanged();
    partial void OnMntFactChanging(System.Nullable<int> value);
    partial void OnMntFactChanged();
    partial void OnIdBLChanging(System.Nullable<int> value);
    partial void OnIdBLChanged();
    #endregion
		
		public FACTURE_DIT()
		{
			this._NOTE = new EntitySet<NOTE>(new Action<NOTE>(this.attach_NOTE), new Action<NOTE>(this.detach_NOTE));
			this._CONNAISSEMENT = default(EntityRef<CONNAISSEMENT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFactDIT", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdFactDIT
		{
			get
			{
				return this._IdFactDIT;
			}
			set
			{
				if ((this._IdFactDIT != value))
				{
					this.OnIdFactDITChanging(value);
					this.SendPropertyChanging();
					this._IdFactDIT = value;
					this.SendPropertyChanged("IdFactDIT");
					this.OnIdFactDITChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumFactDIT", DbType="NVarChar(20)")]
		public string NumFactDIT
		{
			get
			{
				return this._NumFactDIT;
			}
			set
			{
				if ((this._NumFactDIT != value))
				{
					this.OnNumFactDITChanging(value);
					this.SendPropertyChanging();
					this._NumFactDIT = value;
					this.SendPropertyChanged("NumFactDIT");
					this.OnNumFactDITChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTrans", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateTrans
		{
			get
			{
				return this._DateTrans;
			}
			set
			{
				if ((this._DateTrans != value))
				{
					this.OnDateTransChanging(value);
					this.SendPropertyChanging();
					this._DateTrans = value;
					this.SendPropertyChanged("DateTrans");
					this.OnDateTransChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateFact", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateFact
		{
			get
			{
				return this._DateFact;
			}
			set
			{
				if ((this._DateFact != value))
				{
					this.OnDateFactChanging(value);
					this.SendPropertyChanging();
					this._DateFact = value;
					this.SendPropertyChanged("DateFact");
					this.OnDateFactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MntFact", DbType="Int")]
		public System.Nullable<int> MntFact
		{
			get
			{
				return this._MntFact;
			}
			set
			{
				if ((this._MntFact != value))
				{
					this.OnMntFactChanging(value);
					this.SendPropertyChanging();
					this._MntFact = value;
					this.SendPropertyChanged("MntFact");
					this.OnMntFactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdBL", DbType="Int")]
		public System.Nullable<int> IdBL
		{
			get
			{
				return this._IdBL;
			}
			set
			{
				if ((this._IdBL != value))
				{
					if (this._CONNAISSEMENT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdBLChanging(value);
					this.SendPropertyChanging();
					this._IdBL = value;
					this.SendPropertyChanged("IdBL");
					this.OnIdBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FACTURE_DIT_NOTE", Storage="_NOTE", ThisKey="IdFactDIT", OtherKey="IdFactDIT")]
		public EntitySet<NOTE> NOTE
		{
			get
			{
				return this._NOTE;
			}
			set
			{
				this._NOTE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONNAISSEMENT_FACTURE_DIT", Storage="_CONNAISSEMENT", ThisKey="IdBL", OtherKey="IdBL", IsForeignKey=true)]
		public CONNAISSEMENT CONNAISSEMENT
		{
			get
			{
				return this._CONNAISSEMENT.Entity;
			}
			set
			{
				CONNAISSEMENT previousValue = this._CONNAISSEMENT.Entity;
				if (((previousValue != value) 
							|| (this._CONNAISSEMENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CONNAISSEMENT.Entity = null;
						previousValue.FACTURE_DIT.Remove(this);
					}
					this._CONNAISSEMENT.Entity = value;
					if ((value != null))
					{
						value.FACTURE_DIT.Add(this);
						this._IdBL = value.IdBL;
					}
					else
					{
						this._IdBL = default(Nullable<int>);
					}
					this.SendPropertyChanged("CONNAISSEMENT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NOTE(NOTE entity)
		{
			this.SendPropertyChanging();
			entity.FACTURE_DIT = this;
		}
		
		private void detach_NOTE(NOTE entity)
		{
			this.SendPropertyChanging();
			entity.FACTURE_DIT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FAMILLE_ARTICLE")]
	public partial class FAMILLE_ARTICLE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _CodeFamArt;
		
		private string _LibFamArt;
		
		private string _Niveau;
		
		private EntitySet<ARTICLE> _ARTICLE;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeFamArtChanging(short value);
    partial void OnCodeFamArtChanged();
    partial void OnLibFamArtChanging(string value);
    partial void OnLibFamArtChanged();
    partial void OnNiveauChanging(string value);
    partial void OnNiveauChanged();
    #endregion
		
		public FAMILLE_ARTICLE()
		{
			this._ARTICLE = new EntitySet<ARTICLE>(new Action<ARTICLE>(this.attach_ARTICLE), new Action<ARTICLE>(this.detach_ARTICLE));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeFamArt", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short CodeFamArt
		{
			get
			{
				return this._CodeFamArt;
			}
			set
			{
				if ((this._CodeFamArt != value))
				{
					this.OnCodeFamArtChanging(value);
					this.SendPropertyChanging();
					this._CodeFamArt = value;
					this.SendPropertyChanged("CodeFamArt");
					this.OnCodeFamArtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LibFamArt", DbType="NVarChar(50)")]
		public string LibFamArt
		{
			get
			{
				return this._LibFamArt;
			}
			set
			{
				if ((this._LibFamArt != value))
				{
					this.OnLibFamArtChanging(value);
					this.SendPropertyChanging();
					this._LibFamArt = value;
					this.SendPropertyChanged("LibFamArt");
					this.OnLibFamArtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Niveau", DbType="NVarChar(1)")]
		public string Niveau
		{
			get
			{
				return this._Niveau;
			}
			set
			{
				if ((this._Niveau != value))
				{
					this.OnNiveauChanging(value);
					this.SendPropertyChanging();
					this._Niveau = value;
					this.SendPropertyChanged("Niveau");
					this.OnNiveauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FAMILLE_ARTICLE_ARTICLE", Storage="_ARTICLE", ThisKey="CodeFamArt", OtherKey="CodeFamArt")]
		public EntitySet<ARTICLE> ARTICLE
		{
			get
			{
				return this._ARTICLE;
			}
			set
			{
				this._ARTICLE.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ARTICLE(ARTICLE entity)
		{
			this.SendPropertyChanging();
			entity.FAMILLE_ARTICLE = this;
		}
		
		private void detach_ARTICLE(ARTICLE entity)
		{
			this.SendPropertyChanging();
			entity.FAMILLE_ARTICLE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.JOURNAL")]
	public partial class JOURNAL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdJ;
		
		private System.Nullable<System.DateTime> _DOP;
		
		private string _IDEC;
		
		private System.Nullable<int> _IdU;
		
		private System.Nullable<short> _IdOp;
		
		private EntityRef<OPERATION> _OPERATION;
		
		private EntityRef<UTILISATEUR> _UTILISATEUR;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdJChanging(int value);
    partial void OnIdJChanged();
    partial void OnDOPChanging(System.Nullable<System.DateTime> value);
    partial void OnDOPChanged();
    partial void OnIDECChanging(string value);
    partial void OnIDECChanged();
    partial void OnIdUChanging(System.Nullable<int> value);
    partial void OnIdUChanged();
    partial void OnIdOpChanging(System.Nullable<short> value);
    partial void OnIdOpChanged();
    #endregion
		
		public JOURNAL()
		{
			this._OPERATION = default(EntityRef<OPERATION>);
			this._UTILISATEUR = default(EntityRef<UTILISATEUR>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdJ", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdJ
		{
			get
			{
				return this._IdJ;
			}
			set
			{
				if ((this._IdJ != value))
				{
					this.OnIdJChanging(value);
					this.SendPropertyChanging();
					this._IdJ = value;
					this.SendPropertyChanged("IdJ");
					this.OnIdJChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOP", DbType="DateTime")]
		public System.Nullable<System.DateTime> DOP
		{
			get
			{
				return this._DOP;
			}
			set
			{
				if ((this._DOP != value))
				{
					this.OnDOPChanging(value);
					this.SendPropertyChanging();
					this._DOP = value;
					this.SendPropertyChanged("DOP");
					this.OnDOPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDEC", DbType="Text")]
		public string IDEC
		{
			get
			{
				return this._IDEC;
			}
			set
			{
				if ((this._IDEC != value))
				{
					this.OnIDECChanging(value);
					this.SendPropertyChanging();
					this._IDEC = value;
					this.SendPropertyChanged("IDEC");
					this.OnIDECChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdU", DbType="Int")]
		public System.Nullable<int> IdU
		{
			get
			{
				return this._IdU;
			}
			set
			{
				if ((this._IdU != value))
				{
					if (this._UTILISATEUR.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdUChanging(value);
					this.SendPropertyChanging();
					this._IdU = value;
					this.SendPropertyChanged("IdU");
					this.OnIdUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdOp", DbType="SmallInt")]
		public System.Nullable<short> IdOp
		{
			get
			{
				return this._IdOp;
			}
			set
			{
				if ((this._IdOp != value))
				{
					if (this._OPERATION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdOpChanging(value);
					this.SendPropertyChanging();
					this._IdOp = value;
					this.SendPropertyChanged("IdOp");
					this.OnIdOpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OPERATION_JOURNAL", Storage="_OPERATION", ThisKey="IdOp", OtherKey="IdOp", IsForeignKey=true, DeleteRule="CASCADE")]
		public OPERATION OPERATION
		{
			get
			{
				return this._OPERATION.Entity;
			}
			set
			{
				OPERATION previousValue = this._OPERATION.Entity;
				if (((previousValue != value) 
							|| (this._OPERATION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OPERATION.Entity = null;
						previousValue.JOURNAL.Remove(this);
					}
					this._OPERATION.Entity = value;
					if ((value != null))
					{
						value.JOURNAL.Add(this);
						this._IdOp = value.IdOp;
					}
					else
					{
						this._IdOp = default(Nullable<short>);
					}
					this.SendPropertyChanged("OPERATION");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UTILISATEUR_JOURNAL", Storage="_UTILISATEUR", ThisKey="IdU", OtherKey="IdU", IsForeignKey=true, DeleteRule="CASCADE")]
		public UTILISATEUR UTILISATEUR
		{
			get
			{
				return this._UTILISATEUR.Entity;
			}
			set
			{
				UTILISATEUR previousValue = this._UTILISATEUR.Entity;
				if (((previousValue != value) 
							|| (this._UTILISATEUR.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UTILISATEUR.Entity = null;
						previousValue.JOURNAL.Remove(this);
					}
					this._UTILISATEUR.Entity = value;
					if ((value != null))
					{
						value.JOURNAL.Add(this);
						this._IdU = value.IdU;
					}
					else
					{
						this._IdU = default(Nullable<int>);
					}
					this.SendPropertyChanged("UTILISATEUR");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LIEU")]
	public partial class LIEU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdLieu;
		
		private string _NomLieu;
		
		private EntitySet<OPERATION_VEHICULE> _OPERATION_VEHICULE;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdLieuChanging(int value);
    partial void OnIdLieuChanged();
    partial void OnNomLieuChanging(string value);
    partial void OnNomLieuChanged();
    #endregion
		
		public LIEU()
		{
			this._OPERATION_VEHICULE = new EntitySet<OPERATION_VEHICULE>(new Action<OPERATION_VEHICULE>(this.attach_OPERATION_VEHICULE), new Action<OPERATION_VEHICULE>(this.detach_OPERATION_VEHICULE));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdLieu", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdLieu
		{
			get
			{
				return this._IdLieu;
			}
			set
			{
				if ((this._IdLieu != value))
				{
					this.OnIdLieuChanging(value);
					this.SendPropertyChanging();
					this._IdLieu = value;
					this.SendPropertyChanged("IdLieu");
					this.OnIdLieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NomLieu", DbType="NVarChar(50)")]
		public string NomLieu
		{
			get
			{
				return this._NomLieu;
			}
			set
			{
				if ((this._NomLieu != value))
				{
					this.OnNomLieuChanging(value);
					this.SendPropertyChanging();
					this._NomLieu = value;
					this.SendPropertyChanged("NomLieu");
					this.OnNomLieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LIEU_OPERATION_VEHICULE", Storage="_OPERATION_VEHICULE", ThisKey="IdLieu", OtherKey="IdLieu")]
		public EntitySet<OPERATION_VEHICULE> OPERATION_VEHICULE
		{
			get
			{
				return this._OPERATION_VEHICULE;
			}
			set
			{
				this._OPERATION_VEHICULE.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OPERATION_VEHICULE(OPERATION_VEHICULE entity)
		{
			this.SendPropertyChanging();
			entity.LIEU = this;
		}
		
		private void detach_OPERATION_VEHICULE(OPERATION_VEHICULE entity)
		{
			this.SendPropertyChanging();
			entity.LIEU = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LIGNE_PROFORMA")]
	public partial class LIGNE_PROFORMA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdFP;
		
		private int _IdJEF;
		
		private string _StatutLP;
		
		private System.Nullable<double> _PUEF;
		
		private System.Nullable<double> _QTEEF;
		
		private System.Nullable<float> _TauxTVA;
		
		private EntityRef<ELEMENT_FACTURATION> _ELEMENT_FACTURATION;
		
		private EntityRef<PROFORMA> _PROFORMA;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdFPChanging(int value);
    partial void OnIdFPChanged();
    partial void OnIdJEFChanging(int value);
    partial void OnIdJEFChanged();
    partial void OnStatutLPChanging(string value);
    partial void OnStatutLPChanged();
    partial void OnPUEFChanging(System.Nullable<double> value);
    partial void OnPUEFChanged();
    partial void OnQTEEFChanging(System.Nullable<double> value);
    partial void OnQTEEFChanged();
    partial void OnTauxTVAChanging(System.Nullable<float> value);
    partial void OnTauxTVAChanged();
    #endregion
		
		public LIGNE_PROFORMA()
		{
			this._ELEMENT_FACTURATION = default(EntityRef<ELEMENT_FACTURATION>);
			this._PROFORMA = default(EntityRef<PROFORMA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFP", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdFP
		{
			get
			{
				return this._IdFP;
			}
			set
			{
				if ((this._IdFP != value))
				{
					if (this._PROFORMA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdFPChanging(value);
					this.SendPropertyChanging();
					this._IdFP = value;
					this.SendPropertyChanged("IdFP");
					this.OnIdFPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdJEF", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdJEF
		{
			get
			{
				return this._IdJEF;
			}
			set
			{
				if ((this._IdJEF != value))
				{
					if (this._ELEMENT_FACTURATION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdJEFChanging(value);
					this.SendPropertyChanging();
					this._IdJEF = value;
					this.SendPropertyChanged("IdJEF");
					this.OnIdJEFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatutLP", DbType="NVarChar(1)")]
		public string StatutLP
		{
			get
			{
				return this._StatutLP;
			}
			set
			{
				if ((this._StatutLP != value))
				{
					this.OnStatutLPChanging(value);
					this.SendPropertyChanging();
					this._StatutLP = value;
					this.SendPropertyChanged("StatutLP");
					this.OnStatutLPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PUEF", DbType="Float")]
		public System.Nullable<double> PUEF
		{
			get
			{
				return this._PUEF;
			}
			set
			{
				if ((this._PUEF != value))
				{
					this.OnPUEFChanging(value);
					this.SendPropertyChanging();
					this._PUEF = value;
					this.SendPropertyChanged("PUEF");
					this.OnPUEFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTEEF", DbType="Float")]
		public System.Nullable<double> QTEEF
		{
			get
			{
				return this._QTEEF;
			}
			set
			{
				if ((this._QTEEF != value))
				{
					this.OnQTEEFChanging(value);
					this.SendPropertyChanging();
					this._QTEEF = value;
					this.SendPropertyChanged("QTEEF");
					this.OnQTEEFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TauxTVA", DbType="Real")]
		public System.Nullable<float> TauxTVA
		{
			get
			{
				return this._TauxTVA;
			}
			set
			{
				if ((this._TauxTVA != value))
				{
					this.OnTauxTVAChanging(value);
					this.SendPropertyChanging();
					this._TauxTVA = value;
					this.SendPropertyChanged("TauxTVA");
					this.OnTauxTVAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ELEMENT_FACTURATION_LIGNE_PROFORMA", Storage="_ELEMENT_FACTURATION", ThisKey="IdJEF", OtherKey="IdJEF", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public ELEMENT_FACTURATION ELEMENT_FACTURATION
		{
			get
			{
				return this._ELEMENT_FACTURATION.Entity;
			}
			set
			{
				ELEMENT_FACTURATION previousValue = this._ELEMENT_FACTURATION.Entity;
				if (((previousValue != value) 
							|| (this._ELEMENT_FACTURATION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ELEMENT_FACTURATION.Entity = null;
						previousValue.LIGNE_PROFORMA.Remove(this);
					}
					this._ELEMENT_FACTURATION.Entity = value;
					if ((value != null))
					{
						value.LIGNE_PROFORMA.Add(this);
						this._IdJEF = value.IdJEF;
					}
					else
					{
						this._IdJEF = default(int);
					}
					this.SendPropertyChanged("ELEMENT_FACTURATION");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PROFORMA_LIGNE_PROFORMA", Storage="_PROFORMA", ThisKey="IdFP", OtherKey="IdFP", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public PROFORMA PROFORMA
		{
			get
			{
				return this._PROFORMA.Entity;
			}
			set
			{
				PROFORMA previousValue = this._PROFORMA.Entity;
				if (((previousValue != value) 
							|| (this._PROFORMA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PROFORMA.Entity = null;
						previousValue.LIGNE_PROFORMA.Remove(this);
					}
					this._PROFORMA.Entity = value;
					if ((value != null))
					{
						value.LIGNE_PROFORMA.Add(this);
						this._IdFP = value.IdFP;
					}
					else
					{
						this._IdFP = default(int);
					}
					this.SendPropertyChanged("PROFORMA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LIGNE_SERVICE")]
	public partial class LIGNE_SERVICE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdLS;
		
		private System.Nullable<int> _IdOS;
		
		private System.Nullable<short> _CodeArticle;
		
		private System.Nullable<double> _QLS;
		
		private string _ULS;
		
		private System.Nullable<int> _PULS;
		
		private string _CodeTVA;
		
		private string _AILS;
		
		private string _CCArticle;
		
		private EntitySet<ELEMENT_FACTURATION> _ELEMENT_FACTURATION;
		
		private EntityRef<ARTICLE> _ARTICLE;
		
		private EntityRef<ORDRE_SERVICE> _ORDRE_SERVICE;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdLSChanging(int value);
    partial void OnIdLSChanged();
    partial void OnIdOSChanging(System.Nullable<int> value);
    partial void OnIdOSChanged();
    partial void OnCodeArticleChanging(System.Nullable<short> value);
    partial void OnCodeArticleChanged();
    partial void OnQLSChanging(System.Nullable<double> value);
    partial void OnQLSChanged();
    partial void OnULSChanging(string value);
    partial void OnULSChanged();
    partial void OnPULSChanging(System.Nullable<int> value);
    partial void OnPULSChanged();
    partial void OnCodeTVAChanging(string value);
    partial void OnCodeTVAChanged();
    partial void OnAILSChanging(string value);
    partial void OnAILSChanged();
    partial void OnCCArticleChanging(string value);
    partial void OnCCArticleChanged();
    #endregion
		
		public LIGNE_SERVICE()
		{
			this._ELEMENT_FACTURATION = new EntitySet<ELEMENT_FACTURATION>(new Action<ELEMENT_FACTURATION>(this.attach_ELEMENT_FACTURATION), new Action<ELEMENT_FACTURATION>(this.detach_ELEMENT_FACTURATION));
			this._ARTICLE = default(EntityRef<ARTICLE>);
			this._ORDRE_SERVICE = default(EntityRef<ORDRE_SERVICE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdLS", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdLS
		{
			get
			{
				return this._IdLS;
			}
			set
			{
				if ((this._IdLS != value))
				{
					this.OnIdLSChanging(value);
					this.SendPropertyChanging();
					this._IdLS = value;
					this.SendPropertyChanged("IdLS");
					this.OnIdLSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdOS", DbType="Int")]
		public System.Nullable<int> IdOS
		{
			get
			{
				return this._IdOS;
			}
			set
			{
				if ((this._IdOS != value))
				{
					if (this._ORDRE_SERVICE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdOSChanging(value);
					this.SendPropertyChanging();
					this._IdOS = value;
					this.SendPropertyChanged("IdOS");
					this.OnIdOSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeArticle", DbType="SmallInt")]
		public System.Nullable<short> CodeArticle
		{
			get
			{
				return this._CodeArticle;
			}
			set
			{
				if ((this._CodeArticle != value))
				{
					if (this._ARTICLE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodeArticleChanging(value);
					this.SendPropertyChanging();
					this._CodeArticle = value;
					this.SendPropertyChanged("CodeArticle");
					this.OnCodeArticleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QLS", DbType="Float")]
		public System.Nullable<double> QLS
		{
			get
			{
				return this._QLS;
			}
			set
			{
				if ((this._QLS != value))
				{
					this.OnQLSChanging(value);
					this.SendPropertyChanging();
					this._QLS = value;
					this.SendPropertyChanged("QLS");
					this.OnQLSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ULS", DbType="NVarChar(5)")]
		public string ULS
		{
			get
			{
				return this._ULS;
			}
			set
			{
				if ((this._ULS != value))
				{
					this.OnULSChanging(value);
					this.SendPropertyChanging();
					this._ULS = value;
					this.SendPropertyChanged("ULS");
					this.OnULSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PULS", DbType="Int")]
		public System.Nullable<int> PULS
		{
			get
			{
				return this._PULS;
			}
			set
			{
				if ((this._PULS != value))
				{
					this.OnPULSChanging(value);
					this.SendPropertyChanging();
					this._PULS = value;
					this.SendPropertyChanged("PULS");
					this.OnPULSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeTVA", DbType="NVarChar(10)")]
		public string CodeTVA
		{
			get
			{
				return this._CodeTVA;
			}
			set
			{
				if ((this._CodeTVA != value))
				{
					this.OnCodeTVAChanging(value);
					this.SendPropertyChanging();
					this._CodeTVA = value;
					this.SendPropertyChanged("CodeTVA");
					this.OnCodeTVAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AILS", DbType="NVarChar(255)")]
		public string AILS
		{
			get
			{
				return this._AILS;
			}
			set
			{
				if ((this._AILS != value))
				{
					this.OnAILSChanging(value);
					this.SendPropertyChanging();
					this._AILS = value;
					this.SendPropertyChanged("AILS");
					this.OnAILSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCArticle", DbType="NVarChar(20)")]
		public string CCArticle
		{
			get
			{
				return this._CCArticle;
			}
			set
			{
				if ((this._CCArticle != value))
				{
					this.OnCCArticleChanging(value);
					this.SendPropertyChanging();
					this._CCArticle = value;
					this.SendPropertyChanged("CCArticle");
					this.OnCCArticleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LIGNE_SERVICE_ELEMENT_FACTURATION", Storage="_ELEMENT_FACTURATION", ThisKey="IdLS", OtherKey="IdLS")]
		public EntitySet<ELEMENT_FACTURATION> ELEMENT_FACTURATION
		{
			get
			{
				return this._ELEMENT_FACTURATION;
			}
			set
			{
				this._ELEMENT_FACTURATION.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ARTICLE_LIGNE_SERVICE", Storage="_ARTICLE", ThisKey="CodeArticle", OtherKey="CodeArticle", IsForeignKey=true)]
		public ARTICLE ARTICLE
		{
			get
			{
				return this._ARTICLE.Entity;
			}
			set
			{
				ARTICLE previousValue = this._ARTICLE.Entity;
				if (((previousValue != value) 
							|| (this._ARTICLE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ARTICLE.Entity = null;
						previousValue.LIGNE_SERVICE.Remove(this);
					}
					this._ARTICLE.Entity = value;
					if ((value != null))
					{
						value.LIGNE_SERVICE.Add(this);
						this._CodeArticle = value.CodeArticle;
					}
					else
					{
						this._CodeArticle = default(Nullable<short>);
					}
					this.SendPropertyChanged("ARTICLE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ORDRE_SERVICE_LIGNE_SERVICE", Storage="_ORDRE_SERVICE", ThisKey="IdOS", OtherKey="IdOS", IsForeignKey=true)]
		public ORDRE_SERVICE ORDRE_SERVICE
		{
			get
			{
				return this._ORDRE_SERVICE.Entity;
			}
			set
			{
				ORDRE_SERVICE previousValue = this._ORDRE_SERVICE.Entity;
				if (((previousValue != value) 
							|| (this._ORDRE_SERVICE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ORDRE_SERVICE.Entity = null;
						previousValue.LIGNE_SERVICE.Remove(this);
					}
					this._ORDRE_SERVICE.Entity = value;
					if ((value != null))
					{
						value.LIGNE_SERVICE.Add(this);
						this._IdOS = value.IdOS;
					}
					else
					{
						this._IdOS = default(Nullable<int>);
					}
					this.SendPropertyChanged("ORDRE_SERVICE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ELEMENT_FACTURATION(ELEMENT_FACTURATION entity)
		{
			this.SendPropertyChanging();
			entity.LIGNE_SERVICE = this;
		}
		
		private void detach_ELEMENT_FACTURATION(ELEMENT_FACTURATION entity)
		{
			this.SendPropertyChanging();
			entity.LIGNE_SERVICE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NAVIRE")]
	public partial class NAVIRE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdNav;
		
		private string _CodeNav;
		
		private string _NomNav;
		
		private string _StatutNav;
		
		private string _AINav;
		
		private System.Nullable<int> _IdArm;
		
		private string _CodeRadio;
		
		private string _CodeTracking;
		
		private string _CodeNDS;
		
		private EntitySet<ESCALE> _ESCALE;
		
		private EntityRef<ARMATEUR> _ARMATEUR;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdNavChanging(int value);
    partial void OnIdNavChanged();
    partial void OnCodeNavChanging(string value);
    partial void OnCodeNavChanged();
    partial void OnNomNavChanging(string value);
    partial void OnNomNavChanged();
    partial void OnStatutNavChanging(string value);
    partial void OnStatutNavChanged();
    partial void OnAINavChanging(string value);
    partial void OnAINavChanged();
    partial void OnIdArmChanging(System.Nullable<int> value);
    partial void OnIdArmChanged();
    partial void OnCodeRadioChanging(string value);
    partial void OnCodeRadioChanged();
    partial void OnCodeTrackingChanging(string value);
    partial void OnCodeTrackingChanged();
    partial void OnCodeNDSChanging(string value);
    partial void OnCodeNDSChanged();
    #endregion
		
		public NAVIRE()
		{
			this._ESCALE = new EntitySet<ESCALE>(new Action<ESCALE>(this.attach_ESCALE), new Action<ESCALE>(this.detach_ESCALE));
			this._ARMATEUR = default(EntityRef<ARMATEUR>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdNav", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdNav
		{
			get
			{
				return this._IdNav;
			}
			set
			{
				if ((this._IdNav != value))
				{
					this.OnIdNavChanging(value);
					this.SendPropertyChanging();
					this._IdNav = value;
					this.SendPropertyChanged("IdNav");
					this.OnIdNavChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeNav", DbType="NVarChar(50)")]
		public string CodeNav
		{
			get
			{
				return this._CodeNav;
			}
			set
			{
				if ((this._CodeNav != value))
				{
					this.OnCodeNavChanging(value);
					this.SendPropertyChanging();
					this._CodeNav = value;
					this.SendPropertyChanged("CodeNav");
					this.OnCodeNavChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NomNav", DbType="NVarChar(50)")]
		public string NomNav
		{
			get
			{
				return this._NomNav;
			}
			set
			{
				if ((this._NomNav != value))
				{
					this.OnNomNavChanging(value);
					this.SendPropertyChanging();
					this._NomNav = value;
					this.SendPropertyChanged("NomNav");
					this.OnNomNavChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatutNav", DbType="NVarChar(1)")]
		public string StatutNav
		{
			get
			{
				return this._StatutNav;
			}
			set
			{
				if ((this._StatutNav != value))
				{
					this.OnStatutNavChanging(value);
					this.SendPropertyChanging();
					this._StatutNav = value;
					this.SendPropertyChanged("StatutNav");
					this.OnStatutNavChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AINav", DbType="NVarChar(255)")]
		public string AINav
		{
			get
			{
				return this._AINav;
			}
			set
			{
				if ((this._AINav != value))
				{
					this.OnAINavChanging(value);
					this.SendPropertyChanging();
					this._AINav = value;
					this.SendPropertyChanged("AINav");
					this.OnAINavChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdArm", DbType="Int")]
		public System.Nullable<int> IdArm
		{
			get
			{
				return this._IdArm;
			}
			set
			{
				if ((this._IdArm != value))
				{
					if (this._ARMATEUR.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdArmChanging(value);
					this.SendPropertyChanging();
					this._IdArm = value;
					this.SendPropertyChanged("IdArm");
					this.OnIdArmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeRadio", DbType="NVarChar(10)")]
		public string CodeRadio
		{
			get
			{
				return this._CodeRadio;
			}
			set
			{
				if ((this._CodeRadio != value))
				{
					this.OnCodeRadioChanging(value);
					this.SendPropertyChanging();
					this._CodeRadio = value;
					this.SendPropertyChanged("CodeRadio");
					this.OnCodeRadioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeTracking", DbType="NVarChar(10)")]
		public string CodeTracking
		{
			get
			{
				return this._CodeTracking;
			}
			set
			{
				if ((this._CodeTracking != value))
				{
					this.OnCodeTrackingChanging(value);
					this.SendPropertyChanging();
					this._CodeTracking = value;
					this.SendPropertyChanged("CodeTracking");
					this.OnCodeTrackingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeNDS", DbType="NVarChar(10)")]
		public string CodeNDS
		{
			get
			{
				return this._CodeNDS;
			}
			set
			{
				if ((this._CodeNDS != value))
				{
					this.OnCodeNDSChanging(value);
					this.SendPropertyChanging();
					this._CodeNDS = value;
					this.SendPropertyChanged("CodeNDS");
					this.OnCodeNDSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NAVIRE_ESCALE", Storage="_ESCALE", ThisKey="IdNav", OtherKey="IdNav")]
		public EntitySet<ESCALE> ESCALE
		{
			get
			{
				return this._ESCALE;
			}
			set
			{
				this._ESCALE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ARMATEUR_NAVIRE", Storage="_ARMATEUR", ThisKey="IdArm", OtherKey="IdArm", IsForeignKey=true)]
		public ARMATEUR ARMATEUR
		{
			get
			{
				return this._ARMATEUR.Entity;
			}
			set
			{
				ARMATEUR previousValue = this._ARMATEUR.Entity;
				if (((previousValue != value) 
							|| (this._ARMATEUR.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ARMATEUR.Entity = null;
						previousValue.NAVIRE.Remove(this);
					}
					this._ARMATEUR.Entity = value;
					if ((value != null))
					{
						value.NAVIRE.Add(this);
						this._IdArm = value.IdArm;
					}
					else
					{
						this._IdArm = default(Nullable<int>);
					}
					this.SendPropertyChanged("ARMATEUR");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ESCALE(ESCALE entity)
		{
			this.SendPropertyChanging();
			entity.NAVIRE = this;
		}
		
		private void detach_ESCALE(ESCALE entity)
		{
			this.SendPropertyChanging();
			entity.NAVIRE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OCCUPATION")]
	public partial class OCCUPATION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdOccup;
		
		private System.Nullable<System.DateTime> _DateDebut;
		
		private System.Nullable<System.DateTime> _DateFin;
		
		private System.Nullable<int> _IdVeh;
		
		private System.Nullable<int> _IdEmpl;
		
		private System.Nullable<int> _IdTypeOp;
		
		private System.Nullable<int> _IdCtr;
		
		private EntityRef<EMPLACEMENT> _EMPLACEMENT;
		
		private EntityRef<TYPE_OPERATION> _TYPE_OPERATION;
		
		private EntityRef<VEHICULE> _VEHICULE;
		
		private EntityRef<CONTENEUR> _CONTENEUR;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdOccupChanging(int value);
    partial void OnIdOccupChanged();
    partial void OnDateDebutChanging(System.Nullable<System.DateTime> value);
    partial void OnDateDebutChanged();
    partial void OnDateFinChanging(System.Nullable<System.DateTime> value);
    partial void OnDateFinChanged();
    partial void OnIdVehChanging(System.Nullable<int> value);
    partial void OnIdVehChanged();
    partial void OnIdEmplChanging(System.Nullable<int> value);
    partial void OnIdEmplChanged();
    partial void OnIdTypeOpChanging(System.Nullable<int> value);
    partial void OnIdTypeOpChanged();
    partial void OnIdCtrChanging(System.Nullable<int> value);
    partial void OnIdCtrChanged();
    #endregion
		
		public OCCUPATION()
		{
			this._EMPLACEMENT = default(EntityRef<EMPLACEMENT>);
			this._TYPE_OPERATION = default(EntityRef<TYPE_OPERATION>);
			this._VEHICULE = default(EntityRef<VEHICULE>);
			this._CONTENEUR = default(EntityRef<CONTENEUR>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdOccup", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdOccup
		{
			get
			{
				return this._IdOccup;
			}
			set
			{
				if ((this._IdOccup != value))
				{
					this.OnIdOccupChanging(value);
					this.SendPropertyChanging();
					this._IdOccup = value;
					this.SendPropertyChanged("IdOccup");
					this.OnIdOccupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateDebut", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateDebut
		{
			get
			{
				return this._DateDebut;
			}
			set
			{
				if ((this._DateDebut != value))
				{
					this.OnDateDebutChanging(value);
					this.SendPropertyChanging();
					this._DateDebut = value;
					this.SendPropertyChanged("DateDebut");
					this.OnDateDebutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateFin", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateFin
		{
			get
			{
				return this._DateFin;
			}
			set
			{
				if ((this._DateFin != value))
				{
					this.OnDateFinChanging(value);
					this.SendPropertyChanging();
					this._DateFin = value;
					this.SendPropertyChanged("DateFin");
					this.OnDateFinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdVeh", DbType="Int")]
		public System.Nullable<int> IdVeh
		{
			get
			{
				return this._IdVeh;
			}
			set
			{
				if ((this._IdVeh != value))
				{
					if (this._VEHICULE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdVehChanging(value);
					this.SendPropertyChanging();
					this._IdVeh = value;
					this.SendPropertyChanged("IdVeh");
					this.OnIdVehChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEmpl", DbType="Int")]
		public System.Nullable<int> IdEmpl
		{
			get
			{
				return this._IdEmpl;
			}
			set
			{
				if ((this._IdEmpl != value))
				{
					if (this._EMPLACEMENT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdEmplChanging(value);
					this.SendPropertyChanging();
					this._IdEmpl = value;
					this.SendPropertyChanged("IdEmpl");
					this.OnIdEmplChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTypeOp", DbType="Int")]
		public System.Nullable<int> IdTypeOp
		{
			get
			{
				return this._IdTypeOp;
			}
			set
			{
				if ((this._IdTypeOp != value))
				{
					if (this._TYPE_OPERATION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdTypeOpChanging(value);
					this.SendPropertyChanging();
					this._IdTypeOp = value;
					this.SendPropertyChanged("IdTypeOp");
					this.OnIdTypeOpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCtr", DbType="Int")]
		public System.Nullable<int> IdCtr
		{
			get
			{
				return this._IdCtr;
			}
			set
			{
				if ((this._IdCtr != value))
				{
					if (this._CONTENEUR.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdCtrChanging(value);
					this.SendPropertyChanging();
					this._IdCtr = value;
					this.SendPropertyChanged("IdCtr");
					this.OnIdCtrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EMPLACEMENT_OCCUPATION", Storage="_EMPLACEMENT", ThisKey="IdEmpl", OtherKey="IdEmpl", IsForeignKey=true, DeleteRule="CASCADE")]
		public EMPLACEMENT EMPLACEMENT
		{
			get
			{
				return this._EMPLACEMENT.Entity;
			}
			set
			{
				EMPLACEMENT previousValue = this._EMPLACEMENT.Entity;
				if (((previousValue != value) 
							|| (this._EMPLACEMENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EMPLACEMENT.Entity = null;
						previousValue.OCCUPATION.Remove(this);
					}
					this._EMPLACEMENT.Entity = value;
					if ((value != null))
					{
						value.OCCUPATION.Add(this);
						this._IdEmpl = value.IdEmpl;
					}
					else
					{
						this._IdEmpl = default(Nullable<int>);
					}
					this.SendPropertyChanged("EMPLACEMENT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TYPE_OPERATION_OCCUPATION", Storage="_TYPE_OPERATION", ThisKey="IdTypeOp", OtherKey="IdTypeOp", IsForeignKey=true, DeleteRule="CASCADE")]
		public TYPE_OPERATION TYPE_OPERATION
		{
			get
			{
				return this._TYPE_OPERATION.Entity;
			}
			set
			{
				TYPE_OPERATION previousValue = this._TYPE_OPERATION.Entity;
				if (((previousValue != value) 
							|| (this._TYPE_OPERATION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TYPE_OPERATION.Entity = null;
						previousValue.OCCUPATION.Remove(this);
					}
					this._TYPE_OPERATION.Entity = value;
					if ((value != null))
					{
						value.OCCUPATION.Add(this);
						this._IdTypeOp = value.IdTypeOp;
					}
					else
					{
						this._IdTypeOp = default(Nullable<int>);
					}
					this.SendPropertyChanged("TYPE_OPERATION");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VEHICULE_OCCUPATION", Storage="_VEHICULE", ThisKey="IdVeh", OtherKey="IdVeh", IsForeignKey=true, DeleteRule="CASCADE")]
		public VEHICULE VEHICULE
		{
			get
			{
				return this._VEHICULE.Entity;
			}
			set
			{
				VEHICULE previousValue = this._VEHICULE.Entity;
				if (((previousValue != value) 
							|| (this._VEHICULE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VEHICULE.Entity = null;
						previousValue.OCCUPATION.Remove(this);
					}
					this._VEHICULE.Entity = value;
					if ((value != null))
					{
						value.OCCUPATION.Add(this);
						this._IdVeh = value.IdVeh;
					}
					else
					{
						this._IdVeh = default(Nullable<int>);
					}
					this.SendPropertyChanged("VEHICULE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONTENEUR_OCCUPATION", Storage="_CONTENEUR", ThisKey="IdCtr", OtherKey="IdCtr", IsForeignKey=true)]
		public CONTENEUR CONTENEUR
		{
			get
			{
				return this._CONTENEUR.Entity;
			}
			set
			{
				CONTENEUR previousValue = this._CONTENEUR.Entity;
				if (((previousValue != value) 
							|| (this._CONTENEUR.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CONTENEUR.Entity = null;
						previousValue.OCCUPATION.Remove(this);
					}
					this._CONTENEUR.Entity = value;
					if ((value != null))
					{
						value.OCCUPATION.Add(this);
						this._IdCtr = value.IdCtr;
					}
					else
					{
						this._IdCtr = default(Nullable<int>);
					}
					this.SendPropertyChanged("CONTENEUR");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OPERATION")]
	public partial class OPERATION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _IdOp;
		
		private string _NomOp;
		
		private EntitySet<DROIT> _DROIT;
		
		private EntitySet<JOURNAL> _JOURNAL;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdOpChanging(short value);
    partial void OnIdOpChanged();
    partial void OnNomOpChanging(string value);
    partial void OnNomOpChanged();
    #endregion
		
		public OPERATION()
		{
			this._DROIT = new EntitySet<DROIT>(new Action<DROIT>(this.attach_DROIT), new Action<DROIT>(this.detach_DROIT));
			this._JOURNAL = new EntitySet<JOURNAL>(new Action<JOURNAL>(this.attach_JOURNAL), new Action<JOURNAL>(this.detach_JOURNAL));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdOp", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short IdOp
		{
			get
			{
				return this._IdOp;
			}
			set
			{
				if ((this._IdOp != value))
				{
					this.OnIdOpChanging(value);
					this.SendPropertyChanging();
					this._IdOp = value;
					this.SendPropertyChanged("IdOp");
					this.OnIdOpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NomOp", DbType="NVarChar(100)")]
		public string NomOp
		{
			get
			{
				return this._NomOp;
			}
			set
			{
				if ((this._NomOp != value))
				{
					this.OnNomOpChanging(value);
					this.SendPropertyChanging();
					this._NomOp = value;
					this.SendPropertyChanged("NomOp");
					this.OnNomOpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OPERATION_DROIT", Storage="_DROIT", ThisKey="IdOp", OtherKey="IdOp")]
		public EntitySet<DROIT> DROIT
		{
			get
			{
				return this._DROIT;
			}
			set
			{
				this._DROIT.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OPERATION_JOURNAL", Storage="_JOURNAL", ThisKey="IdOp", OtherKey="IdOp")]
		public EntitySet<JOURNAL> JOURNAL
		{
			get
			{
				return this._JOURNAL;
			}
			set
			{
				this._JOURNAL.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DROIT(DROIT entity)
		{
			this.SendPropertyChanging();
			entity.OPERATION = this;
		}
		
		private void detach_DROIT(DROIT entity)
		{
			this.SendPropertyChanging();
			entity.OPERATION = null;
		}
		
		private void attach_JOURNAL(JOURNAL entity)
		{
			this.SendPropertyChanging();
			entity.OPERATION = this;
		}
		
		private void detach_JOURNAL(JOURNAL entity)
		{
			this.SendPropertyChanging();
			entity.OPERATION = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OPERATION_ARMATEUR")]
	public partial class OPERATION_ARMATEUR : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdEsc;
		
		private int _IdTypeOp;
		
		private System.Nullable<double> _QTE;
		
		private System.Nullable<double> _Poids;
		
		private System.Nullable<double> _Volume;
		
		private string _Remarques;
		
		private EntityRef<TYPE_OPERATION> _TYPE_OPERATION;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdEscChanging(int value);
    partial void OnIdEscChanged();
    partial void OnIdTypeOpChanging(int value);
    partial void OnIdTypeOpChanged();
    partial void OnQTEChanging(System.Nullable<double> value);
    partial void OnQTEChanged();
    partial void OnPoidsChanging(System.Nullable<double> value);
    partial void OnPoidsChanged();
    partial void OnVolumeChanging(System.Nullable<double> value);
    partial void OnVolumeChanged();
    partial void OnRemarquesChanging(string value);
    partial void OnRemarquesChanged();
    #endregion
		
		public OPERATION_ARMATEUR()
		{
			this._TYPE_OPERATION = default(EntityRef<TYPE_OPERATION>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEsc", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdEsc
		{
			get
			{
				return this._IdEsc;
			}
			set
			{
				if ((this._IdEsc != value))
				{
					this.OnIdEscChanging(value);
					this.SendPropertyChanging();
					this._IdEsc = value;
					this.SendPropertyChanged("IdEsc");
					this.OnIdEscChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTypeOp", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdTypeOp
		{
			get
			{
				return this._IdTypeOp;
			}
			set
			{
				if ((this._IdTypeOp != value))
				{
					if (this._TYPE_OPERATION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdTypeOpChanging(value);
					this.SendPropertyChanging();
					this._IdTypeOp = value;
					this.SendPropertyChanged("IdTypeOp");
					this.OnIdTypeOpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTE", DbType="Float")]
		public System.Nullable<double> QTE
		{
			get
			{
				return this._QTE;
			}
			set
			{
				if ((this._QTE != value))
				{
					this.OnQTEChanging(value);
					this.SendPropertyChanging();
					this._QTE = value;
					this.SendPropertyChanged("QTE");
					this.OnQTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Poids", DbType="Float")]
		public System.Nullable<double> Poids
		{
			get
			{
				return this._Poids;
			}
			set
			{
				if ((this._Poids != value))
				{
					this.OnPoidsChanging(value);
					this.SendPropertyChanging();
					this._Poids = value;
					this.SendPropertyChanged("Poids");
					this.OnPoidsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Volume", DbType="Float")]
		public System.Nullable<double> Volume
		{
			get
			{
				return this._Volume;
			}
			set
			{
				if ((this._Volume != value))
				{
					this.OnVolumeChanging(value);
					this.SendPropertyChanging();
					this._Volume = value;
					this.SendPropertyChanged("Volume");
					this.OnVolumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarques", DbType="NVarChar(255)")]
		public string Remarques
		{
			get
			{
				return this._Remarques;
			}
			set
			{
				if ((this._Remarques != value))
				{
					this.OnRemarquesChanging(value);
					this.SendPropertyChanging();
					this._Remarques = value;
					this.SendPropertyChanged("Remarques");
					this.OnRemarquesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TYPE_OPERATION_OPERATION_ARMATEUR", Storage="_TYPE_OPERATION", ThisKey="IdTypeOp", OtherKey="IdTypeOp", IsForeignKey=true)]
		public TYPE_OPERATION TYPE_OPERATION
		{
			get
			{
				return this._TYPE_OPERATION.Entity;
			}
			set
			{
				TYPE_OPERATION previousValue = this._TYPE_OPERATION.Entity;
				if (((previousValue != value) 
							|| (this._TYPE_OPERATION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TYPE_OPERATION.Entity = null;
						previousValue.OPERATION_ARMATEUR = null;
					}
					this._TYPE_OPERATION.Entity = value;
					if ((value != null))
					{
						value.OPERATION_ARMATEUR = this;
						this._IdTypeOp = value.IdTypeOp;
					}
					else
					{
						this._IdTypeOp = default(int);
					}
					this.SendPropertyChanged("TYPE_OPERATION");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OPERATION_CONTENEUR")]
	public partial class OPERATION_CONTENEUR : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdOpCtr;
		
		private System.Nullable<int> _IdCtr;
		
		private System.Nullable<int> _IdTypeOp;
		
		private System.Nullable<System.DateTime> _DateOp;
		
		private string _AIOp;
		
		private System.Nullable<int> _IdU;
		
		private EntityRef<TYPE_OPERATION> _TYPE_OPERATION;
		
		private EntityRef<CONTENEUR> _CONTENEUR;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdOpCtrChanging(int value);
    partial void OnIdOpCtrChanged();
    partial void OnIdCtrChanging(System.Nullable<int> value);
    partial void OnIdCtrChanged();
    partial void OnIdTypeOpChanging(System.Nullable<int> value);
    partial void OnIdTypeOpChanged();
    partial void OnDateOpChanging(System.Nullable<System.DateTime> value);
    partial void OnDateOpChanged();
    partial void OnAIOpChanging(string value);
    partial void OnAIOpChanged();
    partial void OnIdUChanging(System.Nullable<int> value);
    partial void OnIdUChanged();
    #endregion
		
		public OPERATION_CONTENEUR()
		{
			this._TYPE_OPERATION = default(EntityRef<TYPE_OPERATION>);
			this._CONTENEUR = default(EntityRef<CONTENEUR>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdOpCtr", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdOpCtr
		{
			get
			{
				return this._IdOpCtr;
			}
			set
			{
				if ((this._IdOpCtr != value))
				{
					this.OnIdOpCtrChanging(value);
					this.SendPropertyChanging();
					this._IdOpCtr = value;
					this.SendPropertyChanged("IdOpCtr");
					this.OnIdOpCtrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCtr", DbType="Int")]
		public System.Nullable<int> IdCtr
		{
			get
			{
				return this._IdCtr;
			}
			set
			{
				if ((this._IdCtr != value))
				{
					if (this._CONTENEUR.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdCtrChanging(value);
					this.SendPropertyChanging();
					this._IdCtr = value;
					this.SendPropertyChanged("IdCtr");
					this.OnIdCtrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTypeOp", DbType="Int")]
		public System.Nullable<int> IdTypeOp
		{
			get
			{
				return this._IdTypeOp;
			}
			set
			{
				if ((this._IdTypeOp != value))
				{
					if (this._TYPE_OPERATION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdTypeOpChanging(value);
					this.SendPropertyChanging();
					this._IdTypeOp = value;
					this.SendPropertyChanged("IdTypeOp");
					this.OnIdTypeOpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOp", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateOp
		{
			get
			{
				return this._DateOp;
			}
			set
			{
				if ((this._DateOp != value))
				{
					this.OnDateOpChanging(value);
					this.SendPropertyChanging();
					this._DateOp = value;
					this.SendPropertyChanged("DateOp");
					this.OnDateOpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AIOp", DbType="NVarChar(255)")]
		public string AIOp
		{
			get
			{
				return this._AIOp;
			}
			set
			{
				if ((this._AIOp != value))
				{
					this.OnAIOpChanging(value);
					this.SendPropertyChanging();
					this._AIOp = value;
					this.SendPropertyChanged("AIOp");
					this.OnAIOpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdU", DbType="Int")]
		public System.Nullable<int> IdU
		{
			get
			{
				return this._IdU;
			}
			set
			{
				if ((this._IdU != value))
				{
					this.OnIdUChanging(value);
					this.SendPropertyChanging();
					this._IdU = value;
					this.SendPropertyChanged("IdU");
					this.OnIdUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TYPE_OPERATION_OPERATION_CONTENEUR", Storage="_TYPE_OPERATION", ThisKey="IdTypeOp", OtherKey="IdTypeOp", IsForeignKey=true, DeleteRule="CASCADE")]
		public TYPE_OPERATION TYPE_OPERATION
		{
			get
			{
				return this._TYPE_OPERATION.Entity;
			}
			set
			{
				TYPE_OPERATION previousValue = this._TYPE_OPERATION.Entity;
				if (((previousValue != value) 
							|| (this._TYPE_OPERATION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TYPE_OPERATION.Entity = null;
						previousValue.OPERATION_CONTENEUR.Remove(this);
					}
					this._TYPE_OPERATION.Entity = value;
					if ((value != null))
					{
						value.OPERATION_CONTENEUR.Add(this);
						this._IdTypeOp = value.IdTypeOp;
					}
					else
					{
						this._IdTypeOp = default(Nullable<int>);
					}
					this.SendPropertyChanged("TYPE_OPERATION");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONTENEUR_OPERATION_CONTENEUR", Storage="_CONTENEUR", ThisKey="IdCtr", OtherKey="IdCtr", IsForeignKey=true, DeleteRule="CASCADE")]
		public CONTENEUR CONTENEUR
		{
			get
			{
				return this._CONTENEUR.Entity;
			}
			set
			{
				CONTENEUR previousValue = this._CONTENEUR.Entity;
				if (((previousValue != value) 
							|| (this._CONTENEUR.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CONTENEUR.Entity = null;
						previousValue.OPERATION_CONTENEUR.Remove(this);
					}
					this._CONTENEUR.Entity = value;
					if ((value != null))
					{
						value.OPERATION_CONTENEUR.Add(this);
						this._IdCtr = value.IdCtr;
					}
					else
					{
						this._IdCtr = default(Nullable<int>);
					}
					this.SendPropertyChanged("CONTENEUR");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OPERATION_CONVENTIONNEL")]
	public partial class OPERATION_CONVENTIONNEL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdOpGC;
		
		private System.Nullable<int> _IdGC;
		
		private System.Nullable<int> _IdTypeOp;
		
		private System.Nullable<System.DateTime> _DateOp;
		
		private string _AIOp;
		
		private System.Nullable<int> _IdU;
		
		private EntityRef<TYPE_OPERATION> _TYPE_OPERATION;
		
		private EntityRef<CONVENTIONNEL> _CONVENTIONNEL;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdOpGCChanging(int value);
    partial void OnIdOpGCChanged();
    partial void OnIdGCChanging(System.Nullable<int> value);
    partial void OnIdGCChanged();
    partial void OnIdTypeOpChanging(System.Nullable<int> value);
    partial void OnIdTypeOpChanged();
    partial void OnDateOpChanging(System.Nullable<System.DateTime> value);
    partial void OnDateOpChanged();
    partial void OnAIOpChanging(string value);
    partial void OnAIOpChanged();
    partial void OnIdUChanging(System.Nullable<int> value);
    partial void OnIdUChanged();
    #endregion
		
		public OPERATION_CONVENTIONNEL()
		{
			this._TYPE_OPERATION = default(EntityRef<TYPE_OPERATION>);
			this._CONVENTIONNEL = default(EntityRef<CONVENTIONNEL>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdOpGC", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdOpGC
		{
			get
			{
				return this._IdOpGC;
			}
			set
			{
				if ((this._IdOpGC != value))
				{
					this.OnIdOpGCChanging(value);
					this.SendPropertyChanging();
					this._IdOpGC = value;
					this.SendPropertyChanged("IdOpGC");
					this.OnIdOpGCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdGC", DbType="Int")]
		public System.Nullable<int> IdGC
		{
			get
			{
				return this._IdGC;
			}
			set
			{
				if ((this._IdGC != value))
				{
					if (this._CONVENTIONNEL.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdGCChanging(value);
					this.SendPropertyChanging();
					this._IdGC = value;
					this.SendPropertyChanged("IdGC");
					this.OnIdGCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTypeOp", DbType="Int")]
		public System.Nullable<int> IdTypeOp
		{
			get
			{
				return this._IdTypeOp;
			}
			set
			{
				if ((this._IdTypeOp != value))
				{
					if (this._TYPE_OPERATION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdTypeOpChanging(value);
					this.SendPropertyChanging();
					this._IdTypeOp = value;
					this.SendPropertyChanged("IdTypeOp");
					this.OnIdTypeOpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOp", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateOp
		{
			get
			{
				return this._DateOp;
			}
			set
			{
				if ((this._DateOp != value))
				{
					this.OnDateOpChanging(value);
					this.SendPropertyChanging();
					this._DateOp = value;
					this.SendPropertyChanged("DateOp");
					this.OnDateOpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AIOp", DbType="NVarChar(255)")]
		public string AIOp
		{
			get
			{
				return this._AIOp;
			}
			set
			{
				if ((this._AIOp != value))
				{
					this.OnAIOpChanging(value);
					this.SendPropertyChanging();
					this._AIOp = value;
					this.SendPropertyChanged("AIOp");
					this.OnAIOpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdU", DbType="Int")]
		public System.Nullable<int> IdU
		{
			get
			{
				return this._IdU;
			}
			set
			{
				if ((this._IdU != value))
				{
					this.OnIdUChanging(value);
					this.SendPropertyChanging();
					this._IdU = value;
					this.SendPropertyChanged("IdU");
					this.OnIdUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TYPE_OPERATION_OPERATION_CONVENTIONNEL", Storage="_TYPE_OPERATION", ThisKey="IdTypeOp", OtherKey="IdTypeOp", IsForeignKey=true, DeleteRule="CASCADE")]
		public TYPE_OPERATION TYPE_OPERATION
		{
			get
			{
				return this._TYPE_OPERATION.Entity;
			}
			set
			{
				TYPE_OPERATION previousValue = this._TYPE_OPERATION.Entity;
				if (((previousValue != value) 
							|| (this._TYPE_OPERATION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TYPE_OPERATION.Entity = null;
						previousValue.OPERATION_CONVENTIONNEL.Remove(this);
					}
					this._TYPE_OPERATION.Entity = value;
					if ((value != null))
					{
						value.OPERATION_CONVENTIONNEL.Add(this);
						this._IdTypeOp = value.IdTypeOp;
					}
					else
					{
						this._IdTypeOp = default(Nullable<int>);
					}
					this.SendPropertyChanged("TYPE_OPERATION");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONVENTIONNEL_OPERATION_CONVENTIONNEL", Storage="_CONVENTIONNEL", ThisKey="IdGC", OtherKey="IdGC", IsForeignKey=true, DeleteRule="CASCADE")]
		public CONVENTIONNEL CONVENTIONNEL
		{
			get
			{
				return this._CONVENTIONNEL.Entity;
			}
			set
			{
				CONVENTIONNEL previousValue = this._CONVENTIONNEL.Entity;
				if (((previousValue != value) 
							|| (this._CONVENTIONNEL.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CONVENTIONNEL.Entity = null;
						previousValue.OPERATION_CONVENTIONNEL.Remove(this);
					}
					this._CONVENTIONNEL.Entity = value;
					if ((value != null))
					{
						value.OPERATION_CONVENTIONNEL.Add(this);
						this._IdGC = value.IdGC;
					}
					else
					{
						this._IdGC = default(Nullable<int>);
					}
					this.SendPropertyChanged("CONVENTIONNEL");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OPERATION_VEHICULE")]
	public partial class OPERATION_VEHICULE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdOpVeh;
		
		private System.Nullable<int> _IdVeh;
		
		private System.Nullable<int> _IdTypeOp;
		
		private System.Nullable<System.DateTime> _DateOp;
		
		private string _AIOp;
		
		private System.Nullable<int> _IdU;
		
		private System.Nullable<int> _IdLieu;
		
		private EntityRef<LIEU> _LIEU;
		
		private EntityRef<TYPE_OPERATION> _TYPE_OPERATION;
		
		private EntityRef<VEHICULE> _VEHICULE;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdOpVehChanging(int value);
    partial void OnIdOpVehChanged();
    partial void OnIdVehChanging(System.Nullable<int> value);
    partial void OnIdVehChanged();
    partial void OnIdTypeOpChanging(System.Nullable<int> value);
    partial void OnIdTypeOpChanged();
    partial void OnDateOpChanging(System.Nullable<System.DateTime> value);
    partial void OnDateOpChanged();
    partial void OnAIOpChanging(string value);
    partial void OnAIOpChanged();
    partial void OnIdUChanging(System.Nullable<int> value);
    partial void OnIdUChanged();
    partial void OnIdLieuChanging(System.Nullable<int> value);
    partial void OnIdLieuChanged();
    #endregion
		
		public OPERATION_VEHICULE()
		{
			this._LIEU = default(EntityRef<LIEU>);
			this._TYPE_OPERATION = default(EntityRef<TYPE_OPERATION>);
			this._VEHICULE = default(EntityRef<VEHICULE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdOpVeh", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdOpVeh
		{
			get
			{
				return this._IdOpVeh;
			}
			set
			{
				if ((this._IdOpVeh != value))
				{
					this.OnIdOpVehChanging(value);
					this.SendPropertyChanging();
					this._IdOpVeh = value;
					this.SendPropertyChanged("IdOpVeh");
					this.OnIdOpVehChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdVeh", DbType="Int")]
		public System.Nullable<int> IdVeh
		{
			get
			{
				return this._IdVeh;
			}
			set
			{
				if ((this._IdVeh != value))
				{
					if (this._VEHICULE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdVehChanging(value);
					this.SendPropertyChanging();
					this._IdVeh = value;
					this.SendPropertyChanged("IdVeh");
					this.OnIdVehChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTypeOp", DbType="Int")]
		public System.Nullable<int> IdTypeOp
		{
			get
			{
				return this._IdTypeOp;
			}
			set
			{
				if ((this._IdTypeOp != value))
				{
					if (this._TYPE_OPERATION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdTypeOpChanging(value);
					this.SendPropertyChanging();
					this._IdTypeOp = value;
					this.SendPropertyChanged("IdTypeOp");
					this.OnIdTypeOpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOp", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateOp
		{
			get
			{
				return this._DateOp;
			}
			set
			{
				if ((this._DateOp != value))
				{
					this.OnDateOpChanging(value);
					this.SendPropertyChanging();
					this._DateOp = value;
					this.SendPropertyChanged("DateOp");
					this.OnDateOpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AIOp", DbType="NVarChar(255)")]
		public string AIOp
		{
			get
			{
				return this._AIOp;
			}
			set
			{
				if ((this._AIOp != value))
				{
					this.OnAIOpChanging(value);
					this.SendPropertyChanging();
					this._AIOp = value;
					this.SendPropertyChanged("AIOp");
					this.OnAIOpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdU", DbType="Int")]
		public System.Nullable<int> IdU
		{
			get
			{
				return this._IdU;
			}
			set
			{
				if ((this._IdU != value))
				{
					this.OnIdUChanging(value);
					this.SendPropertyChanging();
					this._IdU = value;
					this.SendPropertyChanged("IdU");
					this.OnIdUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdLieu", DbType="Int")]
		public System.Nullable<int> IdLieu
		{
			get
			{
				return this._IdLieu;
			}
			set
			{
				if ((this._IdLieu != value))
				{
					if (this._LIEU.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdLieuChanging(value);
					this.SendPropertyChanging();
					this._IdLieu = value;
					this.SendPropertyChanged("IdLieu");
					this.OnIdLieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LIEU_OPERATION_VEHICULE", Storage="_LIEU", ThisKey="IdLieu", OtherKey="IdLieu", IsForeignKey=true)]
		public LIEU LIEU
		{
			get
			{
				return this._LIEU.Entity;
			}
			set
			{
				LIEU previousValue = this._LIEU.Entity;
				if (((previousValue != value) 
							|| (this._LIEU.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LIEU.Entity = null;
						previousValue.OPERATION_VEHICULE.Remove(this);
					}
					this._LIEU.Entity = value;
					if ((value != null))
					{
						value.OPERATION_VEHICULE.Add(this);
						this._IdLieu = value.IdLieu;
					}
					else
					{
						this._IdLieu = default(Nullable<int>);
					}
					this.SendPropertyChanged("LIEU");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TYPE_OPERATION_OPERATION_VEHICULE", Storage="_TYPE_OPERATION", ThisKey="IdTypeOp", OtherKey="IdTypeOp", IsForeignKey=true, DeleteRule="CASCADE")]
		public TYPE_OPERATION TYPE_OPERATION
		{
			get
			{
				return this._TYPE_OPERATION.Entity;
			}
			set
			{
				TYPE_OPERATION previousValue = this._TYPE_OPERATION.Entity;
				if (((previousValue != value) 
							|| (this._TYPE_OPERATION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TYPE_OPERATION.Entity = null;
						previousValue.OPERATION_VEHICULE.Remove(this);
					}
					this._TYPE_OPERATION.Entity = value;
					if ((value != null))
					{
						value.OPERATION_VEHICULE.Add(this);
						this._IdTypeOp = value.IdTypeOp;
					}
					else
					{
						this._IdTypeOp = default(Nullable<int>);
					}
					this.SendPropertyChanged("TYPE_OPERATION");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VEHICULE_OPERATION_VEHICULE", Storage="_VEHICULE", ThisKey="IdVeh", OtherKey="IdVeh", IsForeignKey=true, DeleteRule="CASCADE")]
		public VEHICULE VEHICULE
		{
			get
			{
				return this._VEHICULE.Entity;
			}
			set
			{
				VEHICULE previousValue = this._VEHICULE.Entity;
				if (((previousValue != value) 
							|| (this._VEHICULE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VEHICULE.Entity = null;
						previousValue.OPERATION_VEHICULE.Remove(this);
					}
					this._VEHICULE.Entity = value;
					if ((value != null))
					{
						value.OPERATION_VEHICULE.Add(this);
						this._IdVeh = value.IdVeh;
					}
					else
					{
						this._IdVeh = default(Nullable<int>);
					}
					this.SendPropertyChanged("VEHICULE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ORDRE_SERVICE")]
	public partial class ORDRE_SERVICE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdOS;
		
		private System.Nullable<System.DateTime> _DCrOS;
		
		private System.Nullable<System.DateTime> _DPExOS;
		
		private System.Nullable<System.DateTime> _DRExOS;
		
		private System.Nullable<System.DateTime> _DClOS;
		
		private string _LibOS;
		
		private string _ObsOS;
		
		private System.Nullable<int> _IdEsc;
		
		private System.Nullable<int> _IdBL;
		
		private System.Nullable<int> _IdVeh;
		
		private System.Nullable<int> _IdCtr;
		
		private System.Nullable<int> _IdGC;
		
		private System.Nullable<int> _IdPO;
		
		private System.Nullable<int> _IdPDN;
		
		private System.Nullable<int> _IdPINV;
		
		private System.Nullable<System.DateTime> _DVOS;
		
		private System.Nullable<int> _IdFsseur;
		
		private string _StatutOS;
		
		private System.Nullable<int> _IdMafi;
		
		private EntitySet<LIGNE_SERVICE> _LIGNE_SERVICE;
		
		private EntitySet<ELEMENT_FACTURATION> _ELEMENT_FACTURATION;
		
		private EntitySet<NOTE> _NOTE;
		
		private EntityRef<ESCALE> _ESCALE;
		
		private EntityRef<CONNAISSEMENT> _CONNAISSEMENT;
		
		private EntityRef<VEHICULE> _VEHICULE;
		
		private EntityRef<CONTENEUR> _CONTENEUR;
		
		private EntityRef<CONVENTIONNEL> _CONVENTIONNEL;
		
		private EntityRef<FOURNISSEUR> _FOURNISSEUR;
		
		private EntityRef<MAFI> _MAFI;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdOSChanging(int value);
    partial void OnIdOSChanged();
    partial void OnDCrOSChanging(System.Nullable<System.DateTime> value);
    partial void OnDCrOSChanged();
    partial void OnDPExOSChanging(System.Nullable<System.DateTime> value);
    partial void OnDPExOSChanged();
    partial void OnDRExOSChanging(System.Nullable<System.DateTime> value);
    partial void OnDRExOSChanged();
    partial void OnDClOSChanging(System.Nullable<System.DateTime> value);
    partial void OnDClOSChanged();
    partial void OnLibOSChanging(string value);
    partial void OnLibOSChanged();
    partial void OnObsOSChanging(string value);
    partial void OnObsOSChanged();
    partial void OnIdEscChanging(System.Nullable<int> value);
    partial void OnIdEscChanged();
    partial void OnIdBLChanging(System.Nullable<int> value);
    partial void OnIdBLChanged();
    partial void OnIdVehChanging(System.Nullable<int> value);
    partial void OnIdVehChanged();
    partial void OnIdCtrChanging(System.Nullable<int> value);
    partial void OnIdCtrChanged();
    partial void OnIdGCChanging(System.Nullable<int> value);
    partial void OnIdGCChanged();
    partial void OnIdPOChanging(System.Nullable<int> value);
    partial void OnIdPOChanged();
    partial void OnIdPDNChanging(System.Nullable<int> value);
    partial void OnIdPDNChanged();
    partial void OnIdPINVChanging(System.Nullable<int> value);
    partial void OnIdPINVChanged();
    partial void OnDVOSChanging(System.Nullable<System.DateTime> value);
    partial void OnDVOSChanged();
    partial void OnIdFsseurChanging(System.Nullable<int> value);
    partial void OnIdFsseurChanged();
    partial void OnStatutOSChanging(string value);
    partial void OnStatutOSChanged();
    partial void OnIdMafiChanging(System.Nullable<int> value);
    partial void OnIdMafiChanged();
    #endregion
		
		public ORDRE_SERVICE()
		{
			this._LIGNE_SERVICE = new EntitySet<LIGNE_SERVICE>(new Action<LIGNE_SERVICE>(this.attach_LIGNE_SERVICE), new Action<LIGNE_SERVICE>(this.detach_LIGNE_SERVICE));
			this._ELEMENT_FACTURATION = new EntitySet<ELEMENT_FACTURATION>(new Action<ELEMENT_FACTURATION>(this.attach_ELEMENT_FACTURATION), new Action<ELEMENT_FACTURATION>(this.detach_ELEMENT_FACTURATION));
			this._NOTE = new EntitySet<NOTE>(new Action<NOTE>(this.attach_NOTE), new Action<NOTE>(this.detach_NOTE));
			this._ESCALE = default(EntityRef<ESCALE>);
			this._CONNAISSEMENT = default(EntityRef<CONNAISSEMENT>);
			this._VEHICULE = default(EntityRef<VEHICULE>);
			this._CONTENEUR = default(EntityRef<CONTENEUR>);
			this._CONVENTIONNEL = default(EntityRef<CONVENTIONNEL>);
			this._FOURNISSEUR = default(EntityRef<FOURNISSEUR>);
			this._MAFI = default(EntityRef<MAFI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdOS", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdOS
		{
			get
			{
				return this._IdOS;
			}
			set
			{
				if ((this._IdOS != value))
				{
					this.OnIdOSChanging(value);
					this.SendPropertyChanging();
					this._IdOS = value;
					this.SendPropertyChanged("IdOS");
					this.OnIdOSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DCrOS", DbType="DateTime")]
		public System.Nullable<System.DateTime> DCrOS
		{
			get
			{
				return this._DCrOS;
			}
			set
			{
				if ((this._DCrOS != value))
				{
					this.OnDCrOSChanging(value);
					this.SendPropertyChanging();
					this._DCrOS = value;
					this.SendPropertyChanged("DCrOS");
					this.OnDCrOSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DPExOS", DbType="DateTime")]
		public System.Nullable<System.DateTime> DPExOS
		{
			get
			{
				return this._DPExOS;
			}
			set
			{
				if ((this._DPExOS != value))
				{
					this.OnDPExOSChanging(value);
					this.SendPropertyChanging();
					this._DPExOS = value;
					this.SendPropertyChanged("DPExOS");
					this.OnDPExOSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DRExOS", DbType="DateTime")]
		public System.Nullable<System.DateTime> DRExOS
		{
			get
			{
				return this._DRExOS;
			}
			set
			{
				if ((this._DRExOS != value))
				{
					this.OnDRExOSChanging(value);
					this.SendPropertyChanging();
					this._DRExOS = value;
					this.SendPropertyChanged("DRExOS");
					this.OnDRExOSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DClOS", DbType="DateTime")]
		public System.Nullable<System.DateTime> DClOS
		{
			get
			{
				return this._DClOS;
			}
			set
			{
				if ((this._DClOS != value))
				{
					this.OnDClOSChanging(value);
					this.SendPropertyChanging();
					this._DClOS = value;
					this.SendPropertyChanged("DClOS");
					this.OnDClOSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LibOS", DbType="NVarChar(255)")]
		public string LibOS
		{
			get
			{
				return this._LibOS;
			}
			set
			{
				if ((this._LibOS != value))
				{
					this.OnLibOSChanging(value);
					this.SendPropertyChanging();
					this._LibOS = value;
					this.SendPropertyChanged("LibOS");
					this.OnLibOSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObsOS", DbType="NVarChar(255)")]
		public string ObsOS
		{
			get
			{
				return this._ObsOS;
			}
			set
			{
				if ((this._ObsOS != value))
				{
					this.OnObsOSChanging(value);
					this.SendPropertyChanging();
					this._ObsOS = value;
					this.SendPropertyChanged("ObsOS");
					this.OnObsOSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEsc", DbType="Int")]
		public System.Nullable<int> IdEsc
		{
			get
			{
				return this._IdEsc;
			}
			set
			{
				if ((this._IdEsc != value))
				{
					if (this._ESCALE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdEscChanging(value);
					this.SendPropertyChanging();
					this._IdEsc = value;
					this.SendPropertyChanged("IdEsc");
					this.OnIdEscChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdBL", DbType="Int")]
		public System.Nullable<int> IdBL
		{
			get
			{
				return this._IdBL;
			}
			set
			{
				if ((this._IdBL != value))
				{
					if (this._CONNAISSEMENT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdBLChanging(value);
					this.SendPropertyChanging();
					this._IdBL = value;
					this.SendPropertyChanged("IdBL");
					this.OnIdBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdVeh", DbType="Int")]
		public System.Nullable<int> IdVeh
		{
			get
			{
				return this._IdVeh;
			}
			set
			{
				if ((this._IdVeh != value))
				{
					if (this._VEHICULE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdVehChanging(value);
					this.SendPropertyChanging();
					this._IdVeh = value;
					this.SendPropertyChanged("IdVeh");
					this.OnIdVehChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCtr", DbType="Int")]
		public System.Nullable<int> IdCtr
		{
			get
			{
				return this._IdCtr;
			}
			set
			{
				if ((this._IdCtr != value))
				{
					if (this._CONTENEUR.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdCtrChanging(value);
					this.SendPropertyChanging();
					this._IdCtr = value;
					this.SendPropertyChanged("IdCtr");
					this.OnIdCtrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdGC", DbType="Int")]
		public System.Nullable<int> IdGC
		{
			get
			{
				return this._IdGC;
			}
			set
			{
				if ((this._IdGC != value))
				{
					if (this._CONVENTIONNEL.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdGCChanging(value);
					this.SendPropertyChanging();
					this._IdGC = value;
					this.SendPropertyChanged("IdGC");
					this.OnIdGCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPO", DbType="Int")]
		public System.Nullable<int> IdPO
		{
			get
			{
				return this._IdPO;
			}
			set
			{
				if ((this._IdPO != value))
				{
					this.OnIdPOChanging(value);
					this.SendPropertyChanging();
					this._IdPO = value;
					this.SendPropertyChanged("IdPO");
					this.OnIdPOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPDN", DbType="Int")]
		public System.Nullable<int> IdPDN
		{
			get
			{
				return this._IdPDN;
			}
			set
			{
				if ((this._IdPDN != value))
				{
					this.OnIdPDNChanging(value);
					this.SendPropertyChanging();
					this._IdPDN = value;
					this.SendPropertyChanged("IdPDN");
					this.OnIdPDNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPINV", DbType="Int")]
		public System.Nullable<int> IdPINV
		{
			get
			{
				return this._IdPINV;
			}
			set
			{
				if ((this._IdPINV != value))
				{
					this.OnIdPINVChanging(value);
					this.SendPropertyChanging();
					this._IdPINV = value;
					this.SendPropertyChanged("IdPINV");
					this.OnIdPINVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DVOS", DbType="DateTime")]
		public System.Nullable<System.DateTime> DVOS
		{
			get
			{
				return this._DVOS;
			}
			set
			{
				if ((this._DVOS != value))
				{
					this.OnDVOSChanging(value);
					this.SendPropertyChanging();
					this._DVOS = value;
					this.SendPropertyChanged("DVOS");
					this.OnDVOSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFsseur", DbType="Int")]
		public System.Nullable<int> IdFsseur
		{
			get
			{
				return this._IdFsseur;
			}
			set
			{
				if ((this._IdFsseur != value))
				{
					if (this._FOURNISSEUR.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdFsseurChanging(value);
					this.SendPropertyChanging();
					this._IdFsseur = value;
					this.SendPropertyChanged("IdFsseur");
					this.OnIdFsseurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatutOS", DbType="NVarChar(20)")]
		public string StatutOS
		{
			get
			{
				return this._StatutOS;
			}
			set
			{
				if ((this._StatutOS != value))
				{
					this.OnStatutOSChanging(value);
					this.SendPropertyChanging();
					this._StatutOS = value;
					this.SendPropertyChanged("StatutOS");
					this.OnStatutOSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdMafi", DbType="Int")]
		public System.Nullable<int> IdMafi
		{
			get
			{
				return this._IdMafi;
			}
			set
			{
				if ((this._IdMafi != value))
				{
					if (this._MAFI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdMafiChanging(value);
					this.SendPropertyChanging();
					this._IdMafi = value;
					this.SendPropertyChanged("IdMafi");
					this.OnIdMafiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ORDRE_SERVICE_LIGNE_SERVICE", Storage="_LIGNE_SERVICE", ThisKey="IdOS", OtherKey="IdOS")]
		public EntitySet<LIGNE_SERVICE> LIGNE_SERVICE
		{
			get
			{
				return this._LIGNE_SERVICE;
			}
			set
			{
				this._LIGNE_SERVICE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ORDRE_SERVICE_ELEMENT_FACTURATION", Storage="_ELEMENT_FACTURATION", ThisKey="IdOS", OtherKey="IdOS")]
		public EntitySet<ELEMENT_FACTURATION> ELEMENT_FACTURATION
		{
			get
			{
				return this._ELEMENT_FACTURATION;
			}
			set
			{
				this._ELEMENT_FACTURATION.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ORDRE_SERVICE_NOTE", Storage="_NOTE", ThisKey="IdOS", OtherKey="IdOS")]
		public EntitySet<NOTE> NOTE
		{
			get
			{
				return this._NOTE;
			}
			set
			{
				this._NOTE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ESCALE_ORDRE_SERVICE", Storage="_ESCALE", ThisKey="IdEsc", OtherKey="IdEsc", IsForeignKey=true, DeleteRule="CASCADE")]
		public ESCALE ESCALE
		{
			get
			{
				return this._ESCALE.Entity;
			}
			set
			{
				ESCALE previousValue = this._ESCALE.Entity;
				if (((previousValue != value) 
							|| (this._ESCALE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ESCALE.Entity = null;
						previousValue.ORDRE_SERVICE.Remove(this);
					}
					this._ESCALE.Entity = value;
					if ((value != null))
					{
						value.ORDRE_SERVICE.Add(this);
						this._IdEsc = value.IdEsc;
					}
					else
					{
						this._IdEsc = default(Nullable<int>);
					}
					this.SendPropertyChanged("ESCALE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONNAISSEMENT_ORDRE_SERVICE", Storage="_CONNAISSEMENT", ThisKey="IdBL", OtherKey="IdBL", IsForeignKey=true, DeleteRule="CASCADE")]
		public CONNAISSEMENT CONNAISSEMENT
		{
			get
			{
				return this._CONNAISSEMENT.Entity;
			}
			set
			{
				CONNAISSEMENT previousValue = this._CONNAISSEMENT.Entity;
				if (((previousValue != value) 
							|| (this._CONNAISSEMENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CONNAISSEMENT.Entity = null;
						previousValue.ORDRE_SERVICE.Remove(this);
					}
					this._CONNAISSEMENT.Entity = value;
					if ((value != null))
					{
						value.ORDRE_SERVICE.Add(this);
						this._IdBL = value.IdBL;
					}
					else
					{
						this._IdBL = default(Nullable<int>);
					}
					this.SendPropertyChanged("CONNAISSEMENT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VEHICULE_ORDRE_SERVICE", Storage="_VEHICULE", ThisKey="IdVeh", OtherKey="IdVeh", IsForeignKey=true)]
		public VEHICULE VEHICULE
		{
			get
			{
				return this._VEHICULE.Entity;
			}
			set
			{
				VEHICULE previousValue = this._VEHICULE.Entity;
				if (((previousValue != value) 
							|| (this._VEHICULE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VEHICULE.Entity = null;
						previousValue.ORDRE_SERVICE.Remove(this);
					}
					this._VEHICULE.Entity = value;
					if ((value != null))
					{
						value.ORDRE_SERVICE.Add(this);
						this._IdVeh = value.IdVeh;
					}
					else
					{
						this._IdVeh = default(Nullable<int>);
					}
					this.SendPropertyChanged("VEHICULE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONTENEUR_ORDRE_SERVICE", Storage="_CONTENEUR", ThisKey="IdCtr", OtherKey="IdCtr", IsForeignKey=true)]
		public CONTENEUR CONTENEUR
		{
			get
			{
				return this._CONTENEUR.Entity;
			}
			set
			{
				CONTENEUR previousValue = this._CONTENEUR.Entity;
				if (((previousValue != value) 
							|| (this._CONTENEUR.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CONTENEUR.Entity = null;
						previousValue.ORDRE_SERVICE.Remove(this);
					}
					this._CONTENEUR.Entity = value;
					if ((value != null))
					{
						value.ORDRE_SERVICE.Add(this);
						this._IdCtr = value.IdCtr;
					}
					else
					{
						this._IdCtr = default(Nullable<int>);
					}
					this.SendPropertyChanged("CONTENEUR");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONVENTIONNEL_ORDRE_SERVICE", Storage="_CONVENTIONNEL", ThisKey="IdGC", OtherKey="IdGC", IsForeignKey=true)]
		public CONVENTIONNEL CONVENTIONNEL
		{
			get
			{
				return this._CONVENTIONNEL.Entity;
			}
			set
			{
				CONVENTIONNEL previousValue = this._CONVENTIONNEL.Entity;
				if (((previousValue != value) 
							|| (this._CONVENTIONNEL.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CONVENTIONNEL.Entity = null;
						previousValue.ORDRE_SERVICE.Remove(this);
					}
					this._CONVENTIONNEL.Entity = value;
					if ((value != null))
					{
						value.ORDRE_SERVICE.Add(this);
						this._IdGC = value.IdGC;
					}
					else
					{
						this._IdGC = default(Nullable<int>);
					}
					this.SendPropertyChanged("CONVENTIONNEL");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FOURNISSEUR_ORDRE_SERVICE", Storage="_FOURNISSEUR", ThisKey="IdFsseur", OtherKey="IdFsseur", IsForeignKey=true)]
		public FOURNISSEUR FOURNISSEUR
		{
			get
			{
				return this._FOURNISSEUR.Entity;
			}
			set
			{
				FOURNISSEUR previousValue = this._FOURNISSEUR.Entity;
				if (((previousValue != value) 
							|| (this._FOURNISSEUR.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FOURNISSEUR.Entity = null;
						previousValue.ORDRE_SERVICE.Remove(this);
					}
					this._FOURNISSEUR.Entity = value;
					if ((value != null))
					{
						value.ORDRE_SERVICE.Add(this);
						this._IdFsseur = value.IdFsseur;
					}
					else
					{
						this._IdFsseur = default(Nullable<int>);
					}
					this.SendPropertyChanged("FOURNISSEUR");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MAFI_ORDRE_SERVICE", Storage="_MAFI", ThisKey="IdMafi", OtherKey="IdMafi", IsForeignKey=true)]
		public MAFI MAFI
		{
			get
			{
				return this._MAFI.Entity;
			}
			set
			{
				MAFI previousValue = this._MAFI.Entity;
				if (((previousValue != value) 
							|| (this._MAFI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MAFI.Entity = null;
						previousValue.ORDRE_SERVICE.Remove(this);
					}
					this._MAFI.Entity = value;
					if ((value != null))
					{
						value.ORDRE_SERVICE.Add(this);
						this._IdMafi = value.IdMafi;
					}
					else
					{
						this._IdMafi = default(Nullable<int>);
					}
					this.SendPropertyChanged("MAFI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LIGNE_SERVICE(LIGNE_SERVICE entity)
		{
			this.SendPropertyChanging();
			entity.ORDRE_SERVICE = this;
		}
		
		private void detach_LIGNE_SERVICE(LIGNE_SERVICE entity)
		{
			this.SendPropertyChanging();
			entity.ORDRE_SERVICE = null;
		}
		
		private void attach_ELEMENT_FACTURATION(ELEMENT_FACTURATION entity)
		{
			this.SendPropertyChanging();
			entity.ORDRE_SERVICE = this;
		}
		
		private void detach_ELEMENT_FACTURATION(ELEMENT_FACTURATION entity)
		{
			this.SendPropertyChanging();
			entity.ORDRE_SERVICE = null;
		}
		
		private void attach_NOTE(NOTE entity)
		{
			this.SendPropertyChanging();
			entity.ORDRE_SERVICE = this;
		}
		
		private void detach_NOTE(NOTE entity)
		{
			this.SendPropertyChanging();
			entity.ORDRE_SERVICE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PARAMETRE")]
	public partial class PARAMETRE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _NomAF;
		
		private System.Nullable<short> _CodeAF;
		
		private string _Test;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNomAFChanging(string value);
    partial void OnNomAFChanged();
    partial void OnCodeAFChanging(System.Nullable<short> value);
    partial void OnCodeAFChanged();
    partial void OnTestChanging(string value);
    partial void OnTestChanged();
    #endregion
		
		public PARAMETRE()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NomAF", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string NomAF
		{
			get
			{
				return this._NomAF;
			}
			set
			{
				if ((this._NomAF != value))
				{
					this.OnNomAFChanging(value);
					this.SendPropertyChanging();
					this._NomAF = value;
					this.SendPropertyChanged("NomAF");
					this.OnNomAFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeAF", DbType="SmallInt")]
		public System.Nullable<short> CodeAF
		{
			get
			{
				return this._CodeAF;
			}
			set
			{
				if ((this._CodeAF != value))
				{
					this.OnCodeAFChanging(value);
					this.SendPropertyChanging();
					this._CodeAF = value;
					this.SendPropertyChanged("CodeAF");
					this.OnCodeAFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Test", DbType="NVarChar(50)")]
		public string Test
		{
			get
			{
				return this._Test;
			}
			set
			{
				if ((this._Test != value))
				{
					this.OnTestChanging(value);
					this.SendPropertyChanging();
					this._Test = value;
					this.SendPropertyChanged("Test");
					this.OnTestChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PAYEMENT")]
	public partial class PAYEMENT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdPay;
		
		private System.Nullable<System.DateTime> _DatePay;
		
		private System.Nullable<short> _ModePay;
		
		private string _CCPay;
		
		private System.Nullable<int> _MAPay;
		
		private System.Nullable<int> _MRPay;
		
		private string _AIPay;
		
		private System.Nullable<short> _ObjetPay;
		
		private System.Nullable<int> _IdBL;
		
		private System.Nullable<int> _IdU;
		
		private System.Nullable<int> _IdPayDRC;
		
		private System.Nullable<int> _IdClient;
		
		private int _IdPaySAP;
		
		private string _Caisse;
		
		private string _NumCheque;
		
		private string _RefVirement;
		
		private string _Banque;
		
		private string _Agence;
		
		private string _NumCompte;
		
		private System.Nullable<int> _IdBanque;
		
		private string _StatutPay;
		
		private string _RetIS;
		
		private EntitySet<FACTURE> _FACTURE;
		
		private EntitySet<CONTENEUR> _CONTENEUR;
		
		private EntitySet<NOTE> _NOTE;
		
		private EntitySet<LIGNE_PAYEMENT> _LIGNE_PAYEMENT;
		
		private EntityRef<UTILISATEUR> _UTILISATEUR;
		
		private EntityRef<CLIENT> _CLIENT;
		
		private EntityRef<CONNAISSEMENT> _CONNAISSEMENT;
		
		private EntityRef<BANQUE> _BANQUE1;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdPayChanging(int value);
    partial void OnIdPayChanged();
    partial void OnDatePayChanging(System.Nullable<System.DateTime> value);
    partial void OnDatePayChanged();
    partial void OnModePayChanging(System.Nullable<short> value);
    partial void OnModePayChanged();
    partial void OnCCPayChanging(string value);
    partial void OnCCPayChanged();
    partial void OnMAPayChanging(System.Nullable<int> value);
    partial void OnMAPayChanged();
    partial void OnMRPayChanging(System.Nullable<int> value);
    partial void OnMRPayChanged();
    partial void OnAIPayChanging(string value);
    partial void OnAIPayChanged();
    partial void OnObjetPayChanging(System.Nullable<short> value);
    partial void OnObjetPayChanged();
    partial void OnIdBLChanging(System.Nullable<int> value);
    partial void OnIdBLChanged();
    partial void OnIdUChanging(System.Nullable<int> value);
    partial void OnIdUChanged();
    partial void OnIdPayDRCChanging(System.Nullable<int> value);
    partial void OnIdPayDRCChanged();
    partial void OnIdClientChanging(System.Nullable<int> value);
    partial void OnIdClientChanged();
    partial void OnIdPaySAPChanging(int value);
    partial void OnIdPaySAPChanged();
    partial void OnCaisseChanging(string value);
    partial void OnCaisseChanged();
    partial void OnNumChequeChanging(string value);
    partial void OnNumChequeChanged();
    partial void OnRefVirementChanging(string value);
    partial void OnRefVirementChanged();
    partial void OnBanqueChanging(string value);
    partial void OnBanqueChanged();
    partial void OnAgenceChanging(string value);
    partial void OnAgenceChanged();
    partial void OnNumCompteChanging(string value);
    partial void OnNumCompteChanged();
    partial void OnIdBanqueChanging(System.Nullable<int> value);
    partial void OnIdBanqueChanged();
    partial void OnStatutPayChanging(string value);
    partial void OnStatutPayChanged();
    partial void OnRetISChanging(string value);
    partial void OnRetISChanged();
    #endregion
		
		public PAYEMENT()
		{
			this._FACTURE = new EntitySet<FACTURE>(new Action<FACTURE>(this.attach_FACTURE), new Action<FACTURE>(this.detach_FACTURE));
			this._CONTENEUR = new EntitySet<CONTENEUR>(new Action<CONTENEUR>(this.attach_CONTENEUR), new Action<CONTENEUR>(this.detach_CONTENEUR));
			this._NOTE = new EntitySet<NOTE>(new Action<NOTE>(this.attach_NOTE), new Action<NOTE>(this.detach_NOTE));
			this._LIGNE_PAYEMENT = new EntitySet<LIGNE_PAYEMENT>(new Action<LIGNE_PAYEMENT>(this.attach_LIGNE_PAYEMENT), new Action<LIGNE_PAYEMENT>(this.detach_LIGNE_PAYEMENT));
			this._UTILISATEUR = default(EntityRef<UTILISATEUR>);
			this._CLIENT = default(EntityRef<CLIENT>);
			this._CONNAISSEMENT = default(EntityRef<CONNAISSEMENT>);
			this._BANQUE1 = default(EntityRef<BANQUE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPay", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdPay
		{
			get
			{
				return this._IdPay;
			}
			set
			{
				if ((this._IdPay != value))
				{
					this.OnIdPayChanging(value);
					this.SendPropertyChanging();
					this._IdPay = value;
					this.SendPropertyChanged("IdPay");
					this.OnIdPayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatePay", DbType="DateTime")]
		public System.Nullable<System.DateTime> DatePay
		{
			get
			{
				return this._DatePay;
			}
			set
			{
				if ((this._DatePay != value))
				{
					this.OnDatePayChanging(value);
					this.SendPropertyChanging();
					this._DatePay = value;
					this.SendPropertyChanged("DatePay");
					this.OnDatePayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModePay", DbType="SmallInt")]
		public System.Nullable<short> ModePay
		{
			get
			{
				return this._ModePay;
			}
			set
			{
				if ((this._ModePay != value))
				{
					this.OnModePayChanging(value);
					this.SendPropertyChanging();
					this._ModePay = value;
					this.SendPropertyChanged("ModePay");
					this.OnModePayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCPay", DbType="NVarChar(20)")]
		public string CCPay
		{
			get
			{
				return this._CCPay;
			}
			set
			{
				if ((this._CCPay != value))
				{
					this.OnCCPayChanging(value);
					this.SendPropertyChanging();
					this._CCPay = value;
					this.SendPropertyChanged("CCPay");
					this.OnCCPayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPay", DbType="Int")]
		public System.Nullable<int> MAPay
		{
			get
			{
				return this._MAPay;
			}
			set
			{
				if ((this._MAPay != value))
				{
					this.OnMAPayChanging(value);
					this.SendPropertyChanging();
					this._MAPay = value;
					this.SendPropertyChanged("MAPay");
					this.OnMAPayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MRPay", DbType="Int")]
		public System.Nullable<int> MRPay
		{
			get
			{
				return this._MRPay;
			}
			set
			{
				if ((this._MRPay != value))
				{
					this.OnMRPayChanging(value);
					this.SendPropertyChanging();
					this._MRPay = value;
					this.SendPropertyChanged("MRPay");
					this.OnMRPayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AIPay", DbType="NVarChar(255)")]
		public string AIPay
		{
			get
			{
				return this._AIPay;
			}
			set
			{
				if ((this._AIPay != value))
				{
					this.OnAIPayChanging(value);
					this.SendPropertyChanging();
					this._AIPay = value;
					this.SendPropertyChanged("AIPay");
					this.OnAIPayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjetPay", DbType="SmallInt")]
		public System.Nullable<short> ObjetPay
		{
			get
			{
				return this._ObjetPay;
			}
			set
			{
				if ((this._ObjetPay != value))
				{
					this.OnObjetPayChanging(value);
					this.SendPropertyChanging();
					this._ObjetPay = value;
					this.SendPropertyChanged("ObjetPay");
					this.OnObjetPayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdBL", DbType="Int")]
		public System.Nullable<int> IdBL
		{
			get
			{
				return this._IdBL;
			}
			set
			{
				if ((this._IdBL != value))
				{
					if (this._CONNAISSEMENT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdBLChanging(value);
					this.SendPropertyChanging();
					this._IdBL = value;
					this.SendPropertyChanged("IdBL");
					this.OnIdBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdU", DbType="Int")]
		public System.Nullable<int> IdU
		{
			get
			{
				return this._IdU;
			}
			set
			{
				if ((this._IdU != value))
				{
					if (this._UTILISATEUR.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdUChanging(value);
					this.SendPropertyChanging();
					this._IdU = value;
					this.SendPropertyChanged("IdU");
					this.OnIdUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPayDRC", DbType="Int")]
		public System.Nullable<int> IdPayDRC
		{
			get
			{
				return this._IdPayDRC;
			}
			set
			{
				if ((this._IdPayDRC != value))
				{
					this.OnIdPayDRCChanging(value);
					this.SendPropertyChanging();
					this._IdPayDRC = value;
					this.SendPropertyChanged("IdPayDRC");
					this.OnIdPayDRCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdClient", DbType="Int")]
		public System.Nullable<int> IdClient
		{
			get
			{
				return this._IdClient;
			}
			set
			{
				if ((this._IdClient != value))
				{
					if (this._CLIENT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdClientChanging(value);
					this.SendPropertyChanging();
					this._IdClient = value;
					this.SendPropertyChanged("IdClient");
					this.OnIdClientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPaySAP", DbType="Int")]
		public int IdPaySAP
		{
			get
			{
				return this._IdPaySAP;
			}
			set
			{
				if ((this._IdPaySAP != value))
				{
					this.OnIdPaySAPChanging(value);
					this.SendPropertyChanging();
					this._IdPaySAP = value;
					this.SendPropertyChanged("IdPaySAP");
					this.OnIdPaySAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Caisse", DbType="NVarChar(10)")]
		public string Caisse
		{
			get
			{
				return this._Caisse;
			}
			set
			{
				if ((this._Caisse != value))
				{
					this.OnCaisseChanging(value);
					this.SendPropertyChanging();
					this._Caisse = value;
					this.SendPropertyChanged("Caisse");
					this.OnCaisseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumCheque", DbType="NVarChar(50)")]
		public string NumCheque
		{
			get
			{
				return this._NumCheque;
			}
			set
			{
				if ((this._NumCheque != value))
				{
					this.OnNumChequeChanging(value);
					this.SendPropertyChanging();
					this._NumCheque = value;
					this.SendPropertyChanged("NumCheque");
					this.OnNumChequeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefVirement", DbType="NVarChar(50)")]
		public string RefVirement
		{
			get
			{
				return this._RefVirement;
			}
			set
			{
				if ((this._RefVirement != value))
				{
					this.OnRefVirementChanging(value);
					this.SendPropertyChanging();
					this._RefVirement = value;
					this.SendPropertyChanged("RefVirement");
					this.OnRefVirementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Banque", DbType="NVarChar(50)")]
		public string Banque
		{
			get
			{
				return this._Banque;
			}
			set
			{
				if ((this._Banque != value))
				{
					this.OnBanqueChanging(value);
					this.SendPropertyChanging();
					this._Banque = value;
					this.SendPropertyChanged("Banque");
					this.OnBanqueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Agence", DbType="NVarChar(50)")]
		public string Agence
		{
			get
			{
				return this._Agence;
			}
			set
			{
				if ((this._Agence != value))
				{
					this.OnAgenceChanging(value);
					this.SendPropertyChanging();
					this._Agence = value;
					this.SendPropertyChanged("Agence");
					this.OnAgenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumCompte", DbType="NVarChar(50)")]
		public string NumCompte
		{
			get
			{
				return this._NumCompte;
			}
			set
			{
				if ((this._NumCompte != value))
				{
					this.OnNumCompteChanging(value);
					this.SendPropertyChanging();
					this._NumCompte = value;
					this.SendPropertyChanged("NumCompte");
					this.OnNumCompteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdBanque", DbType="Int")]
		public System.Nullable<int> IdBanque
		{
			get
			{
				return this._IdBanque;
			}
			set
			{
				if ((this._IdBanque != value))
				{
					if (this._BANQUE1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdBanqueChanging(value);
					this.SendPropertyChanging();
					this._IdBanque = value;
					this.SendPropertyChanged("IdBanque");
					this.OnIdBanqueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatutPay", DbType="NVarChar(1)")]
		public string StatutPay
		{
			get
			{
				return this._StatutPay;
			}
			set
			{
				if ((this._StatutPay != value))
				{
					this.OnStatutPayChanging(value);
					this.SendPropertyChanging();
					this._StatutPay = value;
					this.SendPropertyChanged("StatutPay");
					this.OnStatutPayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RetIS", DbType="NVarChar(1)")]
		public string RetIS
		{
			get
			{
				return this._RetIS;
			}
			set
			{
				if ((this._RetIS != value))
				{
					this.OnRetISChanging(value);
					this.SendPropertyChanging();
					this._RetIS = value;
					this.SendPropertyChanged("RetIS");
					this.OnRetISChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PAYEMENT_FACTURE", Storage="_FACTURE", ThisKey="IdPay", OtherKey="IdPay")]
		public EntitySet<FACTURE> FACTURE
		{
			get
			{
				return this._FACTURE;
			}
			set
			{
				this._FACTURE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PAYEMENT_CONTENEUR", Storage="_CONTENEUR", ThisKey="IdPay", OtherKey="IdPay")]
		public EntitySet<CONTENEUR> CONTENEUR
		{
			get
			{
				return this._CONTENEUR;
			}
			set
			{
				this._CONTENEUR.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PAYEMENT_NOTE", Storage="_NOTE", ThisKey="IdPay", OtherKey="IdPay")]
		public EntitySet<NOTE> NOTE
		{
			get
			{
				return this._NOTE;
			}
			set
			{
				this._NOTE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PAYEMENT_LIGNE_PAYEMENT", Storage="_LIGNE_PAYEMENT", ThisKey="IdPay", OtherKey="IdPay")]
		public EntitySet<LIGNE_PAYEMENT> LIGNE_PAYEMENT
		{
			get
			{
				return this._LIGNE_PAYEMENT;
			}
			set
			{
				this._LIGNE_PAYEMENT.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UTILISATEUR_PAYEMENT", Storage="_UTILISATEUR", ThisKey="IdU", OtherKey="IdU", IsForeignKey=true)]
		public UTILISATEUR UTILISATEUR
		{
			get
			{
				return this._UTILISATEUR.Entity;
			}
			set
			{
				UTILISATEUR previousValue = this._UTILISATEUR.Entity;
				if (((previousValue != value) 
							|| (this._UTILISATEUR.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UTILISATEUR.Entity = null;
						previousValue.PAYEMENT.Remove(this);
					}
					this._UTILISATEUR.Entity = value;
					if ((value != null))
					{
						value.PAYEMENT.Add(this);
						this._IdU = value.IdU;
					}
					else
					{
						this._IdU = default(Nullable<int>);
					}
					this.SendPropertyChanged("UTILISATEUR");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CLIENT_PAYEMENT", Storage="_CLIENT", ThisKey="IdClient", OtherKey="IdClient", IsForeignKey=true)]
		public CLIENT CLIENT
		{
			get
			{
				return this._CLIENT.Entity;
			}
			set
			{
				CLIENT previousValue = this._CLIENT.Entity;
				if (((previousValue != value) 
							|| (this._CLIENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CLIENT.Entity = null;
						previousValue.PAYEMENT.Remove(this);
					}
					this._CLIENT.Entity = value;
					if ((value != null))
					{
						value.PAYEMENT.Add(this);
						this._IdClient = value.IdClient;
					}
					else
					{
						this._IdClient = default(Nullable<int>);
					}
					this.SendPropertyChanged("CLIENT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONNAISSEMENT_PAYEMENT", Storage="_CONNAISSEMENT", ThisKey="IdBL", OtherKey="IdBL", IsForeignKey=true)]
		public CONNAISSEMENT CONNAISSEMENT
		{
			get
			{
				return this._CONNAISSEMENT.Entity;
			}
			set
			{
				CONNAISSEMENT previousValue = this._CONNAISSEMENT.Entity;
				if (((previousValue != value) 
							|| (this._CONNAISSEMENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CONNAISSEMENT.Entity = null;
						previousValue.PAYEMENT.Remove(this);
					}
					this._CONNAISSEMENT.Entity = value;
					if ((value != null))
					{
						value.PAYEMENT.Add(this);
						this._IdBL = value.IdBL;
					}
					else
					{
						this._IdBL = default(Nullable<int>);
					}
					this.SendPropertyChanged("CONNAISSEMENT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BANQUE_PAYEMENT", Storage="_BANQUE1", ThisKey="IdBanque", OtherKey="IdBanque", IsForeignKey=true)]
		public BANQUE BANQUE1
		{
			get
			{
				return this._BANQUE1.Entity;
			}
			set
			{
				BANQUE previousValue = this._BANQUE1.Entity;
				if (((previousValue != value) 
							|| (this._BANQUE1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BANQUE1.Entity = null;
						previousValue.PAYEMENT.Remove(this);
					}
					this._BANQUE1.Entity = value;
					if ((value != null))
					{
						value.PAYEMENT.Add(this);
						this._IdBanque = value.IdBanque;
					}
					else
					{
						this._IdBanque = default(Nullable<int>);
					}
					this.SendPropertyChanged("BANQUE1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FACTURE(FACTURE entity)
		{
			this.SendPropertyChanging();
			entity.PAYEMENT = this;
		}
		
		private void detach_FACTURE(FACTURE entity)
		{
			this.SendPropertyChanging();
			entity.PAYEMENT = null;
		}
		
		private void attach_CONTENEUR(CONTENEUR entity)
		{
			this.SendPropertyChanging();
			entity.PAYEMENT = this;
		}
		
		private void detach_CONTENEUR(CONTENEUR entity)
		{
			this.SendPropertyChanging();
			entity.PAYEMENT = null;
		}
		
		private void attach_NOTE(NOTE entity)
		{
			this.SendPropertyChanging();
			entity.PAYEMENT = this;
		}
		
		private void detach_NOTE(NOTE entity)
		{
			this.SendPropertyChanging();
			entity.PAYEMENT = null;
		}
		
		private void attach_LIGNE_PAYEMENT(LIGNE_PAYEMENT entity)
		{
			this.SendPropertyChanging();
			entity.PAYEMENT = this;
		}
		
		private void detach_LIGNE_PAYEMENT(LIGNE_PAYEMENT entity)
		{
			this.SendPropertyChanging();
			entity.PAYEMENT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PORT")]
	public partial class PORT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CodePort;
		
		private string _NomPort;
		
		private string _PaysPort;
		
		private string _NomPortEN;
		
		private string _CodeRadio;
		
		private EntitySet<MANIFESTE> _MANIFESTE;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodePortChanging(string value);
    partial void OnCodePortChanged();
    partial void OnNomPortChanging(string value);
    partial void OnNomPortChanged();
    partial void OnPaysPortChanging(string value);
    partial void OnPaysPortChanged();
    partial void OnNomPortENChanging(string value);
    partial void OnNomPortENChanged();
    partial void OnCodeRadioChanging(string value);
    partial void OnCodeRadioChanged();
    #endregion
		
		public PORT()
		{
			this._MANIFESTE = new EntitySet<MANIFESTE>(new Action<MANIFESTE>(this.attach_MANIFESTE), new Action<MANIFESTE>(this.detach_MANIFESTE));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodePort", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CodePort
		{
			get
			{
				return this._CodePort;
			}
			set
			{
				if ((this._CodePort != value))
				{
					this.OnCodePortChanging(value);
					this.SendPropertyChanging();
					this._CodePort = value;
					this.SendPropertyChanged("CodePort");
					this.OnCodePortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NomPort", DbType="NVarChar(50)")]
		public string NomPort
		{
			get
			{
				return this._NomPort;
			}
			set
			{
				if ((this._NomPort != value))
				{
					this.OnNomPortChanging(value);
					this.SendPropertyChanging();
					this._NomPort = value;
					this.SendPropertyChanged("NomPort");
					this.OnNomPortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaysPort", DbType="NVarChar(50)")]
		public string PaysPort
		{
			get
			{
				return this._PaysPort;
			}
			set
			{
				if ((this._PaysPort != value))
				{
					this.OnPaysPortChanging(value);
					this.SendPropertyChanging();
					this._PaysPort = value;
					this.SendPropertyChanged("PaysPort");
					this.OnPaysPortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NomPortEN", DbType="NVarChar(50)")]
		public string NomPortEN
		{
			get
			{
				return this._NomPortEN;
			}
			set
			{
				if ((this._NomPortEN != value))
				{
					this.OnNomPortENChanging(value);
					this.SendPropertyChanging();
					this._NomPortEN = value;
					this.SendPropertyChanged("NomPortEN");
					this.OnNomPortENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeRadio", DbType="NVarChar(5)")]
		public string CodeRadio
		{
			get
			{
				return this._CodeRadio;
			}
			set
			{
				if ((this._CodeRadio != value))
				{
					this.OnCodeRadioChanging(value);
					this.SendPropertyChanging();
					this._CodeRadio = value;
					this.SendPropertyChanged("CodeRadio");
					this.OnCodeRadioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PORT_MANIFESTE", Storage="_MANIFESTE", ThisKey="CodePort", OtherKey="CodePort")]
		public EntitySet<MANIFESTE> MANIFESTE
		{
			get
			{
				return this._MANIFESTE;
			}
			set
			{
				this._MANIFESTE.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MANIFESTE(MANIFESTE entity)
		{
			this.SendPropertyChanging();
			entity.PORT = this;
		}
		
		private void detach_MANIFESTE(MANIFESTE entity)
		{
			this.SendPropertyChanging();
			entity.PORT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TYPE_CONVENTIONNEL")]
	public partial class TYPE_CONVENTIONNEL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CodeTypeGC;
		
		private string _LibTypeGC;
		
		private string _SensGC;
		
		private EntitySet<CONVENTIONNEL> _CONVENTIONNEL;
		
		private EntitySet<CONVENTIONNEL> _CONVENTIONNEL1;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeTypeGCChanging(string value);
    partial void OnCodeTypeGCChanged();
    partial void OnLibTypeGCChanging(string value);
    partial void OnLibTypeGCChanged();
    partial void OnSensGCChanging(string value);
    partial void OnSensGCChanged();
    #endregion
		
		public TYPE_CONVENTIONNEL()
		{
			this._CONVENTIONNEL = new EntitySet<CONVENTIONNEL>(new Action<CONVENTIONNEL>(this.attach_CONVENTIONNEL), new Action<CONVENTIONNEL>(this.detach_CONVENTIONNEL));
			this._CONVENTIONNEL1 = new EntitySet<CONVENTIONNEL>(new Action<CONVENTIONNEL>(this.attach_CONVENTIONNEL1), new Action<CONVENTIONNEL>(this.detach_CONVENTIONNEL1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeTypeGC", DbType="NVarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CodeTypeGC
		{
			get
			{
				return this._CodeTypeGC;
			}
			set
			{
				if ((this._CodeTypeGC != value))
				{
					this.OnCodeTypeGCChanging(value);
					this.SendPropertyChanging();
					this._CodeTypeGC = value;
					this.SendPropertyChanged("CodeTypeGC");
					this.OnCodeTypeGCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LibTypeGC", DbType="NVarChar(255)")]
		public string LibTypeGC
		{
			get
			{
				return this._LibTypeGC;
			}
			set
			{
				if ((this._LibTypeGC != value))
				{
					this.OnLibTypeGCChanging(value);
					this.SendPropertyChanging();
					this._LibTypeGC = value;
					this.SendPropertyChanged("LibTypeGC");
					this.OnLibTypeGCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SensGC", DbType="NVarChar(1)")]
		public string SensGC
		{
			get
			{
				return this._SensGC;
			}
			set
			{
				if ((this._SensGC != value))
				{
					this.OnSensGCChanging(value);
					this.SendPropertyChanging();
					this._SensGC = value;
					this.SendPropertyChanged("SensGC");
					this.OnSensGCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TYPE_CONVENTIONNEL_CONVENTIONNEL", Storage="_CONVENTIONNEL", ThisKey="CodeTypeGC", OtherKey="TypeMGC")]
		public EntitySet<CONVENTIONNEL> CONVENTIONNEL
		{
			get
			{
				return this._CONVENTIONNEL;
			}
			set
			{
				this._CONVENTIONNEL.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TYPE_CONVENTIONNEL_CONVENTIONNEL1", Storage="_CONVENTIONNEL1", ThisKey="CodeTypeGC", OtherKey="TypeCGC")]
		public EntitySet<CONVENTIONNEL> CONVENTIONNEL1
		{
			get
			{
				return this._CONVENTIONNEL1;
			}
			set
			{
				this._CONVENTIONNEL1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CONVENTIONNEL(CONVENTIONNEL entity)
		{
			this.SendPropertyChanging();
			entity.TYPE_CONVENTIONNEL = this;
		}
		
		private void detach_CONVENTIONNEL(CONVENTIONNEL entity)
		{
			this.SendPropertyChanging();
			entity.TYPE_CONVENTIONNEL = null;
		}
		
		private void attach_CONVENTIONNEL1(CONVENTIONNEL entity)
		{
			this.SendPropertyChanging();
			entity.TYPE_CONVENTIONNEL1 = this;
		}
		
		private void detach_CONVENTIONNEL1(CONVENTIONNEL entity)
		{
			this.SendPropertyChanging();
			entity.TYPE_CONVENTIONNEL1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TYPE_OPERATION")]
	public partial class TYPE_OPERATION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdTypeOp;
		
		private string _LibTypeOp;
		
		private string _EltTypeOp;
		
		private string _Statut;
		
		private System.Nullable<int> _IdArm;
		
		private string _CodeMvt;
		
		private EntitySet<OCCUPATION> _OCCUPATION;
		
		private EntityRef<OPERATION_ARMATEUR> _OPERATION_ARMATEUR;
		
		private EntitySet<OPERATION_CONTENEUR> _OPERATION_CONTENEUR;
		
		private EntitySet<OPERATION_CONVENTIONNEL> _OPERATION_CONVENTIONNEL;
		
		private EntitySet<OPERATION_VEHICULE> _OPERATION_VEHICULE;
		
		private EntityRef<OPERATION_CONNAISSEMENT> _OPERATION_CONNAISSEMENT;
		
		private EntityRef<OPERATION_ESCALE> _OPERATION_ESCALE;
		
		private EntityRef<OPERATION_MANIFESTE> _OPERATION_MANIFESTE;
		
		private EntitySet<OPERATION_MAFI> _OPERATION_MAFI;
		
		private EntitySet<MOUVEMENT_TC> _MOUVEMENT_TC;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdTypeOpChanging(int value);
    partial void OnIdTypeOpChanged();
    partial void OnLibTypeOpChanging(string value);
    partial void OnLibTypeOpChanged();
    partial void OnEltTypeOpChanging(string value);
    partial void OnEltTypeOpChanged();
    partial void OnStatutChanging(string value);
    partial void OnStatutChanged();
    partial void OnIdArmChanging(System.Nullable<int> value);
    partial void OnIdArmChanged();
    partial void OnCodeMvtChanging(string value);
    partial void OnCodeMvtChanged();
    #endregion
		
		public TYPE_OPERATION()
		{
			this._OCCUPATION = new EntitySet<OCCUPATION>(new Action<OCCUPATION>(this.attach_OCCUPATION), new Action<OCCUPATION>(this.detach_OCCUPATION));
			this._OPERATION_ARMATEUR = default(EntityRef<OPERATION_ARMATEUR>);
			this._OPERATION_CONTENEUR = new EntitySet<OPERATION_CONTENEUR>(new Action<OPERATION_CONTENEUR>(this.attach_OPERATION_CONTENEUR), new Action<OPERATION_CONTENEUR>(this.detach_OPERATION_CONTENEUR));
			this._OPERATION_CONVENTIONNEL = new EntitySet<OPERATION_CONVENTIONNEL>(new Action<OPERATION_CONVENTIONNEL>(this.attach_OPERATION_CONVENTIONNEL), new Action<OPERATION_CONVENTIONNEL>(this.detach_OPERATION_CONVENTIONNEL));
			this._OPERATION_VEHICULE = new EntitySet<OPERATION_VEHICULE>(new Action<OPERATION_VEHICULE>(this.attach_OPERATION_VEHICULE), new Action<OPERATION_VEHICULE>(this.detach_OPERATION_VEHICULE));
			this._OPERATION_CONNAISSEMENT = default(EntityRef<OPERATION_CONNAISSEMENT>);
			this._OPERATION_ESCALE = default(EntityRef<OPERATION_ESCALE>);
			this._OPERATION_MANIFESTE = default(EntityRef<OPERATION_MANIFESTE>);
			this._OPERATION_MAFI = new EntitySet<OPERATION_MAFI>(new Action<OPERATION_MAFI>(this.attach_OPERATION_MAFI), new Action<OPERATION_MAFI>(this.detach_OPERATION_MAFI));
			this._MOUVEMENT_TC = new EntitySet<MOUVEMENT_TC>(new Action<MOUVEMENT_TC>(this.attach_MOUVEMENT_TC), new Action<MOUVEMENT_TC>(this.detach_MOUVEMENT_TC));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTypeOp", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdTypeOp
		{
			get
			{
				return this._IdTypeOp;
			}
			set
			{
				if ((this._IdTypeOp != value))
				{
					this.OnIdTypeOpChanging(value);
					this.SendPropertyChanging();
					this._IdTypeOp = value;
					this.SendPropertyChanged("IdTypeOp");
					this.OnIdTypeOpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LibTypeOp", DbType="NVarChar(150)")]
		public string LibTypeOp
		{
			get
			{
				return this._LibTypeOp;
			}
			set
			{
				if ((this._LibTypeOp != value))
				{
					this.OnLibTypeOpChanging(value);
					this.SendPropertyChanging();
					this._LibTypeOp = value;
					this.SendPropertyChanged("LibTypeOp");
					this.OnLibTypeOpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EltTypeOp", DbType="NVarChar(2)")]
		public string EltTypeOp
		{
			get
			{
				return this._EltTypeOp;
			}
			set
			{
				if ((this._EltTypeOp != value))
				{
					this.OnEltTypeOpChanging(value);
					this.SendPropertyChanging();
					this._EltTypeOp = value;
					this.SendPropertyChanged("EltTypeOp");
					this.OnEltTypeOpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Statut", DbType="NVarChar(50)")]
		public string Statut
		{
			get
			{
				return this._Statut;
			}
			set
			{
				if ((this._Statut != value))
				{
					this.OnStatutChanging(value);
					this.SendPropertyChanging();
					this._Statut = value;
					this.SendPropertyChanged("Statut");
					this.OnStatutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdArm", DbType="Int")]
		public System.Nullable<int> IdArm
		{
			get
			{
				return this._IdArm;
			}
			set
			{
				if ((this._IdArm != value))
				{
					this.OnIdArmChanging(value);
					this.SendPropertyChanging();
					this._IdArm = value;
					this.SendPropertyChanged("IdArm");
					this.OnIdArmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeMvt", DbType="NVarChar(10)")]
		public string CodeMvt
		{
			get
			{
				return this._CodeMvt;
			}
			set
			{
				if ((this._CodeMvt != value))
				{
					this.OnCodeMvtChanging(value);
					this.SendPropertyChanging();
					this._CodeMvt = value;
					this.SendPropertyChanged("CodeMvt");
					this.OnCodeMvtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TYPE_OPERATION_OCCUPATION", Storage="_OCCUPATION", ThisKey="IdTypeOp", OtherKey="IdTypeOp")]
		public EntitySet<OCCUPATION> OCCUPATION
		{
			get
			{
				return this._OCCUPATION;
			}
			set
			{
				this._OCCUPATION.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TYPE_OPERATION_OPERATION_ARMATEUR", Storage="_OPERATION_ARMATEUR", ThisKey="IdTypeOp", OtherKey="IdTypeOp", IsUnique=true, IsForeignKey=false)]
		public OPERATION_ARMATEUR OPERATION_ARMATEUR
		{
			get
			{
				return this._OPERATION_ARMATEUR.Entity;
			}
			set
			{
				OPERATION_ARMATEUR previousValue = this._OPERATION_ARMATEUR.Entity;
				if (((previousValue != value) 
							|| (this._OPERATION_ARMATEUR.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OPERATION_ARMATEUR.Entity = null;
						previousValue.TYPE_OPERATION = null;
					}
					this._OPERATION_ARMATEUR.Entity = value;
					if ((value != null))
					{
						value.TYPE_OPERATION = this;
					}
					this.SendPropertyChanged("OPERATION_ARMATEUR");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TYPE_OPERATION_OPERATION_CONTENEUR", Storage="_OPERATION_CONTENEUR", ThisKey="IdTypeOp", OtherKey="IdTypeOp")]
		public EntitySet<OPERATION_CONTENEUR> OPERATION_CONTENEUR
		{
			get
			{
				return this._OPERATION_CONTENEUR;
			}
			set
			{
				this._OPERATION_CONTENEUR.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TYPE_OPERATION_OPERATION_CONVENTIONNEL", Storage="_OPERATION_CONVENTIONNEL", ThisKey="IdTypeOp", OtherKey="IdTypeOp")]
		public EntitySet<OPERATION_CONVENTIONNEL> OPERATION_CONVENTIONNEL
		{
			get
			{
				return this._OPERATION_CONVENTIONNEL;
			}
			set
			{
				this._OPERATION_CONVENTIONNEL.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TYPE_OPERATION_OPERATION_VEHICULE", Storage="_OPERATION_VEHICULE", ThisKey="IdTypeOp", OtherKey="IdTypeOp")]
		public EntitySet<OPERATION_VEHICULE> OPERATION_VEHICULE
		{
			get
			{
				return this._OPERATION_VEHICULE;
			}
			set
			{
				this._OPERATION_VEHICULE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TYPE_OPERATION_OPERATION_CONNAISSEMENT", Storage="_OPERATION_CONNAISSEMENT", ThisKey="IdTypeOp", OtherKey="IdTypeOp", IsUnique=true, IsForeignKey=false)]
		public OPERATION_CONNAISSEMENT OPERATION_CONNAISSEMENT
		{
			get
			{
				return this._OPERATION_CONNAISSEMENT.Entity;
			}
			set
			{
				OPERATION_CONNAISSEMENT previousValue = this._OPERATION_CONNAISSEMENT.Entity;
				if (((previousValue != value) 
							|| (this._OPERATION_CONNAISSEMENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OPERATION_CONNAISSEMENT.Entity = null;
						previousValue.TYPE_OPERATION = null;
					}
					this._OPERATION_CONNAISSEMENT.Entity = value;
					if ((value != null))
					{
						value.TYPE_OPERATION = this;
					}
					this.SendPropertyChanged("OPERATION_CONNAISSEMENT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TYPE_OPERATION_OPERATION_ESCALE", Storage="_OPERATION_ESCALE", ThisKey="IdTypeOp", OtherKey="IdTypeOp", IsUnique=true, IsForeignKey=false)]
		public OPERATION_ESCALE OPERATION_ESCALE
		{
			get
			{
				return this._OPERATION_ESCALE.Entity;
			}
			set
			{
				OPERATION_ESCALE previousValue = this._OPERATION_ESCALE.Entity;
				if (((previousValue != value) 
							|| (this._OPERATION_ESCALE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OPERATION_ESCALE.Entity = null;
						previousValue.TYPE_OPERATION = null;
					}
					this._OPERATION_ESCALE.Entity = value;
					if ((value != null))
					{
						value.TYPE_OPERATION = this;
					}
					this.SendPropertyChanged("OPERATION_ESCALE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TYPE_OPERATION_OPERATION_MANIFESTE", Storage="_OPERATION_MANIFESTE", ThisKey="IdTypeOp", OtherKey="IdTypeOp", IsUnique=true, IsForeignKey=false)]
		public OPERATION_MANIFESTE OPERATION_MANIFESTE
		{
			get
			{
				return this._OPERATION_MANIFESTE.Entity;
			}
			set
			{
				OPERATION_MANIFESTE previousValue = this._OPERATION_MANIFESTE.Entity;
				if (((previousValue != value) 
							|| (this._OPERATION_MANIFESTE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OPERATION_MANIFESTE.Entity = null;
						previousValue.TYPE_OPERATION = null;
					}
					this._OPERATION_MANIFESTE.Entity = value;
					if ((value != null))
					{
						value.TYPE_OPERATION = this;
					}
					this.SendPropertyChanged("OPERATION_MANIFESTE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TYPE_OPERATION_OPERATION_MAFI", Storage="_OPERATION_MAFI", ThisKey="IdTypeOp", OtherKey="IdTypeOp")]
		public EntitySet<OPERATION_MAFI> OPERATION_MAFI
		{
			get
			{
				return this._OPERATION_MAFI;
			}
			set
			{
				this._OPERATION_MAFI.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TYPE_OPERATION_MOUVEMENT_TC", Storage="_MOUVEMENT_TC", ThisKey="IdTypeOp", OtherKey="IdTypeOp")]
		public EntitySet<MOUVEMENT_TC> MOUVEMENT_TC
		{
			get
			{
				return this._MOUVEMENT_TC;
			}
			set
			{
				this._MOUVEMENT_TC.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OCCUPATION(OCCUPATION entity)
		{
			this.SendPropertyChanging();
			entity.TYPE_OPERATION = this;
		}
		
		private void detach_OCCUPATION(OCCUPATION entity)
		{
			this.SendPropertyChanging();
			entity.TYPE_OPERATION = null;
		}
		
		private void attach_OPERATION_CONTENEUR(OPERATION_CONTENEUR entity)
		{
			this.SendPropertyChanging();
			entity.TYPE_OPERATION = this;
		}
		
		private void detach_OPERATION_CONTENEUR(OPERATION_CONTENEUR entity)
		{
			this.SendPropertyChanging();
			entity.TYPE_OPERATION = null;
		}
		
		private void attach_OPERATION_CONVENTIONNEL(OPERATION_CONVENTIONNEL entity)
		{
			this.SendPropertyChanging();
			entity.TYPE_OPERATION = this;
		}
		
		private void detach_OPERATION_CONVENTIONNEL(OPERATION_CONVENTIONNEL entity)
		{
			this.SendPropertyChanging();
			entity.TYPE_OPERATION = null;
		}
		
		private void attach_OPERATION_VEHICULE(OPERATION_VEHICULE entity)
		{
			this.SendPropertyChanging();
			entity.TYPE_OPERATION = this;
		}
		
		private void detach_OPERATION_VEHICULE(OPERATION_VEHICULE entity)
		{
			this.SendPropertyChanging();
			entity.TYPE_OPERATION = null;
		}
		
		private void attach_OPERATION_MAFI(OPERATION_MAFI entity)
		{
			this.SendPropertyChanging();
			entity.TYPE_OPERATION = this;
		}
		
		private void detach_OPERATION_MAFI(OPERATION_MAFI entity)
		{
			this.SendPropertyChanging();
			entity.TYPE_OPERATION = null;
		}
		
		private void attach_MOUVEMENT_TC(MOUVEMENT_TC entity)
		{
			this.SendPropertyChanging();
			entity.TYPE_OPERATION = this;
		}
		
		private void detach_MOUVEMENT_TC(MOUVEMENT_TC entity)
		{
			this.SendPropertyChanging();
			entity.TYPE_OPERATION = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TYPE_SINISTRE")]
	public partial class TYPE_SINISTRE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdTypeSinistre;
		
		private string _LibTypeSinistre;
		
		private string _TypeMse;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdTypeSinistreChanging(int value);
    partial void OnIdTypeSinistreChanged();
    partial void OnLibTypeSinistreChanging(string value);
    partial void OnLibTypeSinistreChanged();
    partial void OnTypeMseChanging(string value);
    partial void OnTypeMseChanged();
    #endregion
		
		public TYPE_SINISTRE()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTypeSinistre", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdTypeSinistre
		{
			get
			{
				return this._IdTypeSinistre;
			}
			set
			{
				if ((this._IdTypeSinistre != value))
				{
					this.OnIdTypeSinistreChanging(value);
					this.SendPropertyChanging();
					this._IdTypeSinistre = value;
					this.SendPropertyChanged("IdTypeSinistre");
					this.OnIdTypeSinistreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LibTypeSinistre", DbType="NVarChar(100)")]
		public string LibTypeSinistre
		{
			get
			{
				return this._LibTypeSinistre;
			}
			set
			{
				if ((this._LibTypeSinistre != value))
				{
					this.OnLibTypeSinistreChanging(value);
					this.SendPropertyChanging();
					this._LibTypeSinistre = value;
					this.SendPropertyChanged("LibTypeSinistre");
					this.OnLibTypeSinistreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeMse", DbType="NVarChar(1)")]
		public string TypeMse
		{
			get
			{
				return this._TypeMse;
			}
			set
			{
				if ((this._TypeMse != value))
				{
					this.OnTypeMseChanging(value);
					this.SendPropertyChanging();
					this._TypeMse = value;
					this.SendPropertyChanged("TypeMse");
					this.OnTypeMseChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TYPE_VEHICULE")]
	public partial class TYPE_VEHICULE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CodeTypeVeh;
		
		private string _LibTypeVeh;
		
		private System.Nullable<int> _DeVol;
		
		private System.Nullable<short> _LimVol;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeTypeVehChanging(string value);
    partial void OnCodeTypeVehChanged();
    partial void OnLibTypeVehChanging(string value);
    partial void OnLibTypeVehChanged();
    partial void OnDeVolChanging(System.Nullable<int> value);
    partial void OnDeVolChanged();
    partial void OnLimVolChanging(System.Nullable<short> value);
    partial void OnLimVolChanged();
    #endregion
		
		public TYPE_VEHICULE()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeTypeVeh", DbType="NVarChar(1) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CodeTypeVeh
		{
			get
			{
				return this._CodeTypeVeh;
			}
			set
			{
				if ((this._CodeTypeVeh != value))
				{
					this.OnCodeTypeVehChanging(value);
					this.SendPropertyChanging();
					this._CodeTypeVeh = value;
					this.SendPropertyChanged("CodeTypeVeh");
					this.OnCodeTypeVehChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LibTypeVeh", DbType="NVarChar(50)")]
		public string LibTypeVeh
		{
			get
			{
				return this._LibTypeVeh;
			}
			set
			{
				if ((this._LibTypeVeh != value))
				{
					this.OnLibTypeVehChanging(value);
					this.SendPropertyChanging();
					this._LibTypeVeh = value;
					this.SendPropertyChanged("LibTypeVeh");
					this.OnLibTypeVehChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeVol", DbType="Int")]
		public System.Nullable<int> DeVol
		{
			get
			{
				return this._DeVol;
			}
			set
			{
				if ((this._DeVol != value))
				{
					this.OnDeVolChanging(value);
					this.SendPropertyChanging();
					this._DeVol = value;
					this.SendPropertyChanged("DeVol");
					this.OnDeVolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LimVol", DbType="SmallInt")]
		public System.Nullable<short> LimVol
		{
			get
			{
				return this._LimVol;
			}
			set
			{
				if ((this._LimVol != value))
				{
					this.OnLimVolChanging(value);
					this.SendPropertyChanging();
					this._LimVol = value;
					this.SendPropertyChanged("LimVol");
					this.OnLimVolChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UTILISATEUR")]
	public partial class UTILISATEUR : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdU;
		
		private string _LU;
		
		private string _NU;
		
		private string _MPU;
		
		private string _EU;
		
		private System.Nullable<short> _OA;
		
		private string _AIU;
		
		private System.Nullable<int> _IdAcc;
		
		private string _Caisse;
		
		private System.Nullable<int> _IdParc;
		
		private EntitySet<BON_ENLEVEMENT> _BON_ENLEVEMENT;
		
		private EntitySet<DEMANDE_LIVRAISON> _DEMANDE_LIVRAISON;
		
		private EntitySet<DROIT> _DROIT;
		
		private EntitySet<JOURNAL> _JOURNAL;
		
		private EntitySet<PAYEMENT> _PAYEMENT;
		
		private EntitySet<DEMANDE_REDUCTION> _DEMANDE_REDUCTION;
		
		private EntitySet<EXTENSION_FRANCHISE> _EXTENSION_FRANCHISE;
		
		private EntitySet<OPERATION_CONNAISSEMENT> _OPERATION_CONNAISSEMENT;
		
		private EntitySet<DEMANDE_VISITE> _DEMANDE_VISITE;
		
		private EntitySet<HIST_CONNAISSEMENT> _HIST_CONNAISSEMENT;
		
		private EntitySet<OPERATION_ESCALE> _OPERATION_ESCALE;
		
		private EntitySet<OPERATION_MANIFESTE> _OPERATION_MANIFESTE;
		
		private EntitySet<NOTE> _NOTE;
		
		private EntitySet<MOUVEMENT_TC> _MOUVEMENT_TC;
		
		private EntityRef<ACCONIER> _ACCONIER;
		
		private EntityRef<PARC> _PARC;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdUChanging(int value);
    partial void OnIdUChanged();
    partial void OnLUChanging(string value);
    partial void OnLUChanged();
    partial void OnNUChanging(string value);
    partial void OnNUChanged();
    partial void OnMPUChanging(string value);
    partial void OnMPUChanged();
    partial void OnEUChanging(string value);
    partial void OnEUChanged();
    partial void OnOAChanging(System.Nullable<short> value);
    partial void OnOAChanged();
    partial void OnAIUChanging(string value);
    partial void OnAIUChanged();
    partial void OnIdAccChanging(System.Nullable<int> value);
    partial void OnIdAccChanged();
    partial void OnCaisseChanging(string value);
    partial void OnCaisseChanged();
    partial void OnIdParcChanging(System.Nullable<int> value);
    partial void OnIdParcChanged();
    #endregion
		
		public UTILISATEUR()
		{
			this._BON_ENLEVEMENT = new EntitySet<BON_ENLEVEMENT>(new Action<BON_ENLEVEMENT>(this.attach_BON_ENLEVEMENT), new Action<BON_ENLEVEMENT>(this.detach_BON_ENLEVEMENT));
			this._DEMANDE_LIVRAISON = new EntitySet<DEMANDE_LIVRAISON>(new Action<DEMANDE_LIVRAISON>(this.attach_DEMANDE_LIVRAISON), new Action<DEMANDE_LIVRAISON>(this.detach_DEMANDE_LIVRAISON));
			this._DROIT = new EntitySet<DROIT>(new Action<DROIT>(this.attach_DROIT), new Action<DROIT>(this.detach_DROIT));
			this._JOURNAL = new EntitySet<JOURNAL>(new Action<JOURNAL>(this.attach_JOURNAL), new Action<JOURNAL>(this.detach_JOURNAL));
			this._PAYEMENT = new EntitySet<PAYEMENT>(new Action<PAYEMENT>(this.attach_PAYEMENT), new Action<PAYEMENT>(this.detach_PAYEMENT));
			this._DEMANDE_REDUCTION = new EntitySet<DEMANDE_REDUCTION>(new Action<DEMANDE_REDUCTION>(this.attach_DEMANDE_REDUCTION), new Action<DEMANDE_REDUCTION>(this.detach_DEMANDE_REDUCTION));
			this._EXTENSION_FRANCHISE = new EntitySet<EXTENSION_FRANCHISE>(new Action<EXTENSION_FRANCHISE>(this.attach_EXTENSION_FRANCHISE), new Action<EXTENSION_FRANCHISE>(this.detach_EXTENSION_FRANCHISE));
			this._OPERATION_CONNAISSEMENT = new EntitySet<OPERATION_CONNAISSEMENT>(new Action<OPERATION_CONNAISSEMENT>(this.attach_OPERATION_CONNAISSEMENT), new Action<OPERATION_CONNAISSEMENT>(this.detach_OPERATION_CONNAISSEMENT));
			this._DEMANDE_VISITE = new EntitySet<DEMANDE_VISITE>(new Action<DEMANDE_VISITE>(this.attach_DEMANDE_VISITE), new Action<DEMANDE_VISITE>(this.detach_DEMANDE_VISITE));
			this._HIST_CONNAISSEMENT = new EntitySet<HIST_CONNAISSEMENT>(new Action<HIST_CONNAISSEMENT>(this.attach_HIST_CONNAISSEMENT), new Action<HIST_CONNAISSEMENT>(this.detach_HIST_CONNAISSEMENT));
			this._OPERATION_ESCALE = new EntitySet<OPERATION_ESCALE>(new Action<OPERATION_ESCALE>(this.attach_OPERATION_ESCALE), new Action<OPERATION_ESCALE>(this.detach_OPERATION_ESCALE));
			this._OPERATION_MANIFESTE = new EntitySet<OPERATION_MANIFESTE>(new Action<OPERATION_MANIFESTE>(this.attach_OPERATION_MANIFESTE), new Action<OPERATION_MANIFESTE>(this.detach_OPERATION_MANIFESTE));
			this._NOTE = new EntitySet<NOTE>(new Action<NOTE>(this.attach_NOTE), new Action<NOTE>(this.detach_NOTE));
			this._MOUVEMENT_TC = new EntitySet<MOUVEMENT_TC>(new Action<MOUVEMENT_TC>(this.attach_MOUVEMENT_TC), new Action<MOUVEMENT_TC>(this.detach_MOUVEMENT_TC));
			this._ACCONIER = default(EntityRef<ACCONIER>);
			this._PARC = default(EntityRef<PARC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdU", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdU
		{
			get
			{
				return this._IdU;
			}
			set
			{
				if ((this._IdU != value))
				{
					this.OnIdUChanging(value);
					this.SendPropertyChanging();
					this._IdU = value;
					this.SendPropertyChanged("IdU");
					this.OnIdUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LU", DbType="NVarChar(20)")]
		public string LU
		{
			get
			{
				return this._LU;
			}
			set
			{
				if ((this._LU != value))
				{
					this.OnLUChanging(value);
					this.SendPropertyChanging();
					this._LU = value;
					this.SendPropertyChanged("LU");
					this.OnLUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NU", DbType="NVarChar(50)")]
		public string NU
		{
			get
			{
				return this._NU;
			}
			set
			{
				if ((this._NU != value))
				{
					this.OnNUChanging(value);
					this.SendPropertyChanging();
					this._NU = value;
					this.SendPropertyChanged("NU");
					this.OnNUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MPU", DbType="NVarChar(20)")]
		public string MPU
		{
			get
			{
				return this._MPU;
			}
			set
			{
				if ((this._MPU != value))
				{
					this.OnMPUChanging(value);
					this.SendPropertyChanging();
					this._MPU = value;
					this.SendPropertyChanged("MPU");
					this.OnMPUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EU", DbType="NVarChar(1)")]
		public string EU
		{
			get
			{
				return this._EU;
			}
			set
			{
				if ((this._EU != value))
				{
					this.OnEUChanging(value);
					this.SendPropertyChanging();
					this._EU = value;
					this.SendPropertyChanged("EU");
					this.OnEUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OA", DbType="SmallInt")]
		public System.Nullable<short> OA
		{
			get
			{
				return this._OA;
			}
			set
			{
				if ((this._OA != value))
				{
					this.OnOAChanging(value);
					this.SendPropertyChanging();
					this._OA = value;
					this.SendPropertyChanged("OA");
					this.OnOAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AIU", DbType="NVarChar(255)")]
		public string AIU
		{
			get
			{
				return this._AIU;
			}
			set
			{
				if ((this._AIU != value))
				{
					this.OnAIUChanging(value);
					this.SendPropertyChanging();
					this._AIU = value;
					this.SendPropertyChanged("AIU");
					this.OnAIUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdAcc", DbType="Int")]
		public System.Nullable<int> IdAcc
		{
			get
			{
				return this._IdAcc;
			}
			set
			{
				if ((this._IdAcc != value))
				{
					if (this._ACCONIER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdAccChanging(value);
					this.SendPropertyChanging();
					this._IdAcc = value;
					this.SendPropertyChanged("IdAcc");
					this.OnIdAccChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Caisse", DbType="NVarChar(10)")]
		public string Caisse
		{
			get
			{
				return this._Caisse;
			}
			set
			{
				if ((this._Caisse != value))
				{
					this.OnCaisseChanging(value);
					this.SendPropertyChanging();
					this._Caisse = value;
					this.SendPropertyChanged("Caisse");
					this.OnCaisseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdParc", DbType="Int")]
		public System.Nullable<int> IdParc
		{
			get
			{
				return this._IdParc;
			}
			set
			{
				if ((this._IdParc != value))
				{
					if (this._PARC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdParcChanging(value);
					this.SendPropertyChanging();
					this._IdParc = value;
					this.SendPropertyChanged("IdParc");
					this.OnIdParcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UTILISATEUR_BON_ENLEVEMENT", Storage="_BON_ENLEVEMENT", ThisKey="IdU", OtherKey="IdU")]
		public EntitySet<BON_ENLEVEMENT> BON_ENLEVEMENT
		{
			get
			{
				return this._BON_ENLEVEMENT;
			}
			set
			{
				this._BON_ENLEVEMENT.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UTILISATEUR_DEMANDE_LIVRAISON", Storage="_DEMANDE_LIVRAISON", ThisKey="IdU", OtherKey="IdU")]
		public EntitySet<DEMANDE_LIVRAISON> DEMANDE_LIVRAISON
		{
			get
			{
				return this._DEMANDE_LIVRAISON;
			}
			set
			{
				this._DEMANDE_LIVRAISON.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UTILISATEUR_DROIT", Storage="_DROIT", ThisKey="IdU", OtherKey="IdU")]
		public EntitySet<DROIT> DROIT
		{
			get
			{
				return this._DROIT;
			}
			set
			{
				this._DROIT.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UTILISATEUR_JOURNAL", Storage="_JOURNAL", ThisKey="IdU", OtherKey="IdU")]
		public EntitySet<JOURNAL> JOURNAL
		{
			get
			{
				return this._JOURNAL;
			}
			set
			{
				this._JOURNAL.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UTILISATEUR_PAYEMENT", Storage="_PAYEMENT", ThisKey="IdU", OtherKey="IdU")]
		public EntitySet<PAYEMENT> PAYEMENT
		{
			get
			{
				return this._PAYEMENT;
			}
			set
			{
				this._PAYEMENT.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UTILISATEUR_DEMANDE_REDUCTION", Storage="_DEMANDE_REDUCTION", ThisKey="IdU", OtherKey="IdU")]
		public EntitySet<DEMANDE_REDUCTION> DEMANDE_REDUCTION
		{
			get
			{
				return this._DEMANDE_REDUCTION;
			}
			set
			{
				this._DEMANDE_REDUCTION.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UTILISATEUR_EXTENSION_FRANCHISE", Storage="_EXTENSION_FRANCHISE", ThisKey="IdU", OtherKey="IdU")]
		public EntitySet<EXTENSION_FRANCHISE> EXTENSION_FRANCHISE
		{
			get
			{
				return this._EXTENSION_FRANCHISE;
			}
			set
			{
				this._EXTENSION_FRANCHISE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UTILISATEUR_OPERATION_CONNAISSEMENT", Storage="_OPERATION_CONNAISSEMENT", ThisKey="IdU", OtherKey="IdU")]
		public EntitySet<OPERATION_CONNAISSEMENT> OPERATION_CONNAISSEMENT
		{
			get
			{
				return this._OPERATION_CONNAISSEMENT;
			}
			set
			{
				this._OPERATION_CONNAISSEMENT.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UTILISATEUR_DEMANDE_VISITE", Storage="_DEMANDE_VISITE", ThisKey="IdU", OtherKey="IdU")]
		public EntitySet<DEMANDE_VISITE> DEMANDE_VISITE
		{
			get
			{
				return this._DEMANDE_VISITE;
			}
			set
			{
				this._DEMANDE_VISITE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UTILISATEUR_HIST_CONNAISSEMENT", Storage="_HIST_CONNAISSEMENT", ThisKey="IdU", OtherKey="IdU")]
		public EntitySet<HIST_CONNAISSEMENT> HIST_CONNAISSEMENT
		{
			get
			{
				return this._HIST_CONNAISSEMENT;
			}
			set
			{
				this._HIST_CONNAISSEMENT.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UTILISATEUR_OPERATION_ESCALE", Storage="_OPERATION_ESCALE", ThisKey="IdU", OtherKey="IdU")]
		public EntitySet<OPERATION_ESCALE> OPERATION_ESCALE
		{
			get
			{
				return this._OPERATION_ESCALE;
			}
			set
			{
				this._OPERATION_ESCALE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UTILISATEUR_OPERATION_MANIFESTE", Storage="_OPERATION_MANIFESTE", ThisKey="IdU", OtherKey="IdU")]
		public EntitySet<OPERATION_MANIFESTE> OPERATION_MANIFESTE
		{
			get
			{
				return this._OPERATION_MANIFESTE;
			}
			set
			{
				this._OPERATION_MANIFESTE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UTILISATEUR_NOTE", Storage="_NOTE", ThisKey="IdU", OtherKey="IdU")]
		public EntitySet<NOTE> NOTE
		{
			get
			{
				return this._NOTE;
			}
			set
			{
				this._NOTE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UTILISATEUR_MOUVEMENT_TC", Storage="_MOUVEMENT_TC", ThisKey="IdU", OtherKey="IdUser")]
		public EntitySet<MOUVEMENT_TC> MOUVEMENT_TC
		{
			get
			{
				return this._MOUVEMENT_TC;
			}
			set
			{
				this._MOUVEMENT_TC.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ACCONIER_UTILISATEUR", Storage="_ACCONIER", ThisKey="IdAcc", OtherKey="IdAcc", IsForeignKey=true)]
		public ACCONIER ACCONIER
		{
			get
			{
				return this._ACCONIER.Entity;
			}
			set
			{
				ACCONIER previousValue = this._ACCONIER.Entity;
				if (((previousValue != value) 
							|| (this._ACCONIER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ACCONIER.Entity = null;
						previousValue.UTILISATEUR.Remove(this);
					}
					this._ACCONIER.Entity = value;
					if ((value != null))
					{
						value.UTILISATEUR.Add(this);
						this._IdAcc = value.IdAcc;
					}
					else
					{
						this._IdAcc = default(Nullable<int>);
					}
					this.SendPropertyChanged("ACCONIER");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PARC_UTILISATEUR", Storage="_PARC", ThisKey="IdParc", OtherKey="IdParc", IsForeignKey=true)]
		public PARC PARC
		{
			get
			{
				return this._PARC.Entity;
			}
			set
			{
				PARC previousValue = this._PARC.Entity;
				if (((previousValue != value) 
							|| (this._PARC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PARC.Entity = null;
						previousValue.UTILISATEUR.Remove(this);
					}
					this._PARC.Entity = value;
					if ((value != null))
					{
						value.UTILISATEUR.Add(this);
						this._IdParc = value.IdParc;
					}
					else
					{
						this._IdParc = default(Nullable<int>);
					}
					this.SendPropertyChanged("PARC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BON_ENLEVEMENT(BON_ENLEVEMENT entity)
		{
			this.SendPropertyChanging();
			entity.UTILISATEUR = this;
		}
		
		private void detach_BON_ENLEVEMENT(BON_ENLEVEMENT entity)
		{
			this.SendPropertyChanging();
			entity.UTILISATEUR = null;
		}
		
		private void attach_DEMANDE_LIVRAISON(DEMANDE_LIVRAISON entity)
		{
			this.SendPropertyChanging();
			entity.UTILISATEUR = this;
		}
		
		private void detach_DEMANDE_LIVRAISON(DEMANDE_LIVRAISON entity)
		{
			this.SendPropertyChanging();
			entity.UTILISATEUR = null;
		}
		
		private void attach_DROIT(DROIT entity)
		{
			this.SendPropertyChanging();
			entity.UTILISATEUR = this;
		}
		
		private void detach_DROIT(DROIT entity)
		{
			this.SendPropertyChanging();
			entity.UTILISATEUR = null;
		}
		
		private void attach_JOURNAL(JOURNAL entity)
		{
			this.SendPropertyChanging();
			entity.UTILISATEUR = this;
		}
		
		private void detach_JOURNAL(JOURNAL entity)
		{
			this.SendPropertyChanging();
			entity.UTILISATEUR = null;
		}
		
		private void attach_PAYEMENT(PAYEMENT entity)
		{
			this.SendPropertyChanging();
			entity.UTILISATEUR = this;
		}
		
		private void detach_PAYEMENT(PAYEMENT entity)
		{
			this.SendPropertyChanging();
			entity.UTILISATEUR = null;
		}
		
		private void attach_DEMANDE_REDUCTION(DEMANDE_REDUCTION entity)
		{
			this.SendPropertyChanging();
			entity.UTILISATEUR = this;
		}
		
		private void detach_DEMANDE_REDUCTION(DEMANDE_REDUCTION entity)
		{
			this.SendPropertyChanging();
			entity.UTILISATEUR = null;
		}
		
		private void attach_EXTENSION_FRANCHISE(EXTENSION_FRANCHISE entity)
		{
			this.SendPropertyChanging();
			entity.UTILISATEUR = this;
		}
		
		private void detach_EXTENSION_FRANCHISE(EXTENSION_FRANCHISE entity)
		{
			this.SendPropertyChanging();
			entity.UTILISATEUR = null;
		}
		
		private void attach_OPERATION_CONNAISSEMENT(OPERATION_CONNAISSEMENT entity)
		{
			this.SendPropertyChanging();
			entity.UTILISATEUR = this;
		}
		
		private void detach_OPERATION_CONNAISSEMENT(OPERATION_CONNAISSEMENT entity)
		{
			this.SendPropertyChanging();
			entity.UTILISATEUR = null;
		}
		
		private void attach_DEMANDE_VISITE(DEMANDE_VISITE entity)
		{
			this.SendPropertyChanging();
			entity.UTILISATEUR = this;
		}
		
		private void detach_DEMANDE_VISITE(DEMANDE_VISITE entity)
		{
			this.SendPropertyChanging();
			entity.UTILISATEUR = null;
		}
		
		private void attach_HIST_CONNAISSEMENT(HIST_CONNAISSEMENT entity)
		{
			this.SendPropertyChanging();
			entity.UTILISATEUR = this;
		}
		
		private void detach_HIST_CONNAISSEMENT(HIST_CONNAISSEMENT entity)
		{
			this.SendPropertyChanging();
			entity.UTILISATEUR = null;
		}
		
		private void attach_OPERATION_ESCALE(OPERATION_ESCALE entity)
		{
			this.SendPropertyChanging();
			entity.UTILISATEUR = this;
		}
		
		private void detach_OPERATION_ESCALE(OPERATION_ESCALE entity)
		{
			this.SendPropertyChanging();
			entity.UTILISATEUR = null;
		}
		
		private void attach_OPERATION_MANIFESTE(OPERATION_MANIFESTE entity)
		{
			this.SendPropertyChanging();
			entity.UTILISATEUR = this;
		}
		
		private void detach_OPERATION_MANIFESTE(OPERATION_MANIFESTE entity)
		{
			this.SendPropertyChanging();
			entity.UTILISATEUR = null;
		}
		
		private void attach_NOTE(NOTE entity)
		{
			this.SendPropertyChanging();
			entity.UTILISATEUR = this;
		}
		
		private void detach_NOTE(NOTE entity)
		{
			this.SendPropertyChanging();
			entity.UTILISATEUR = null;
		}
		
		private void attach_MOUVEMENT_TC(MOUVEMENT_TC entity)
		{
			this.SendPropertyChanging();
			entity.UTILISATEUR = this;
		}
		
		private void detach_MOUVEMENT_TC(MOUVEMENT_TC entity)
		{
			this.SendPropertyChanging();
			entity.UTILISATEUR = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ESCALE")]
	public partial class ESCALE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdEsc;
		
		private System.Nullable<int> _NumEsc;
		
		private string _NumVoy;
		
		private System.Nullable<System.DateTime> _DCEsc;
		
		private System.Nullable<System.DateTime> _DPAEsc;
		
		private System.Nullable<System.DateTime> _DRAEsc;
		
		private System.Nullable<short> _NbrePManEsc;
		
		private string _RGPEsc;
		
		private string _RREsc;
		
		private string _RAEsc;
		
		private string _RCEsc;
		
		private string _AIEsc;
		
		private string _SOP;
		
		private System.Nullable<int> _IdNav;
		
		private System.Nullable<int> _IdArm;
		
		private System.Nullable<int> _IdAcc;
		
		private string _StatEsc;
		
		private System.Nullable<int> _IdFArm;
		
		private System.Nullable<System.DateTime> _DateFArm;
		
		private System.Nullable<System.DateTime> _DDEsc;
		
		private string _NomCpt;
		
		private System.Nullable<System.DateTime> _DDechEsc;
		
		private System.Nullable<System.DateTime> _SailingDate;
		
		private string _NumManifestSydonia;
		
		private string _NumVoyDIT;
		
		private string _FIntern;
		
		private System.Nullable<int> _IdUserFIntern;
		
		private EntitySet<CUBAGE> _CUBAGE;
		
		private EntitySet<ORDRE_SERVICE> _ORDRE_SERVICE;
		
		private EntitySet<MANIFESTE> _MANIFESTE;
		
		private EntitySet<HIST_CONNAISSEMENT> _HIST_CONNAISSEMENT;
		
		private EntityRef<OPERATION_ESCALE> _OPERATION_ESCALE;
		
		private EntitySet<ELEMENT_FACTURATION> _ELEMENT_FACTURATION;
		
		private EntitySet<CONNAISSEMENT> _CONNAISSEMENT;
		
		private EntitySet<VEHICULE> _VEHICULE;
		
		private EntitySet<CONTENEUR> _CONTENEUR;
		
		private EntitySet<CONVENTIONNEL> _CONVENTIONNEL;
		
		private EntitySet<MAFI> _MAFI;
		
		private EntitySet<NOTE> _NOTE;
		
		private EntitySet<FACTURE_ARMATEUR> _FACTURE_ARMATEUR;
		
		private EntitySet<MOUVEMENT_TC> _MOUVEMENT_TC;
		
		private EntitySet<FACTURE_SOCOMAR> _FACTURE_SOCOMAR;
		
		private EntityRef<ACCONIER> _ACCONIER;
		
		private EntityRef<ARMATEUR> _ARMATEUR;
		
		private EntityRef<NAVIRE> _NAVIRE;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdEscChanging(int value);
    partial void OnIdEscChanged();
    partial void OnNumEscChanging(System.Nullable<int> value);
    partial void OnNumEscChanged();
    partial void OnNumVoySCRChanging(string value);
    partial void OnNumVoySCRChanged();
    partial void OnDCEscChanging(System.Nullable<System.DateTime> value);
    partial void OnDCEscChanged();
    partial void OnDPAEscChanging(System.Nullable<System.DateTime> value);
    partial void OnDPAEscChanged();
    partial void OnDRAEscChanging(System.Nullable<System.DateTime> value);
    partial void OnDRAEscChanged();
    partial void OnNbrePManEscChanging(System.Nullable<short> value);
    partial void OnNbrePManEscChanged();
    partial void OnRGPEscChanging(string value);
    partial void OnRGPEscChanged();
    partial void OnRREscChanging(string value);
    partial void OnRREscChanged();
    partial void OnRAEscChanging(string value);
    partial void OnRAEscChanged();
    partial void OnRCEscChanging(string value);
    partial void OnRCEscChanged();
    partial void OnAIEscChanging(string value);
    partial void OnAIEscChanged();
    partial void OnSOPChanging(string value);
    partial void OnSOPChanged();
    partial void OnIdNavChanging(System.Nullable<int> value);
    partial void OnIdNavChanged();
    partial void OnIdArmChanging(System.Nullable<int> value);
    partial void OnIdArmChanged();
    partial void OnIdAccChanging(System.Nullable<int> value);
    partial void OnIdAccChanged();
    partial void OnStatEscChanging(string value);
    partial void OnStatEscChanged();
    partial void OnIdFArmChanging(System.Nullable<int> value);
    partial void OnIdFArmChanged();
    partial void OnDateFArmChanging(System.Nullable<System.DateTime> value);
    partial void OnDateFArmChanged();
    partial void OnDDEscChanging(System.Nullable<System.DateTime> value);
    partial void OnDDEscChanged();
    partial void OnNomCptChanging(string value);
    partial void OnNomCptChanged();
    partial void OnDDechEscChanging(System.Nullable<System.DateTime> value);
    partial void OnDDechEscChanged();
    partial void OnSailingDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSailingDateChanged();
    partial void OnNumManifestSydoniaChanging(string value);
    partial void OnNumManifestSydoniaChanged();
    partial void OnNumVoyDITChanging(string value);
    partial void OnNumVoyDITChanged();
    partial void OnFInternChanging(string value);
    partial void OnFInternChanged();
    partial void OnIdUserFInternChanging(System.Nullable<int> value);
    partial void OnIdUserFInternChanged();
    #endregion
		
		public ESCALE()
		{
			this._CUBAGE = new EntitySet<CUBAGE>(new Action<CUBAGE>(this.attach_CUBAGE), new Action<CUBAGE>(this.detach_CUBAGE));
			this._ORDRE_SERVICE = new EntitySet<ORDRE_SERVICE>(new Action<ORDRE_SERVICE>(this.attach_ORDRE_SERVICE), new Action<ORDRE_SERVICE>(this.detach_ORDRE_SERVICE));
			this._MANIFESTE = new EntitySet<MANIFESTE>(new Action<MANIFESTE>(this.attach_MANIFESTE), new Action<MANIFESTE>(this.detach_MANIFESTE));
			this._HIST_CONNAISSEMENT = new EntitySet<HIST_CONNAISSEMENT>(new Action<HIST_CONNAISSEMENT>(this.attach_HIST_CONNAISSEMENT), new Action<HIST_CONNAISSEMENT>(this.detach_HIST_CONNAISSEMENT));
			this._OPERATION_ESCALE = default(EntityRef<OPERATION_ESCALE>);
			this._ELEMENT_FACTURATION = new EntitySet<ELEMENT_FACTURATION>(new Action<ELEMENT_FACTURATION>(this.attach_ELEMENT_FACTURATION), new Action<ELEMENT_FACTURATION>(this.detach_ELEMENT_FACTURATION));
			this._CONNAISSEMENT = new EntitySet<CONNAISSEMENT>(new Action<CONNAISSEMENT>(this.attach_CONNAISSEMENT), new Action<CONNAISSEMENT>(this.detach_CONNAISSEMENT));
			this._VEHICULE = new EntitySet<VEHICULE>(new Action<VEHICULE>(this.attach_VEHICULE), new Action<VEHICULE>(this.detach_VEHICULE));
			this._CONTENEUR = new EntitySet<CONTENEUR>(new Action<CONTENEUR>(this.attach_CONTENEUR), new Action<CONTENEUR>(this.detach_CONTENEUR));
			this._CONVENTIONNEL = new EntitySet<CONVENTIONNEL>(new Action<CONVENTIONNEL>(this.attach_CONVENTIONNEL), new Action<CONVENTIONNEL>(this.detach_CONVENTIONNEL));
			this._MAFI = new EntitySet<MAFI>(new Action<MAFI>(this.attach_MAFI), new Action<MAFI>(this.detach_MAFI));
			this._NOTE = new EntitySet<NOTE>(new Action<NOTE>(this.attach_NOTE), new Action<NOTE>(this.detach_NOTE));
			this._FACTURE_ARMATEUR = new EntitySet<FACTURE_ARMATEUR>(new Action<FACTURE_ARMATEUR>(this.attach_FACTURE_ARMATEUR), new Action<FACTURE_ARMATEUR>(this.detach_FACTURE_ARMATEUR));
			this._MOUVEMENT_TC = new EntitySet<MOUVEMENT_TC>(new Action<MOUVEMENT_TC>(this.attach_MOUVEMENT_TC), new Action<MOUVEMENT_TC>(this.detach_MOUVEMENT_TC));
			this._FACTURE_SOCOMAR = new EntitySet<FACTURE_SOCOMAR>(new Action<FACTURE_SOCOMAR>(this.attach_FACTURE_SOCOMAR), new Action<FACTURE_SOCOMAR>(this.detach_FACTURE_SOCOMAR));
			this._ACCONIER = default(EntityRef<ACCONIER>);
			this._ARMATEUR = default(EntityRef<ARMATEUR>);
			this._NAVIRE = default(EntityRef<NAVIRE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEsc", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdEsc
		{
			get
			{
				return this._IdEsc;
			}
			set
			{
				if ((this._IdEsc != value))
				{
					this.OnIdEscChanging(value);
					this.SendPropertyChanging();
					this._IdEsc = value;
					this.SendPropertyChanged("IdEsc");
					this.OnIdEscChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumEsc", DbType="Int")]
		public System.Nullable<int> NumEsc
		{
			get
			{
				return this._NumEsc;
			}
			set
			{
				if ((this._NumEsc != value))
				{
					this.OnNumEscChanging(value);
					this.SendPropertyChanging();
					this._NumEsc = value;
					this.SendPropertyChanged("NumEsc");
					this.OnNumEscChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumVoy", DbType="NVarChar(20)")]
		public string NumVoySCR
		{
			get
			{
				return this._NumVoy;
			}
			set
			{
				if ((this._NumVoy != value))
				{
					this.OnNumVoySCRChanging(value);
					this.SendPropertyChanging();
					this._NumVoy = value;
					this.SendPropertyChanged("NumVoySCR");
					this.OnNumVoySCRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DCEsc", DbType="DateTime")]
		public System.Nullable<System.DateTime> DCEsc
		{
			get
			{
				return this._DCEsc;
			}
			set
			{
				if ((this._DCEsc != value))
				{
					this.OnDCEscChanging(value);
					this.SendPropertyChanging();
					this._DCEsc = value;
					this.SendPropertyChanged("DCEsc");
					this.OnDCEscChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DPAEsc", DbType="DateTime")]
		public System.Nullable<System.DateTime> DPAEsc
		{
			get
			{
				return this._DPAEsc;
			}
			set
			{
				if ((this._DPAEsc != value))
				{
					this.OnDPAEscChanging(value);
					this.SendPropertyChanging();
					this._DPAEsc = value;
					this.SendPropertyChanged("DPAEsc");
					this.OnDPAEscChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DRAEsc", DbType="DateTime")]
		public System.Nullable<System.DateTime> DRAEsc
		{
			get
			{
				return this._DRAEsc;
			}
			set
			{
				if ((this._DRAEsc != value))
				{
					this.OnDRAEscChanging(value);
					this.SendPropertyChanging();
					this._DRAEsc = value;
					this.SendPropertyChanged("DRAEsc");
					this.OnDRAEscChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NbrePManEsc", DbType="SmallInt")]
		public System.Nullable<short> NbrePManEsc
		{
			get
			{
				return this._NbrePManEsc;
			}
			set
			{
				if ((this._NbrePManEsc != value))
				{
					this.OnNbrePManEscChanging(value);
					this.SendPropertyChanging();
					this._NbrePManEsc = value;
					this.SendPropertyChanged("NbrePManEsc");
					this.OnNbrePManEscChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RGPEsc", DbType="NVarChar(1)")]
		public string RGPEsc
		{
			get
			{
				return this._RGPEsc;
			}
			set
			{
				if ((this._RGPEsc != value))
				{
					this.OnRGPEscChanging(value);
					this.SendPropertyChanging();
					this._RGPEsc = value;
					this.SendPropertyChanged("RGPEsc");
					this.OnRGPEscChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RREsc", DbType="NVarChar(1)")]
		public string RREsc
		{
			get
			{
				return this._RREsc;
			}
			set
			{
				if ((this._RREsc != value))
				{
					this.OnRREscChanging(value);
					this.SendPropertyChanging();
					this._RREsc = value;
					this.SendPropertyChanged("RREsc");
					this.OnRREscChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RAEsc", DbType="NVarChar(1)")]
		public string RAEsc
		{
			get
			{
				return this._RAEsc;
			}
			set
			{
				if ((this._RAEsc != value))
				{
					this.OnRAEscChanging(value);
					this.SendPropertyChanging();
					this._RAEsc = value;
					this.SendPropertyChanged("RAEsc");
					this.OnRAEscChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RCEsc", DbType="NVarChar(1)")]
		public string RCEsc
		{
			get
			{
				return this._RCEsc;
			}
			set
			{
				if ((this._RCEsc != value))
				{
					this.OnRCEscChanging(value);
					this.SendPropertyChanging();
					this._RCEsc = value;
					this.SendPropertyChanged("RCEsc");
					this.OnRCEscChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AIEsc", DbType="NVarChar(255)")]
		public string AIEsc
		{
			get
			{
				return this._AIEsc;
			}
			set
			{
				if ((this._AIEsc != value))
				{
					this.OnAIEscChanging(value);
					this.SendPropertyChanging();
					this._AIEsc = value;
					this.SendPropertyChanged("AIEsc");
					this.OnAIEscChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOP", DbType="NVarChar(1)")]
		public string SOP
		{
			get
			{
				return this._SOP;
			}
			set
			{
				if ((this._SOP != value))
				{
					this.OnSOPChanging(value);
					this.SendPropertyChanging();
					this._SOP = value;
					this.SendPropertyChanged("SOP");
					this.OnSOPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdNav", DbType="Int")]
		public System.Nullable<int> IdNav
		{
			get
			{
				return this._IdNav;
			}
			set
			{
				if ((this._IdNav != value))
				{
					if (this._NAVIRE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdNavChanging(value);
					this.SendPropertyChanging();
					this._IdNav = value;
					this.SendPropertyChanged("IdNav");
					this.OnIdNavChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdArm", DbType="Int")]
		public System.Nullable<int> IdArm
		{
			get
			{
				return this._IdArm;
			}
			set
			{
				if ((this._IdArm != value))
				{
					if (this._ARMATEUR.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdArmChanging(value);
					this.SendPropertyChanging();
					this._IdArm = value;
					this.SendPropertyChanged("IdArm");
					this.OnIdArmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdAcc", DbType="Int")]
		public System.Nullable<int> IdAcc
		{
			get
			{
				return this._IdAcc;
			}
			set
			{
				if ((this._IdAcc != value))
				{
					if (this._ACCONIER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdAccChanging(value);
					this.SendPropertyChanging();
					this._IdAcc = value;
					this.SendPropertyChanged("IdAcc");
					this.OnIdAccChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatEsc", DbType="NVarChar(25)")]
		public string StatEsc
		{
			get
			{
				return this._StatEsc;
			}
			set
			{
				if ((this._StatEsc != value))
				{
					this.OnStatEscChanging(value);
					this.SendPropertyChanging();
					this._StatEsc = value;
					this.SendPropertyChanged("StatEsc");
					this.OnStatEscChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFArm", DbType="Int")]
		public System.Nullable<int> IdFArm
		{
			get
			{
				return this._IdFArm;
			}
			set
			{
				if ((this._IdFArm != value))
				{
					this.OnIdFArmChanging(value);
					this.SendPropertyChanging();
					this._IdFArm = value;
					this.SendPropertyChanged("IdFArm");
					this.OnIdFArmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateFArm", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateFArm
		{
			get
			{
				return this._DateFArm;
			}
			set
			{
				if ((this._DateFArm != value))
				{
					this.OnDateFArmChanging(value);
					this.SendPropertyChanging();
					this._DateFArm = value;
					this.SendPropertyChanged("DateFArm");
					this.OnDateFArmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DDEsc", DbType="DateTime")]
		public System.Nullable<System.DateTime> DDEsc
		{
			get
			{
				return this._DDEsc;
			}
			set
			{
				if ((this._DDEsc != value))
				{
					this.OnDDEscChanging(value);
					this.SendPropertyChanging();
					this._DDEsc = value;
					this.SendPropertyChanged("DDEsc");
					this.OnDDEscChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NomCpt", DbType="NVarChar(70)")]
		public string NomCpt
		{
			get
			{
				return this._NomCpt;
			}
			set
			{
				if ((this._NomCpt != value))
				{
					this.OnNomCptChanging(value);
					this.SendPropertyChanging();
					this._NomCpt = value;
					this.SendPropertyChanged("NomCpt");
					this.OnNomCptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DDechEsc", DbType="DateTime")]
		public System.Nullable<System.DateTime> DDechEsc
		{
			get
			{
				return this._DDechEsc;
			}
			set
			{
				if ((this._DDechEsc != value))
				{
					this.OnDDechEscChanging(value);
					this.SendPropertyChanging();
					this._DDechEsc = value;
					this.SendPropertyChanged("DDechEsc");
					this.OnDDechEscChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SailingDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SailingDate
		{
			get
			{
				return this._SailingDate;
			}
			set
			{
				if ((this._SailingDate != value))
				{
					this.OnSailingDateChanging(value);
					this.SendPropertyChanging();
					this._SailingDate = value;
					this.SendPropertyChanged("SailingDate");
					this.OnSailingDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumManifestSydonia", DbType="NVarChar(50)")]
		public string NumManifestSydonia
		{
			get
			{
				return this._NumManifestSydonia;
			}
			set
			{
				if ((this._NumManifestSydonia != value))
				{
					this.OnNumManifestSydoniaChanging(value);
					this.SendPropertyChanging();
					this._NumManifestSydonia = value;
					this.SendPropertyChanged("NumManifestSydonia");
					this.OnNumManifestSydoniaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumVoyDIT", DbType="NVarChar(20)")]
		public string NumVoyDIT
		{
			get
			{
				return this._NumVoyDIT;
			}
			set
			{
				if ((this._NumVoyDIT != value))
				{
					this.OnNumVoyDITChanging(value);
					this.SendPropertyChanging();
					this._NumVoyDIT = value;
					this.SendPropertyChanged("NumVoyDIT");
					this.OnNumVoyDITChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FIntern", DbType="Char(1)")]
		public string FIntern
		{
			get
			{
				return this._FIntern;
			}
			set
			{
				if ((this._FIntern != value))
				{
					this.OnFInternChanging(value);
					this.SendPropertyChanging();
					this._FIntern = value;
					this.SendPropertyChanged("FIntern");
					this.OnFInternChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUserFIntern", DbType="Int")]
		public System.Nullable<int> IdUserFIntern
		{
			get
			{
				return this._IdUserFIntern;
			}
			set
			{
				if ((this._IdUserFIntern != value))
				{
					this.OnIdUserFInternChanging(value);
					this.SendPropertyChanging();
					this._IdUserFIntern = value;
					this.SendPropertyChanged("IdUserFIntern");
					this.OnIdUserFInternChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ESCALE_CUBAGE", Storage="_CUBAGE", ThisKey="IdEsc", OtherKey="IdEsc")]
		public EntitySet<CUBAGE> CUBAGE
		{
			get
			{
				return this._CUBAGE;
			}
			set
			{
				this._CUBAGE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ESCALE_ORDRE_SERVICE", Storage="_ORDRE_SERVICE", ThisKey="IdEsc", OtherKey="IdEsc")]
		public EntitySet<ORDRE_SERVICE> ORDRE_SERVICE
		{
			get
			{
				return this._ORDRE_SERVICE;
			}
			set
			{
				this._ORDRE_SERVICE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ESCALE_MANIFESTE", Storage="_MANIFESTE", ThisKey="IdEsc", OtherKey="IdEsc")]
		public EntitySet<MANIFESTE> MANIFESTE
		{
			get
			{
				return this._MANIFESTE;
			}
			set
			{
				this._MANIFESTE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ESCALE_HIST_CONNAISSEMENT", Storage="_HIST_CONNAISSEMENT", ThisKey="IdEsc", OtherKey="IdEsc")]
		public EntitySet<HIST_CONNAISSEMENT> HIST_CONNAISSEMENT
		{
			get
			{
				return this._HIST_CONNAISSEMENT;
			}
			set
			{
				this._HIST_CONNAISSEMENT.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ESCALE_OPERATION_ESCALE", Storage="_OPERATION_ESCALE", ThisKey="IdEsc", OtherKey="IdEsc", IsUnique=true, IsForeignKey=false)]
		public OPERATION_ESCALE OPERATION_ESCALE
		{
			get
			{
				return this._OPERATION_ESCALE.Entity;
			}
			set
			{
				OPERATION_ESCALE previousValue = this._OPERATION_ESCALE.Entity;
				if (((previousValue != value) 
							|| (this._OPERATION_ESCALE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OPERATION_ESCALE.Entity = null;
						previousValue.ESCALE = null;
					}
					this._OPERATION_ESCALE.Entity = value;
					if ((value != null))
					{
						value.ESCALE = this;
					}
					this.SendPropertyChanged("OPERATION_ESCALE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ESCALE_ELEMENT_FACTURATION", Storage="_ELEMENT_FACTURATION", ThisKey="IdEsc", OtherKey="IdEsc")]
		public EntitySet<ELEMENT_FACTURATION> ELEMENT_FACTURATION
		{
			get
			{
				return this._ELEMENT_FACTURATION;
			}
			set
			{
				this._ELEMENT_FACTURATION.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ESCALE_CONNAISSEMENT", Storage="_CONNAISSEMENT", ThisKey="IdEsc", OtherKey="IdEsc")]
		public EntitySet<CONNAISSEMENT> CONNAISSEMENT
		{
			get
			{
				return this._CONNAISSEMENT;
			}
			set
			{
				this._CONNAISSEMENT.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ESCALE_VEHICULE", Storage="_VEHICULE", ThisKey="IdEsc", OtherKey="IdEsc")]
		public EntitySet<VEHICULE> VEHICULE
		{
			get
			{
				return this._VEHICULE;
			}
			set
			{
				this._VEHICULE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ESCALE_CONTENEUR", Storage="_CONTENEUR", ThisKey="IdEsc", OtherKey="IdEsc")]
		public EntitySet<CONTENEUR> CONTENEUR
		{
			get
			{
				return this._CONTENEUR;
			}
			set
			{
				this._CONTENEUR.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ESCALE_CONVENTIONNEL", Storage="_CONVENTIONNEL", ThisKey="IdEsc", OtherKey="IdEsc")]
		public EntitySet<CONVENTIONNEL> CONVENTIONNEL
		{
			get
			{
				return this._CONVENTIONNEL;
			}
			set
			{
				this._CONVENTIONNEL.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ESCALE_MAFI", Storage="_MAFI", ThisKey="IdEsc", OtherKey="IdEsc")]
		public EntitySet<MAFI> MAFI
		{
			get
			{
				return this._MAFI;
			}
			set
			{
				this._MAFI.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ESCALE_NOTE", Storage="_NOTE", ThisKey="IdEsc", OtherKey="IdEsc")]
		public EntitySet<NOTE> NOTE
		{
			get
			{
				return this._NOTE;
			}
			set
			{
				this._NOTE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ESCALE_FACTURE_ARMATEUR", Storage="_FACTURE_ARMATEUR", ThisKey="IdEsc", OtherKey="IdEsc")]
		public EntitySet<FACTURE_ARMATEUR> FACTURE_ARMATEUR
		{
			get
			{
				return this._FACTURE_ARMATEUR;
			}
			set
			{
				this._FACTURE_ARMATEUR.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ESCALE_MOUVEMENT_TC", Storage="_MOUVEMENT_TC", ThisKey="IdEsc", OtherKey="IdEsc")]
		public EntitySet<MOUVEMENT_TC> MOUVEMENT_TC
		{
			get
			{
				return this._MOUVEMENT_TC;
			}
			set
			{
				this._MOUVEMENT_TC.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ESCALE_FACTURE_SOCOMAR", Storage="_FACTURE_SOCOMAR", ThisKey="IdEsc", OtherKey="IdEsc")]
		public EntitySet<FACTURE_SOCOMAR> FACTURE_SOCOMAR
		{
			get
			{
				return this._FACTURE_SOCOMAR;
			}
			set
			{
				this._FACTURE_SOCOMAR.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ACCONIER_ESCALE", Storage="_ACCONIER", ThisKey="IdAcc", OtherKey="IdAcc", IsForeignKey=true, DeleteRule="CASCADE")]
		public ACCONIER ACCONIER
		{
			get
			{
				return this._ACCONIER.Entity;
			}
			set
			{
				ACCONIER previousValue = this._ACCONIER.Entity;
				if (((previousValue != value) 
							|| (this._ACCONIER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ACCONIER.Entity = null;
						previousValue.ESCALE.Remove(this);
					}
					this._ACCONIER.Entity = value;
					if ((value != null))
					{
						value.ESCALE.Add(this);
						this._IdAcc = value.IdAcc;
					}
					else
					{
						this._IdAcc = default(Nullable<int>);
					}
					this.SendPropertyChanged("ACCONIER");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ARMATEUR_ESCALE", Storage="_ARMATEUR", ThisKey="IdArm", OtherKey="IdArm", IsForeignKey=true, DeleteRule="CASCADE")]
		public ARMATEUR ARMATEUR
		{
			get
			{
				return this._ARMATEUR.Entity;
			}
			set
			{
				ARMATEUR previousValue = this._ARMATEUR.Entity;
				if (((previousValue != value) 
							|| (this._ARMATEUR.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ARMATEUR.Entity = null;
						previousValue.ESCALE.Remove(this);
					}
					this._ARMATEUR.Entity = value;
					if ((value != null))
					{
						value.ESCALE.Add(this);
						this._IdArm = value.IdArm;
					}
					else
					{
						this._IdArm = default(Nullable<int>);
					}
					this.SendPropertyChanged("ARMATEUR");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NAVIRE_ESCALE", Storage="_NAVIRE", ThisKey="IdNav", OtherKey="IdNav", IsForeignKey=true, DeleteRule="CASCADE")]
		public NAVIRE NAVIRE
		{
			get
			{
				return this._NAVIRE.Entity;
			}
			set
			{
				NAVIRE previousValue = this._NAVIRE.Entity;
				if (((previousValue != value) 
							|| (this._NAVIRE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NAVIRE.Entity = null;
						previousValue.ESCALE.Remove(this);
					}
					this._NAVIRE.Entity = value;
					if ((value != null))
					{
						value.ESCALE.Add(this);
						this._IdNav = value.IdNav;
					}
					else
					{
						this._IdNav = default(Nullable<int>);
					}
					this.SendPropertyChanged("NAVIRE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CUBAGE(CUBAGE entity)
		{
			this.SendPropertyChanging();
			entity.ESCALE = this;
		}
		
		private void detach_CUBAGE(CUBAGE entity)
		{
			this.SendPropertyChanging();
			entity.ESCALE = null;
		}
		
		private void attach_ORDRE_SERVICE(ORDRE_SERVICE entity)
		{
			this.SendPropertyChanging();
			entity.ESCALE = this;
		}
		
		private void detach_ORDRE_SERVICE(ORDRE_SERVICE entity)
		{
			this.SendPropertyChanging();
			entity.ESCALE = null;
		}
		
		private void attach_MANIFESTE(MANIFESTE entity)
		{
			this.SendPropertyChanging();
			entity.ESCALE = this;
		}
		
		private void detach_MANIFESTE(MANIFESTE entity)
		{
			this.SendPropertyChanging();
			entity.ESCALE = null;
		}
		
		private void attach_HIST_CONNAISSEMENT(HIST_CONNAISSEMENT entity)
		{
			this.SendPropertyChanging();
			entity.ESCALE = this;
		}
		
		private void detach_HIST_CONNAISSEMENT(HIST_CONNAISSEMENT entity)
		{
			this.SendPropertyChanging();
			entity.ESCALE = null;
		}
		
		private void attach_ELEMENT_FACTURATION(ELEMENT_FACTURATION entity)
		{
			this.SendPropertyChanging();
			entity.ESCALE = this;
		}
		
		private void detach_ELEMENT_FACTURATION(ELEMENT_FACTURATION entity)
		{
			this.SendPropertyChanging();
			entity.ESCALE = null;
		}
		
		private void attach_CONNAISSEMENT(CONNAISSEMENT entity)
		{
			this.SendPropertyChanging();
			entity.ESCALE = this;
		}
		
		private void detach_CONNAISSEMENT(CONNAISSEMENT entity)
		{
			this.SendPropertyChanging();
			entity.ESCALE = null;
		}
		
		private void attach_VEHICULE(VEHICULE entity)
		{
			this.SendPropertyChanging();
			entity.ESCALE = this;
		}
		
		private void detach_VEHICULE(VEHICULE entity)
		{
			this.SendPropertyChanging();
			entity.ESCALE = null;
		}
		
		private void attach_CONTENEUR(CONTENEUR entity)
		{
			this.SendPropertyChanging();
			entity.ESCALE = this;
		}
		
		private void detach_CONTENEUR(CONTENEUR entity)
		{
			this.SendPropertyChanging();
			entity.ESCALE = null;
		}
		
		private void attach_CONVENTIONNEL(CONVENTIONNEL entity)
		{
			this.SendPropertyChanging();
			entity.ESCALE = this;
		}
		
		private void detach_CONVENTIONNEL(CONVENTIONNEL entity)
		{
			this.SendPropertyChanging();
			entity.ESCALE = null;
		}
		
		private void attach_MAFI(MAFI entity)
		{
			this.SendPropertyChanging();
			entity.ESCALE = this;
		}
		
		private void detach_MAFI(MAFI entity)
		{
			this.SendPropertyChanging();
			entity.ESCALE = null;
		}
		
		private void attach_NOTE(NOTE entity)
		{
			this.SendPropertyChanging();
			entity.ESCALE = this;
		}
		
		private void detach_NOTE(NOTE entity)
		{
			this.SendPropertyChanging();
			entity.ESCALE = null;
		}
		
		private void attach_FACTURE_ARMATEUR(FACTURE_ARMATEUR entity)
		{
			this.SendPropertyChanging();
			entity.ESCALE = this;
		}
		
		private void detach_FACTURE_ARMATEUR(FACTURE_ARMATEUR entity)
		{
			this.SendPropertyChanging();
			entity.ESCALE = null;
		}
		
		private void attach_MOUVEMENT_TC(MOUVEMENT_TC entity)
		{
			this.SendPropertyChanging();
			entity.ESCALE = this;
		}
		
		private void detach_MOUVEMENT_TC(MOUVEMENT_TC entity)
		{
			this.SendPropertyChanging();
			entity.ESCALE = null;
		}
		
		private void attach_FACTURE_SOCOMAR(FACTURE_SOCOMAR entity)
		{
			this.SendPropertyChanging();
			entity.ESCALE = this;
		}
		
		private void detach_FACTURE_SOCOMAR(FACTURE_SOCOMAR entity)
		{
			this.SendPropertyChanging();
			entity.ESCALE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CLIENT")]
	public partial class CLIENT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdClient;
		
		private string _CodeClient;
		
		private string _NomClient;
		
		private string _AdrClient;
		
		private string _EmailClient;
		
		private string _TelClient;
		
		private string _CCClient;
		
		private string _CodeTVA;
		
		private string _TypeClient;
		
		private string _StatutClient;
		
		private string _NumContrib;
		
		private string _NumRegCommerce;
		
		private EntitySet<PAYEMENT> _PAYEMENT;
		
		private EntitySet<HIST_CONNAISSEMENT> _HIST_CONNAISSEMENT;
		
		private EntitySet<AVOIR> _AVOIR;
		
		private EntitySet<CONNAISSEMENT> _CONNAISSEMENT;
		
		private EntitySet<PROFORMA> _PROFORMA;
		
		private EntitySet<FACTURE> _FACTURE;
		
		private EntityRef<CODE_TVA> _CODE_TVA;
		
		private EntityRef<AVOIR_SPOT> _AVOIR_SPOT;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdClientChanging(int value);
    partial void OnIdClientChanged();
    partial void OnCodeClientChanging(string value);
    partial void OnCodeClientChanged();
    partial void OnNomClientChanging(string value);
    partial void OnNomClientChanged();
    partial void OnAdrClientChanging(string value);
    partial void OnAdrClientChanged();
    partial void OnEmailClientChanging(string value);
    partial void OnEmailClientChanged();
    partial void OnTelClientChanging(string value);
    partial void OnTelClientChanged();
    partial void OnCCClientChanging(string value);
    partial void OnCCClientChanged();
    partial void OnCodeTVAChanging(string value);
    partial void OnCodeTVAChanged();
    partial void OnTypeClientChanging(string value);
    partial void OnTypeClientChanged();
    partial void OnStatutClientChanging(string value);
    partial void OnStatutClientChanged();
    partial void OnNumContribChanging(string value);
    partial void OnNumContribChanged();
    partial void OnNumRegCommerceChanging(string value);
    partial void OnNumRegCommerceChanged();
    #endregion
		
		public CLIENT()
		{
			this._PAYEMENT = new EntitySet<PAYEMENT>(new Action<PAYEMENT>(this.attach_PAYEMENT), new Action<PAYEMENT>(this.detach_PAYEMENT));
			this._HIST_CONNAISSEMENT = new EntitySet<HIST_CONNAISSEMENT>(new Action<HIST_CONNAISSEMENT>(this.attach_HIST_CONNAISSEMENT), new Action<HIST_CONNAISSEMENT>(this.detach_HIST_CONNAISSEMENT));
			this._AVOIR = new EntitySet<AVOIR>(new Action<AVOIR>(this.attach_AVOIR), new Action<AVOIR>(this.detach_AVOIR));
			this._CONNAISSEMENT = new EntitySet<CONNAISSEMENT>(new Action<CONNAISSEMENT>(this.attach_CONNAISSEMENT), new Action<CONNAISSEMENT>(this.detach_CONNAISSEMENT));
			this._PROFORMA = new EntitySet<PROFORMA>(new Action<PROFORMA>(this.attach_PROFORMA), new Action<PROFORMA>(this.detach_PROFORMA));
			this._FACTURE = new EntitySet<FACTURE>(new Action<FACTURE>(this.attach_FACTURE), new Action<FACTURE>(this.detach_FACTURE));
			this._CODE_TVA = default(EntityRef<CODE_TVA>);
			this._AVOIR_SPOT = default(EntityRef<AVOIR_SPOT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdClient", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdClient
		{
			get
			{
				return this._IdClient;
			}
			set
			{
				if ((this._IdClient != value))
				{
					if (this._AVOIR_SPOT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdClientChanging(value);
					this.SendPropertyChanging();
					this._IdClient = value;
					this.SendPropertyChanged("IdClient");
					this.OnIdClientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeClient", DbType="NVarChar(20)")]
		public string CodeClient
		{
			get
			{
				return this._CodeClient;
			}
			set
			{
				if ((this._CodeClient != value))
				{
					this.OnCodeClientChanging(value);
					this.SendPropertyChanging();
					this._CodeClient = value;
					this.SendPropertyChanged("CodeClient");
					this.OnCodeClientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NomClient", DbType="NVarChar(50)")]
		public string NomClient
		{
			get
			{
				return this._NomClient;
			}
			set
			{
				if ((this._NomClient != value))
				{
					this.OnNomClientChanging(value);
					this.SendPropertyChanging();
					this._NomClient = value;
					this.SendPropertyChanged("NomClient");
					this.OnNomClientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdrClient", DbType="NVarChar(255)")]
		public string AdrClient
		{
			get
			{
				return this._AdrClient;
			}
			set
			{
				if ((this._AdrClient != value))
				{
					this.OnAdrClientChanging(value);
					this.SendPropertyChanging();
					this._AdrClient = value;
					this.SendPropertyChanged("AdrClient");
					this.OnAdrClientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailClient", DbType="NVarChar(50)")]
		public string EmailClient
		{
			get
			{
				return this._EmailClient;
			}
			set
			{
				if ((this._EmailClient != value))
				{
					this.OnEmailClientChanging(value);
					this.SendPropertyChanging();
					this._EmailClient = value;
					this.SendPropertyChanged("EmailClient");
					this.OnEmailClientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelClient", DbType="NVarChar(50)")]
		public string TelClient
		{
			get
			{
				return this._TelClient;
			}
			set
			{
				if ((this._TelClient != value))
				{
					this.OnTelClientChanging(value);
					this.SendPropertyChanging();
					this._TelClient = value;
					this.SendPropertyChanged("TelClient");
					this.OnTelClientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCClient", DbType="NVarChar(20)")]
		public string CCClient
		{
			get
			{
				return this._CCClient;
			}
			set
			{
				if ((this._CCClient != value))
				{
					this.OnCCClientChanging(value);
					this.SendPropertyChanging();
					this._CCClient = value;
					this.SendPropertyChanged("CCClient");
					this.OnCCClientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeTVA", DbType="NVarChar(10)")]
		public string CodeTVA
		{
			get
			{
				return this._CodeTVA;
			}
			set
			{
				if ((this._CodeTVA != value))
				{
					if (this._CODE_TVA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodeTVAChanging(value);
					this.SendPropertyChanging();
					this._CodeTVA = value;
					this.SendPropertyChanged("CodeTVA");
					this.OnCodeTVAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeClient", DbType="NVarChar(1)")]
		public string TypeClient
		{
			get
			{
				return this._TypeClient;
			}
			set
			{
				if ((this._TypeClient != value))
				{
					this.OnTypeClientChanging(value);
					this.SendPropertyChanging();
					this._TypeClient = value;
					this.SendPropertyChanged("TypeClient");
					this.OnTypeClientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatutClient", DbType="NVarChar(1)")]
		public string StatutClient
		{
			get
			{
				return this._StatutClient;
			}
			set
			{
				if ((this._StatutClient != value))
				{
					this.OnStatutClientChanging(value);
					this.SendPropertyChanging();
					this._StatutClient = value;
					this.SendPropertyChanged("StatutClient");
					this.OnStatutClientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumContrib", DbType="NVarChar(20)")]
		public string NumContrib
		{
			get
			{
				return this._NumContrib;
			}
			set
			{
				if ((this._NumContrib != value))
				{
					this.OnNumContribChanging(value);
					this.SendPropertyChanging();
					this._NumContrib = value;
					this.SendPropertyChanged("NumContrib");
					this.OnNumContribChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumRegCommerce", DbType="NVarChar(20)")]
		public string NumRegCommerce
		{
			get
			{
				return this._NumRegCommerce;
			}
			set
			{
				if ((this._NumRegCommerce != value))
				{
					this.OnNumRegCommerceChanging(value);
					this.SendPropertyChanging();
					this._NumRegCommerce = value;
					this.SendPropertyChanged("NumRegCommerce");
					this.OnNumRegCommerceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CLIENT_PAYEMENT", Storage="_PAYEMENT", ThisKey="IdClient", OtherKey="IdClient")]
		public EntitySet<PAYEMENT> PAYEMENT
		{
			get
			{
				return this._PAYEMENT;
			}
			set
			{
				this._PAYEMENT.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CLIENT_HIST_CONNAISSEMENT", Storage="_HIST_CONNAISSEMENT", ThisKey="IdClient", OtherKey="IdClient")]
		public EntitySet<HIST_CONNAISSEMENT> HIST_CONNAISSEMENT
		{
			get
			{
				return this._HIST_CONNAISSEMENT;
			}
			set
			{
				this._HIST_CONNAISSEMENT.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CLIENT_AVOIR", Storage="_AVOIR", ThisKey="IdClient", OtherKey="IdClient")]
		public EntitySet<AVOIR> AVOIR
		{
			get
			{
				return this._AVOIR;
			}
			set
			{
				this._AVOIR.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CLIENT_CONNAISSEMENT", Storage="_CONNAISSEMENT", ThisKey="IdClient", OtherKey="IdClient")]
		public EntitySet<CONNAISSEMENT> CONNAISSEMENT
		{
			get
			{
				return this._CONNAISSEMENT;
			}
			set
			{
				this._CONNAISSEMENT.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CLIENT_PROFORMA", Storage="_PROFORMA", ThisKey="IdClient", OtherKey="IdClient")]
		public EntitySet<PROFORMA> PROFORMA
		{
			get
			{
				return this._PROFORMA;
			}
			set
			{
				this._PROFORMA.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CLIENT_FACTURE", Storage="_FACTURE", ThisKey="IdClient", OtherKey="IdClient")]
		public EntitySet<FACTURE> FACTURE
		{
			get
			{
				return this._FACTURE;
			}
			set
			{
				this._FACTURE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CODE_TVA_CLIENT", Storage="_CODE_TVA", ThisKey="CodeTVA", OtherKey="CodeTVA", IsForeignKey=true)]
		public CODE_TVA CODE_TVA
		{
			get
			{
				return this._CODE_TVA.Entity;
			}
			set
			{
				CODE_TVA previousValue = this._CODE_TVA.Entity;
				if (((previousValue != value) 
							|| (this._CODE_TVA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CODE_TVA.Entity = null;
						previousValue.CLIENT.Remove(this);
					}
					this._CODE_TVA.Entity = value;
					if ((value != null))
					{
						value.CLIENT.Add(this);
						this._CodeTVA = value.CodeTVA;
					}
					else
					{
						this._CodeTVA = default(string);
					}
					this.SendPropertyChanged("CODE_TVA");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AVOIR_SPOT_CLIENT", Storage="_AVOIR_SPOT", ThisKey="IdClient", OtherKey="IdClient", IsForeignKey=true)]
		public AVOIR_SPOT AVOIR_SPOT
		{
			get
			{
				return this._AVOIR_SPOT.Entity;
			}
			set
			{
				AVOIR_SPOT previousValue = this._AVOIR_SPOT.Entity;
				if (((previousValue != value) 
							|| (this._AVOIR_SPOT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AVOIR_SPOT.Entity = null;
						previousValue.CLIENT.Remove(this);
					}
					this._AVOIR_SPOT.Entity = value;
					if ((value != null))
					{
						value.CLIENT.Add(this);
						this._IdClient = value.IdClient;
					}
					else
					{
						this._IdClient = default(int);
					}
					this.SendPropertyChanged("AVOIR_SPOT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PAYEMENT(PAYEMENT entity)
		{
			this.SendPropertyChanging();
			entity.CLIENT = this;
		}
		
		private void detach_PAYEMENT(PAYEMENT entity)
		{
			this.SendPropertyChanging();
			entity.CLIENT = null;
		}
		
		private void attach_HIST_CONNAISSEMENT(HIST_CONNAISSEMENT entity)
		{
			this.SendPropertyChanging();
			entity.CLIENT = this;
		}
		
		private void detach_HIST_CONNAISSEMENT(HIST_CONNAISSEMENT entity)
		{
			this.SendPropertyChanging();
			entity.CLIENT = null;
		}
		
		private void attach_AVOIR(AVOIR entity)
		{
			this.SendPropertyChanging();
			entity.CLIENT = this;
		}
		
		private void detach_AVOIR(AVOIR entity)
		{
			this.SendPropertyChanging();
			entity.CLIENT = null;
		}
		
		private void attach_CONNAISSEMENT(CONNAISSEMENT entity)
		{
			this.SendPropertyChanging();
			entity.CLIENT = this;
		}
		
		private void detach_CONNAISSEMENT(CONNAISSEMENT entity)
		{
			this.SendPropertyChanging();
			entity.CLIENT = null;
		}
		
		private void attach_PROFORMA(PROFORMA entity)
		{
			this.SendPropertyChanging();
			entity.CLIENT = this;
		}
		
		private void detach_PROFORMA(PROFORMA entity)
		{
			this.SendPropertyChanging();
			entity.CLIENT = null;
		}
		
		private void attach_FACTURE(FACTURE entity)
		{
			this.SendPropertyChanging();
			entity.CLIENT = this;
		}
		
		private void detach_FACTURE(FACTURE entity)
		{
			this.SendPropertyChanging();
			entity.CLIENT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DEMANDE_REDUCTION")]
	public partial class DEMANDE_REDUCTION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdDDR;
		
		private System.Nullable<System.DateTime> _DateDDR;
		
		private System.Nullable<System.DateTime> _DatevDDR;
		
		private string _LibDDR;
		
		private System.Nullable<int> _MHT;
		
		private System.Nullable<float> _TauxTVA;
		
		private string _ObsDDR;
		
		private System.Nullable<short> _CodeArticle;
		
		private System.Nullable<int> _IdBL;
		
		private System.Nullable<int> _IdU;
		
		private System.Nullable<int> _IdUV;
		
		private string _AIVDDR;
		
		private System.Nullable<double> _Pourcent;
		
		private string _StatutRed;
		
		private EntitySet<NOTE> _NOTE;
		
		private EntityRef<ARTICLE> _ARTICLE;
		
		private EntityRef<UTILISATEUR> _UTILISATEUR;
		
		private EntityRef<CONNAISSEMENT> _CONNAISSEMENT;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdDDRChanging(int value);
    partial void OnIdDDRChanged();
    partial void OnDateDDRChanging(System.Nullable<System.DateTime> value);
    partial void OnDateDDRChanged();
    partial void OnDatevDDRChanging(System.Nullable<System.DateTime> value);
    partial void OnDatevDDRChanged();
    partial void OnLibDDRChanging(string value);
    partial void OnLibDDRChanged();
    partial void OnMHTChanging(System.Nullable<int> value);
    partial void OnMHTChanged();
    partial void OnTauxTVAChanging(System.Nullable<float> value);
    partial void OnTauxTVAChanged();
    partial void OnObsDDRChanging(string value);
    partial void OnObsDDRChanged();
    partial void OnCodeArticleChanging(System.Nullable<short> value);
    partial void OnCodeArticleChanged();
    partial void OnIdBLChanging(System.Nullable<int> value);
    partial void OnIdBLChanged();
    partial void OnIdUChanging(System.Nullable<int> value);
    partial void OnIdUChanged();
    partial void OnIdUVChanging(System.Nullable<int> value);
    partial void OnIdUVChanged();
    partial void OnAIVDDRChanging(string value);
    partial void OnAIVDDRChanged();
    partial void OnPourcentChanging(System.Nullable<double> value);
    partial void OnPourcentChanged();
    partial void OnStatutRedChanging(string value);
    partial void OnStatutRedChanged();
    #endregion
		
		public DEMANDE_REDUCTION()
		{
			this._NOTE = new EntitySet<NOTE>(new Action<NOTE>(this.attach_NOTE), new Action<NOTE>(this.detach_NOTE));
			this._ARTICLE = default(EntityRef<ARTICLE>);
			this._UTILISATEUR = default(EntityRef<UTILISATEUR>);
			this._CONNAISSEMENT = default(EntityRef<CONNAISSEMENT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDDR", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdDDR
		{
			get
			{
				return this._IdDDR;
			}
			set
			{
				if ((this._IdDDR != value))
				{
					this.OnIdDDRChanging(value);
					this.SendPropertyChanging();
					this._IdDDR = value;
					this.SendPropertyChanged("IdDDR");
					this.OnIdDDRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateDDR", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateDDR
		{
			get
			{
				return this._DateDDR;
			}
			set
			{
				if ((this._DateDDR != value))
				{
					this.OnDateDDRChanging(value);
					this.SendPropertyChanging();
					this._DateDDR = value;
					this.SendPropertyChanged("DateDDR");
					this.OnDateDDRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatevDDR", DbType="DateTime")]
		public System.Nullable<System.DateTime> DatevDDR
		{
			get
			{
				return this._DatevDDR;
			}
			set
			{
				if ((this._DatevDDR != value))
				{
					this.OnDatevDDRChanging(value);
					this.SendPropertyChanging();
					this._DatevDDR = value;
					this.SendPropertyChanged("DatevDDR");
					this.OnDatevDDRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LibDDR", DbType="NVarChar(50)")]
		public string LibDDR
		{
			get
			{
				return this._LibDDR;
			}
			set
			{
				if ((this._LibDDR != value))
				{
					this.OnLibDDRChanging(value);
					this.SendPropertyChanging();
					this._LibDDR = value;
					this.SendPropertyChanged("LibDDR");
					this.OnLibDDRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MHT", DbType="Int")]
		public System.Nullable<int> MHT
		{
			get
			{
				return this._MHT;
			}
			set
			{
				if ((this._MHT != value))
				{
					this.OnMHTChanging(value);
					this.SendPropertyChanging();
					this._MHT = value;
					this.SendPropertyChanged("MHT");
					this.OnMHTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TauxTVA", DbType="Real")]
		public System.Nullable<float> TauxTVA
		{
			get
			{
				return this._TauxTVA;
			}
			set
			{
				if ((this._TauxTVA != value))
				{
					this.OnTauxTVAChanging(value);
					this.SendPropertyChanging();
					this._TauxTVA = value;
					this.SendPropertyChanged("TauxTVA");
					this.OnTauxTVAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObsDDR", DbType="NVarChar(255)")]
		public string ObsDDR
		{
			get
			{
				return this._ObsDDR;
			}
			set
			{
				if ((this._ObsDDR != value))
				{
					this.OnObsDDRChanging(value);
					this.SendPropertyChanging();
					this._ObsDDR = value;
					this.SendPropertyChanged("ObsDDR");
					this.OnObsDDRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeArticle", DbType="SmallInt")]
		public System.Nullable<short> CodeArticle
		{
			get
			{
				return this._CodeArticle;
			}
			set
			{
				if ((this._CodeArticle != value))
				{
					if (this._ARTICLE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodeArticleChanging(value);
					this.SendPropertyChanging();
					this._CodeArticle = value;
					this.SendPropertyChanged("CodeArticle");
					this.OnCodeArticleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdBL", DbType="Int")]
		public System.Nullable<int> IdBL
		{
			get
			{
				return this._IdBL;
			}
			set
			{
				if ((this._IdBL != value))
				{
					if (this._CONNAISSEMENT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdBLChanging(value);
					this.SendPropertyChanging();
					this._IdBL = value;
					this.SendPropertyChanged("IdBL");
					this.OnIdBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdU", DbType="Int")]
		public System.Nullable<int> IdU
		{
			get
			{
				return this._IdU;
			}
			set
			{
				if ((this._IdU != value))
				{
					if (this._UTILISATEUR.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdUChanging(value);
					this.SendPropertyChanging();
					this._IdU = value;
					this.SendPropertyChanged("IdU");
					this.OnIdUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUV", DbType="Int")]
		public System.Nullable<int> IdUV
		{
			get
			{
				return this._IdUV;
			}
			set
			{
				if ((this._IdUV != value))
				{
					this.OnIdUVChanging(value);
					this.SendPropertyChanging();
					this._IdUV = value;
					this.SendPropertyChanged("IdUV");
					this.OnIdUVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AIVDDR", DbType="NVarChar(255)")]
		public string AIVDDR
		{
			get
			{
				return this._AIVDDR;
			}
			set
			{
				if ((this._AIVDDR != value))
				{
					this.OnAIVDDRChanging(value);
					this.SendPropertyChanging();
					this._AIVDDR = value;
					this.SendPropertyChanged("AIVDDR");
					this.OnAIVDDRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pourcent", DbType="Float")]
		public System.Nullable<double> Pourcent
		{
			get
			{
				return this._Pourcent;
			}
			set
			{
				if ((this._Pourcent != value))
				{
					this.OnPourcentChanging(value);
					this.SendPropertyChanging();
					this._Pourcent = value;
					this.SendPropertyChanged("Pourcent");
					this.OnPourcentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatutRed", DbType="NVarChar(20)")]
		public string StatutRed
		{
			get
			{
				return this._StatutRed;
			}
			set
			{
				if ((this._StatutRed != value))
				{
					this.OnStatutRedChanging(value);
					this.SendPropertyChanging();
					this._StatutRed = value;
					this.SendPropertyChanged("StatutRed");
					this.OnStatutRedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DEMANDE_REDUCTION_NOTE", Storage="_NOTE", ThisKey="IdDDR", OtherKey="IdDDR")]
		public EntitySet<NOTE> NOTE
		{
			get
			{
				return this._NOTE;
			}
			set
			{
				this._NOTE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ARTICLE_DEMANDE_REDUCTION", Storage="_ARTICLE", ThisKey="CodeArticle", OtherKey="CodeArticle", IsForeignKey=true, DeleteRule="CASCADE")]
		public ARTICLE ARTICLE
		{
			get
			{
				return this._ARTICLE.Entity;
			}
			set
			{
				ARTICLE previousValue = this._ARTICLE.Entity;
				if (((previousValue != value) 
							|| (this._ARTICLE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ARTICLE.Entity = null;
						previousValue.DEMANDE_REDUCTION.Remove(this);
					}
					this._ARTICLE.Entity = value;
					if ((value != null))
					{
						value.DEMANDE_REDUCTION.Add(this);
						this._CodeArticle = value.CodeArticle;
					}
					else
					{
						this._CodeArticle = default(Nullable<short>);
					}
					this.SendPropertyChanged("ARTICLE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UTILISATEUR_DEMANDE_REDUCTION", Storage="_UTILISATEUR", ThisKey="IdU", OtherKey="IdU", IsForeignKey=true)]
		public UTILISATEUR UTILISATEUR
		{
			get
			{
				return this._UTILISATEUR.Entity;
			}
			set
			{
				UTILISATEUR previousValue = this._UTILISATEUR.Entity;
				if (((previousValue != value) 
							|| (this._UTILISATEUR.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UTILISATEUR.Entity = null;
						previousValue.DEMANDE_REDUCTION.Remove(this);
					}
					this._UTILISATEUR.Entity = value;
					if ((value != null))
					{
						value.DEMANDE_REDUCTION.Add(this);
						this._IdU = value.IdU;
					}
					else
					{
						this._IdU = default(Nullable<int>);
					}
					this.SendPropertyChanged("UTILISATEUR");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONNAISSEMENT_DEMANDE_REDUCTION", Storage="_CONNAISSEMENT", ThisKey="IdBL", OtherKey="IdBL", IsForeignKey=true, DeleteRule="CASCADE")]
		public CONNAISSEMENT CONNAISSEMENT
		{
			get
			{
				return this._CONNAISSEMENT.Entity;
			}
			set
			{
				CONNAISSEMENT previousValue = this._CONNAISSEMENT.Entity;
				if (((previousValue != value) 
							|| (this._CONNAISSEMENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CONNAISSEMENT.Entity = null;
						previousValue.DEMANDE_REDUCTION.Remove(this);
					}
					this._CONNAISSEMENT.Entity = value;
					if ((value != null))
					{
						value.DEMANDE_REDUCTION.Add(this);
						this._IdBL = value.IdBL;
					}
					else
					{
						this._IdBL = default(Nullable<int>);
					}
					this.SendPropertyChanged("CONNAISSEMENT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NOTE(NOTE entity)
		{
			this.SendPropertyChanging();
			entity.DEMANDE_REDUCTION = this;
		}
		
		private void detach_NOTE(NOTE entity)
		{
			this.SendPropertyChanging();
			entity.DEMANDE_REDUCTION = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TYPE_CONTENEUR")]
	public partial class TYPE_CONTENEUR : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CodeTypeCtr;
		
		private string _LibTypeCtr;
		
		private System.Nullable<short> _LimPoids;
		
		private System.Nullable<int> _PUDLA;
		
		private System.Nullable<int> _PUCMR;
		
		private System.Nullable<int> _PUINT;
		
		private EntitySet<CONTENEUR> _CONTENEUR;
		
		private EntitySet<DISPOSITION_CONTENEUR> _DISPOSITION_CONTENEUR;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeTypeCtrChanging(string value);
    partial void OnCodeTypeCtrChanged();
    partial void OnLibTypeCtrChanging(string value);
    partial void OnLibTypeCtrChanged();
    partial void OnLimPoidsChanging(System.Nullable<short> value);
    partial void OnLimPoidsChanged();
    partial void OnPUDLAChanging(System.Nullable<int> value);
    partial void OnPUDLAChanged();
    partial void OnPUCMRChanging(System.Nullable<int> value);
    partial void OnPUCMRChanged();
    partial void OnPUINTChanging(System.Nullable<int> value);
    partial void OnPUINTChanged();
    #endregion
		
		public TYPE_CONTENEUR()
		{
			this._CONTENEUR = new EntitySet<CONTENEUR>(new Action<CONTENEUR>(this.attach_CONTENEUR), new Action<CONTENEUR>(this.detach_CONTENEUR));
			this._DISPOSITION_CONTENEUR = new EntitySet<DISPOSITION_CONTENEUR>(new Action<DISPOSITION_CONTENEUR>(this.attach_DISPOSITION_CONTENEUR), new Action<DISPOSITION_CONTENEUR>(this.detach_DISPOSITION_CONTENEUR));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeTypeCtr", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CodeTypeCtr
		{
			get
			{
				return this._CodeTypeCtr;
			}
			set
			{
				if ((this._CodeTypeCtr != value))
				{
					this.OnCodeTypeCtrChanging(value);
					this.SendPropertyChanging();
					this._CodeTypeCtr = value;
					this.SendPropertyChanged("CodeTypeCtr");
					this.OnCodeTypeCtrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LibTypeCtr", DbType="NVarChar(50)")]
		public string LibTypeCtr
		{
			get
			{
				return this._LibTypeCtr;
			}
			set
			{
				if ((this._LibTypeCtr != value))
				{
					this.OnLibTypeCtrChanging(value);
					this.SendPropertyChanging();
					this._LibTypeCtr = value;
					this.SendPropertyChanged("LibTypeCtr");
					this.OnLibTypeCtrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LimPoids", DbType="SmallInt")]
		public System.Nullable<short> LimPoids
		{
			get
			{
				return this._LimPoids;
			}
			set
			{
				if ((this._LimPoids != value))
				{
					this.OnLimPoidsChanging(value);
					this.SendPropertyChanging();
					this._LimPoids = value;
					this.SendPropertyChanged("LimPoids");
					this.OnLimPoidsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PUDLA", DbType="Int")]
		public System.Nullable<int> PUDLA
		{
			get
			{
				return this._PUDLA;
			}
			set
			{
				if ((this._PUDLA != value))
				{
					this.OnPUDLAChanging(value);
					this.SendPropertyChanging();
					this._PUDLA = value;
					this.SendPropertyChanged("PUDLA");
					this.OnPUDLAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PUCMR", DbType="Int")]
		public System.Nullable<int> PUCMR
		{
			get
			{
				return this._PUCMR;
			}
			set
			{
				if ((this._PUCMR != value))
				{
					this.OnPUCMRChanging(value);
					this.SendPropertyChanging();
					this._PUCMR = value;
					this.SendPropertyChanged("PUCMR");
					this.OnPUCMRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PUINT", DbType="Int")]
		public System.Nullable<int> PUINT
		{
			get
			{
				return this._PUINT;
			}
			set
			{
				if ((this._PUINT != value))
				{
					this.OnPUINTChanging(value);
					this.SendPropertyChanging();
					this._PUINT = value;
					this.SendPropertyChanged("PUINT");
					this.OnPUINTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TYPE_CONTENEUR_CONTENEUR", Storage="_CONTENEUR", ThisKey="CodeTypeCtr", OtherKey="TypeMCtr")]
		public EntitySet<CONTENEUR> CONTENEUR
		{
			get
			{
				return this._CONTENEUR;
			}
			set
			{
				this._CONTENEUR.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TYPE_CONTENEUR_DISPOSITION_CONTENEUR", Storage="_DISPOSITION_CONTENEUR", ThisKey="CodeTypeCtr", OtherKey="TypeCtr")]
		public EntitySet<DISPOSITION_CONTENEUR> DISPOSITION_CONTENEUR
		{
			get
			{
				return this._DISPOSITION_CONTENEUR;
			}
			set
			{
				this._DISPOSITION_CONTENEUR.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CONTENEUR(CONTENEUR entity)
		{
			this.SendPropertyChanging();
			entity.TYPE_CONTENEUR = this;
		}
		
		private void detach_CONTENEUR(CONTENEUR entity)
		{
			this.SendPropertyChanging();
			entity.TYPE_CONTENEUR = null;
		}
		
		private void attach_DISPOSITION_CONTENEUR(DISPOSITION_CONTENEUR entity)
		{
			this.SendPropertyChanging();
			entity.TYPE_CONTENEUR = this;
		}
		
		private void detach_DISPOSITION_CONTENEUR(DISPOSITION_CONTENEUR entity)
		{
			this.SendPropertyChanging();
			entity.TYPE_CONTENEUR = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EXTENSION_FRANCHISE")]
	public partial class EXTENSION_FRANCHISE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdDEXT;
		
		private System.Nullable<System.DateTime> _DateDEXT;
		
		private System.Nullable<System.DateTime> _DatevDEXT;
		
		private System.Nullable<int> _NbreSej;
		
		private System.Nullable<int> _NbreStat;
		
		private System.Nullable<int> _NbreSures;
		
		private System.Nullable<int> _NbreDet;
		
		private string _ObsDEXT;
		
		private System.Nullable<int> _IdBL;
		
		private System.Nullable<int> _IdU;
		
		private System.Nullable<int> _IdUV;
		
		private string _AIVDEXT;
		
		private EntitySet<NOTE> _NOTE;
		
		private EntityRef<UTILISATEUR> _UTILISATEUR;
		
		private EntityRef<CONNAISSEMENT> _CONNAISSEMENT;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdDEXTChanging(int value);
    partial void OnIdDEXTChanged();
    partial void OnDateDEXTChanging(System.Nullable<System.DateTime> value);
    partial void OnDateDEXTChanged();
    partial void OnDatevDEXTChanging(System.Nullable<System.DateTime> value);
    partial void OnDatevDEXTChanged();
    partial void OnNbreSejChanging(System.Nullable<int> value);
    partial void OnNbreSejChanged();
    partial void OnNbreStatChanging(System.Nullable<int> value);
    partial void OnNbreStatChanged();
    partial void OnNbreSuresChanging(System.Nullable<int> value);
    partial void OnNbreSuresChanged();
    partial void OnNbreDetChanging(System.Nullable<int> value);
    partial void OnNbreDetChanged();
    partial void OnObsDEXTChanging(string value);
    partial void OnObsDEXTChanged();
    partial void OnIdBLChanging(System.Nullable<int> value);
    partial void OnIdBLChanged();
    partial void OnIdUChanging(System.Nullable<int> value);
    partial void OnIdUChanged();
    partial void OnIdUVChanging(System.Nullable<int> value);
    partial void OnIdUVChanged();
    partial void OnAIVDEXTChanging(string value);
    partial void OnAIVDEXTChanged();
    #endregion
		
		public EXTENSION_FRANCHISE()
		{
			this._NOTE = new EntitySet<NOTE>(new Action<NOTE>(this.attach_NOTE), new Action<NOTE>(this.detach_NOTE));
			this._UTILISATEUR = default(EntityRef<UTILISATEUR>);
			this._CONNAISSEMENT = default(EntityRef<CONNAISSEMENT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDEXT", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdDEXT
		{
			get
			{
				return this._IdDEXT;
			}
			set
			{
				if ((this._IdDEXT != value))
				{
					this.OnIdDEXTChanging(value);
					this.SendPropertyChanging();
					this._IdDEXT = value;
					this.SendPropertyChanged("IdDEXT");
					this.OnIdDEXTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateDEXT", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateDEXT
		{
			get
			{
				return this._DateDEXT;
			}
			set
			{
				if ((this._DateDEXT != value))
				{
					this.OnDateDEXTChanging(value);
					this.SendPropertyChanging();
					this._DateDEXT = value;
					this.SendPropertyChanged("DateDEXT");
					this.OnDateDEXTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatevDEXT", DbType="DateTime")]
		public System.Nullable<System.DateTime> DatevDEXT
		{
			get
			{
				return this._DatevDEXT;
			}
			set
			{
				if ((this._DatevDEXT != value))
				{
					this.OnDatevDEXTChanging(value);
					this.SendPropertyChanging();
					this._DatevDEXT = value;
					this.SendPropertyChanged("DatevDEXT");
					this.OnDatevDEXTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NbreSej", DbType="Int")]
		public System.Nullable<int> NbreSej
		{
			get
			{
				return this._NbreSej;
			}
			set
			{
				if ((this._NbreSej != value))
				{
					this.OnNbreSejChanging(value);
					this.SendPropertyChanging();
					this._NbreSej = value;
					this.SendPropertyChanged("NbreSej");
					this.OnNbreSejChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NbreStat", DbType="Int")]
		public System.Nullable<int> NbreStat
		{
			get
			{
				return this._NbreStat;
			}
			set
			{
				if ((this._NbreStat != value))
				{
					this.OnNbreStatChanging(value);
					this.SendPropertyChanging();
					this._NbreStat = value;
					this.SendPropertyChanged("NbreStat");
					this.OnNbreStatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NbreSures", DbType="Int")]
		public System.Nullable<int> NbreSures
		{
			get
			{
				return this._NbreSures;
			}
			set
			{
				if ((this._NbreSures != value))
				{
					this.OnNbreSuresChanging(value);
					this.SendPropertyChanging();
					this._NbreSures = value;
					this.SendPropertyChanged("NbreSures");
					this.OnNbreSuresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NbreDet", DbType="Int")]
		public System.Nullable<int> NbreDet
		{
			get
			{
				return this._NbreDet;
			}
			set
			{
				if ((this._NbreDet != value))
				{
					this.OnNbreDetChanging(value);
					this.SendPropertyChanging();
					this._NbreDet = value;
					this.SendPropertyChanged("NbreDet");
					this.OnNbreDetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObsDEXT", DbType="NVarChar(255)")]
		public string ObsDEXT
		{
			get
			{
				return this._ObsDEXT;
			}
			set
			{
				if ((this._ObsDEXT != value))
				{
					this.OnObsDEXTChanging(value);
					this.SendPropertyChanging();
					this._ObsDEXT = value;
					this.SendPropertyChanged("ObsDEXT");
					this.OnObsDEXTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdBL", DbType="Int")]
		public System.Nullable<int> IdBL
		{
			get
			{
				return this._IdBL;
			}
			set
			{
				if ((this._IdBL != value))
				{
					if (this._CONNAISSEMENT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdBLChanging(value);
					this.SendPropertyChanging();
					this._IdBL = value;
					this.SendPropertyChanged("IdBL");
					this.OnIdBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdU", DbType="Int")]
		public System.Nullable<int> IdU
		{
			get
			{
				return this._IdU;
			}
			set
			{
				if ((this._IdU != value))
				{
					if (this._UTILISATEUR.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdUChanging(value);
					this.SendPropertyChanging();
					this._IdU = value;
					this.SendPropertyChanged("IdU");
					this.OnIdUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUV", DbType="Int")]
		public System.Nullable<int> IdUV
		{
			get
			{
				return this._IdUV;
			}
			set
			{
				if ((this._IdUV != value))
				{
					this.OnIdUVChanging(value);
					this.SendPropertyChanging();
					this._IdUV = value;
					this.SendPropertyChanged("IdUV");
					this.OnIdUVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AIVDEXT", DbType="NVarChar(255)")]
		public string AIVDEXT
		{
			get
			{
				return this._AIVDEXT;
			}
			set
			{
				if ((this._AIVDEXT != value))
				{
					this.OnAIVDEXTChanging(value);
					this.SendPropertyChanging();
					this._AIVDEXT = value;
					this.SendPropertyChanged("AIVDEXT");
					this.OnAIVDEXTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EXTENSION_FRANCHISE_NOTE", Storage="_NOTE", ThisKey="IdDEXT", OtherKey="IdDEXT")]
		public EntitySet<NOTE> NOTE
		{
			get
			{
				return this._NOTE;
			}
			set
			{
				this._NOTE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UTILISATEUR_EXTENSION_FRANCHISE", Storage="_UTILISATEUR", ThisKey="IdU", OtherKey="IdU", IsForeignKey=true)]
		public UTILISATEUR UTILISATEUR
		{
			get
			{
				return this._UTILISATEUR.Entity;
			}
			set
			{
				UTILISATEUR previousValue = this._UTILISATEUR.Entity;
				if (((previousValue != value) 
							|| (this._UTILISATEUR.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UTILISATEUR.Entity = null;
						previousValue.EXTENSION_FRANCHISE.Remove(this);
					}
					this._UTILISATEUR.Entity = value;
					if ((value != null))
					{
						value.EXTENSION_FRANCHISE.Add(this);
						this._IdU = value.IdU;
					}
					else
					{
						this._IdU = default(Nullable<int>);
					}
					this.SendPropertyChanged("UTILISATEUR");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONNAISSEMENT_EXTENSION_FRANCHISE", Storage="_CONNAISSEMENT", ThisKey="IdBL", OtherKey="IdBL", IsForeignKey=true)]
		public CONNAISSEMENT CONNAISSEMENT
		{
			get
			{
				return this._CONNAISSEMENT.Entity;
			}
			set
			{
				CONNAISSEMENT previousValue = this._CONNAISSEMENT.Entity;
				if (((previousValue != value) 
							|| (this._CONNAISSEMENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CONNAISSEMENT.Entity = null;
						previousValue.EXTENSION_FRANCHISE.Remove(this);
					}
					this._CONNAISSEMENT.Entity = value;
					if ((value != null))
					{
						value.EXTENSION_FRANCHISE.Add(this);
						this._IdBL = value.IdBL;
					}
					else
					{
						this._IdBL = default(Nullable<int>);
					}
					this.SendPropertyChanged("CONNAISSEMENT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NOTE(NOTE entity)
		{
			this.SendPropertyChanging();
			entity.EXTENSION_FRANCHISE = this;
		}
		
		private void detach_NOTE(NOTE entity)
		{
			this.SendPropertyChanging();
			entity.EXTENSION_FRANCHISE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MANIFESTE")]
	public partial class MANIFESTE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdMan;
		
		private System.Nullable<short> _NPBLMan;
		
		private System.Nullable<short> _NPVMan;
		
		private System.Nullable<short> _NPCMan;
		
		private System.Nullable<short> _NPGCMan;
		
		private System.Nullable<System.DateTime> _DCMan;
		
		private string _AIMan;
		
		private System.Nullable<short> _FormatMan;
		
		private string _CAFMan;
		
		private string _StatutMan;
		
		private System.Nullable<int> _IdEsc;
		
		private string _CodePort;
		
		private System.Nullable<System.DateTime> _DVMan;
		
		private System.Nullable<short> _NPMMan;
		
		private EntitySet<HIST_CONNAISSEMENT> _HIST_CONNAISSEMENT;
		
		private EntitySet<CONNAISSEMENT> _CONNAISSEMENT;
		
		private EntitySet<VEHICULE> _VEHICULE;
		
		private EntitySet<CONTENEUR> _CONTENEUR;
		
		private EntitySet<CONVENTIONNEL> _CONVENTIONNEL;
		
		private EntitySet<MAFI> _MAFI;
		
		private EntitySet<NOTE> _NOTE;
		
		private EntityRef<ESCALE> _ESCALE;
		
		private EntityRef<PORT> _PORT;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdManChanging(int value);
    partial void OnIdManChanged();
    partial void OnNPBLManChanging(System.Nullable<short> value);
    partial void OnNPBLManChanged();
    partial void OnNPVManChanging(System.Nullable<short> value);
    partial void OnNPVManChanged();
    partial void OnNPCManChanging(System.Nullable<short> value);
    partial void OnNPCManChanged();
    partial void OnNPGCManChanging(System.Nullable<short> value);
    partial void OnNPGCManChanged();
    partial void OnDCManChanging(System.Nullable<System.DateTime> value);
    partial void OnDCManChanged();
    partial void OnAIManChanging(string value);
    partial void OnAIManChanged();
    partial void OnFormatManChanging(System.Nullable<short> value);
    partial void OnFormatManChanged();
    partial void OnCAFManChanging(string value);
    partial void OnCAFManChanged();
    partial void OnStatutManChanging(string value);
    partial void OnStatutManChanged();
    partial void OnIdEscChanging(System.Nullable<int> value);
    partial void OnIdEscChanged();
    partial void OnCodePortChanging(string value);
    partial void OnCodePortChanged();
    partial void OnDVManChanging(System.Nullable<System.DateTime> value);
    partial void OnDVManChanged();
    partial void OnNPMManChanging(System.Nullable<short> value);
    partial void OnNPMManChanged();
    #endregion
		
		public MANIFESTE()
		{
			this._HIST_CONNAISSEMENT = new EntitySet<HIST_CONNAISSEMENT>(new Action<HIST_CONNAISSEMENT>(this.attach_HIST_CONNAISSEMENT), new Action<HIST_CONNAISSEMENT>(this.detach_HIST_CONNAISSEMENT));
			this._CONNAISSEMENT = new EntitySet<CONNAISSEMENT>(new Action<CONNAISSEMENT>(this.attach_CONNAISSEMENT), new Action<CONNAISSEMENT>(this.detach_CONNAISSEMENT));
			this._VEHICULE = new EntitySet<VEHICULE>(new Action<VEHICULE>(this.attach_VEHICULE), new Action<VEHICULE>(this.detach_VEHICULE));
			this._CONTENEUR = new EntitySet<CONTENEUR>(new Action<CONTENEUR>(this.attach_CONTENEUR), new Action<CONTENEUR>(this.detach_CONTENEUR));
			this._CONVENTIONNEL = new EntitySet<CONVENTIONNEL>(new Action<CONVENTIONNEL>(this.attach_CONVENTIONNEL), new Action<CONVENTIONNEL>(this.detach_CONVENTIONNEL));
			this._MAFI = new EntitySet<MAFI>(new Action<MAFI>(this.attach_MAFI), new Action<MAFI>(this.detach_MAFI));
			this._NOTE = new EntitySet<NOTE>(new Action<NOTE>(this.attach_NOTE), new Action<NOTE>(this.detach_NOTE));
			this._ESCALE = default(EntityRef<ESCALE>);
			this._PORT = default(EntityRef<PORT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdMan", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdMan
		{
			get
			{
				return this._IdMan;
			}
			set
			{
				if ((this._IdMan != value))
				{
					this.OnIdManChanging(value);
					this.SendPropertyChanging();
					this._IdMan = value;
					this.SendPropertyChanged("IdMan");
					this.OnIdManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NPBLMan", DbType="SmallInt")]
		public System.Nullable<short> NPBLMan
		{
			get
			{
				return this._NPBLMan;
			}
			set
			{
				if ((this._NPBLMan != value))
				{
					this.OnNPBLManChanging(value);
					this.SendPropertyChanging();
					this._NPBLMan = value;
					this.SendPropertyChanged("NPBLMan");
					this.OnNPBLManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NPVMan", DbType="SmallInt")]
		public System.Nullable<short> NPVMan
		{
			get
			{
				return this._NPVMan;
			}
			set
			{
				if ((this._NPVMan != value))
				{
					this.OnNPVManChanging(value);
					this.SendPropertyChanging();
					this._NPVMan = value;
					this.SendPropertyChanged("NPVMan");
					this.OnNPVManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NPCMan", DbType="SmallInt")]
		public System.Nullable<short> NPCMan
		{
			get
			{
				return this._NPCMan;
			}
			set
			{
				if ((this._NPCMan != value))
				{
					this.OnNPCManChanging(value);
					this.SendPropertyChanging();
					this._NPCMan = value;
					this.SendPropertyChanged("NPCMan");
					this.OnNPCManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NPGCMan", DbType="SmallInt")]
		public System.Nullable<short> NPGCMan
		{
			get
			{
				return this._NPGCMan;
			}
			set
			{
				if ((this._NPGCMan != value))
				{
					this.OnNPGCManChanging(value);
					this.SendPropertyChanging();
					this._NPGCMan = value;
					this.SendPropertyChanged("NPGCMan");
					this.OnNPGCManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DCMan", DbType="DateTime")]
		public System.Nullable<System.DateTime> DCMan
		{
			get
			{
				return this._DCMan;
			}
			set
			{
				if ((this._DCMan != value))
				{
					this.OnDCManChanging(value);
					this.SendPropertyChanging();
					this._DCMan = value;
					this.SendPropertyChanged("DCMan");
					this.OnDCManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AIMan", DbType="NVarChar(255)")]
		public string AIMan
		{
			get
			{
				return this._AIMan;
			}
			set
			{
				if ((this._AIMan != value))
				{
					this.OnAIManChanging(value);
					this.SendPropertyChanging();
					this._AIMan = value;
					this.SendPropertyChanged("AIMan");
					this.OnAIManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormatMan", DbType="SmallInt")]
		public System.Nullable<short> FormatMan
		{
			get
			{
				return this._FormatMan;
			}
			set
			{
				if ((this._FormatMan != value))
				{
					this.OnFormatManChanging(value);
					this.SendPropertyChanging();
					this._FormatMan = value;
					this.SendPropertyChanged("FormatMan");
					this.OnFormatManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CAFMan", DbType="NVarChar(255)")]
		public string CAFMan
		{
			get
			{
				return this._CAFMan;
			}
			set
			{
				if ((this._CAFMan != value))
				{
					this.OnCAFManChanging(value);
					this.SendPropertyChanging();
					this._CAFMan = value;
					this.SendPropertyChanged("CAFMan");
					this.OnCAFManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatutMan", DbType="NVarChar(20)")]
		public string StatutMan
		{
			get
			{
				return this._StatutMan;
			}
			set
			{
				if ((this._StatutMan != value))
				{
					this.OnStatutManChanging(value);
					this.SendPropertyChanging();
					this._StatutMan = value;
					this.SendPropertyChanged("StatutMan");
					this.OnStatutManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEsc", DbType="Int")]
		public System.Nullable<int> IdEsc
		{
			get
			{
				return this._IdEsc;
			}
			set
			{
				if ((this._IdEsc != value))
				{
					if (this._ESCALE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdEscChanging(value);
					this.SendPropertyChanging();
					this._IdEsc = value;
					this.SendPropertyChanged("IdEsc");
					this.OnIdEscChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodePort", DbType="NVarChar(50)")]
		public string CodePort
		{
			get
			{
				return this._CodePort;
			}
			set
			{
				if ((this._CodePort != value))
				{
					if (this._PORT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodePortChanging(value);
					this.SendPropertyChanging();
					this._CodePort = value;
					this.SendPropertyChanged("CodePort");
					this.OnCodePortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DVMan", DbType="DateTime")]
		public System.Nullable<System.DateTime> DVMan
		{
			get
			{
				return this._DVMan;
			}
			set
			{
				if ((this._DVMan != value))
				{
					this.OnDVManChanging(value);
					this.SendPropertyChanging();
					this._DVMan = value;
					this.SendPropertyChanged("DVMan");
					this.OnDVManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NPMMan", DbType="SmallInt")]
		public System.Nullable<short> NPMMan
		{
			get
			{
				return this._NPMMan;
			}
			set
			{
				if ((this._NPMMan != value))
				{
					this.OnNPMManChanging(value);
					this.SendPropertyChanging();
					this._NPMMan = value;
					this.SendPropertyChanged("NPMMan");
					this.OnNPMManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MANIFESTE_HIST_CONNAISSEMENT", Storage="_HIST_CONNAISSEMENT", ThisKey="IdMan", OtherKey="IdMan")]
		public EntitySet<HIST_CONNAISSEMENT> HIST_CONNAISSEMENT
		{
			get
			{
				return this._HIST_CONNAISSEMENT;
			}
			set
			{
				this._HIST_CONNAISSEMENT.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MANIFESTE_CONNAISSEMENT", Storage="_CONNAISSEMENT", ThisKey="IdMan", OtherKey="IdMan")]
		public EntitySet<CONNAISSEMENT> CONNAISSEMENT
		{
			get
			{
				return this._CONNAISSEMENT;
			}
			set
			{
				this._CONNAISSEMENT.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MANIFESTE_VEHICULE", Storage="_VEHICULE", ThisKey="IdMan", OtherKey="IdMan")]
		public EntitySet<VEHICULE> VEHICULE
		{
			get
			{
				return this._VEHICULE;
			}
			set
			{
				this._VEHICULE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MANIFESTE_CONTENEUR", Storage="_CONTENEUR", ThisKey="IdMan", OtherKey="IdMan")]
		public EntitySet<CONTENEUR> CONTENEUR
		{
			get
			{
				return this._CONTENEUR;
			}
			set
			{
				this._CONTENEUR.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MANIFESTE_CONVENTIONNEL", Storage="_CONVENTIONNEL", ThisKey="IdMan", OtherKey="IdMan")]
		public EntitySet<CONVENTIONNEL> CONVENTIONNEL
		{
			get
			{
				return this._CONVENTIONNEL;
			}
			set
			{
				this._CONVENTIONNEL.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MANIFESTE_MAFI", Storage="_MAFI", ThisKey="IdMan", OtherKey="IdMan")]
		public EntitySet<MAFI> MAFI
		{
			get
			{
				return this._MAFI;
			}
			set
			{
				this._MAFI.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MANIFESTE_NOTE", Storage="_NOTE", ThisKey="IdMan", OtherKey="IdMan")]
		public EntitySet<NOTE> NOTE
		{
			get
			{
				return this._NOTE;
			}
			set
			{
				this._NOTE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ESCALE_MANIFESTE", Storage="_ESCALE", ThisKey="IdEsc", OtherKey="IdEsc", IsForeignKey=true)]
		public ESCALE ESCALE
		{
			get
			{
				return this._ESCALE.Entity;
			}
			set
			{
				ESCALE previousValue = this._ESCALE.Entity;
				if (((previousValue != value) 
							|| (this._ESCALE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ESCALE.Entity = null;
						previousValue.MANIFESTE.Remove(this);
					}
					this._ESCALE.Entity = value;
					if ((value != null))
					{
						value.MANIFESTE.Add(this);
						this._IdEsc = value.IdEsc;
					}
					else
					{
						this._IdEsc = default(Nullable<int>);
					}
					this.SendPropertyChanged("ESCALE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PORT_MANIFESTE", Storage="_PORT", ThisKey="CodePort", OtherKey="CodePort", IsForeignKey=true)]
		public PORT PORT
		{
			get
			{
				return this._PORT.Entity;
			}
			set
			{
				PORT previousValue = this._PORT.Entity;
				if (((previousValue != value) 
							|| (this._PORT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PORT.Entity = null;
						previousValue.MANIFESTE.Remove(this);
					}
					this._PORT.Entity = value;
					if ((value != null))
					{
						value.MANIFESTE.Add(this);
						this._CodePort = value.CodePort;
					}
					else
					{
						this._CodePort = default(string);
					}
					this.SendPropertyChanged("PORT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HIST_CONNAISSEMENT(HIST_CONNAISSEMENT entity)
		{
			this.SendPropertyChanging();
			entity.MANIFESTE = this;
		}
		
		private void detach_HIST_CONNAISSEMENT(HIST_CONNAISSEMENT entity)
		{
			this.SendPropertyChanging();
			entity.MANIFESTE = null;
		}
		
		private void attach_CONNAISSEMENT(CONNAISSEMENT entity)
		{
			this.SendPropertyChanging();
			entity.MANIFESTE = this;
		}
		
		private void detach_CONNAISSEMENT(CONNAISSEMENT entity)
		{
			this.SendPropertyChanging();
			entity.MANIFESTE = null;
		}
		
		private void attach_VEHICULE(VEHICULE entity)
		{
			this.SendPropertyChanging();
			entity.MANIFESTE = this;
		}
		
		private void detach_VEHICULE(VEHICULE entity)
		{
			this.SendPropertyChanging();
			entity.MANIFESTE = null;
		}
		
		private void attach_CONTENEUR(CONTENEUR entity)
		{
			this.SendPropertyChanging();
			entity.MANIFESTE = this;
		}
		
		private void detach_CONTENEUR(CONTENEUR entity)
		{
			this.SendPropertyChanging();
			entity.MANIFESTE = null;
		}
		
		private void attach_CONVENTIONNEL(CONVENTIONNEL entity)
		{
			this.SendPropertyChanging();
			entity.MANIFESTE = this;
		}
		
		private void detach_CONVENTIONNEL(CONVENTIONNEL entity)
		{
			this.SendPropertyChanging();
			entity.MANIFESTE = null;
		}
		
		private void attach_MAFI(MAFI entity)
		{
			this.SendPropertyChanging();
			entity.MANIFESTE = this;
		}
		
		private void detach_MAFI(MAFI entity)
		{
			this.SendPropertyChanging();
			entity.MANIFESTE = null;
		}
		
		private void attach_NOTE(NOTE entity)
		{
			this.SendPropertyChanging();
			entity.MANIFESTE = this;
		}
		
		private void detach_NOTE(NOTE entity)
		{
			this.SendPropertyChanging();
			entity.MANIFESTE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OPERATION_CONNAISSEMENT")]
	public partial class OPERATION_CONNAISSEMENT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdBL;
		
		private int _IdTypeOp;
		
		private System.Nullable<System.DateTime> _DateOp;
		
		private string _AIOp;
		
		private System.Nullable<int> _IdU;
		
		private EntityRef<UTILISATEUR> _UTILISATEUR;
		
		private EntityRef<TYPE_OPERATION> _TYPE_OPERATION;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdBLChanging(int value);
    partial void OnIdBLChanged();
    partial void OnIdTypeOpChanging(int value);
    partial void OnIdTypeOpChanged();
    partial void OnDateOpChanging(System.Nullable<System.DateTime> value);
    partial void OnDateOpChanged();
    partial void OnAIOpChanging(string value);
    partial void OnAIOpChanged();
    partial void OnIdUChanging(System.Nullable<int> value);
    partial void OnIdUChanged();
    #endregion
		
		public OPERATION_CONNAISSEMENT()
		{
			this._UTILISATEUR = default(EntityRef<UTILISATEUR>);
			this._TYPE_OPERATION = default(EntityRef<TYPE_OPERATION>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdBL", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdBL
		{
			get
			{
				return this._IdBL;
			}
			set
			{
				if ((this._IdBL != value))
				{
					this.OnIdBLChanging(value);
					this.SendPropertyChanging();
					this._IdBL = value;
					this.SendPropertyChanged("IdBL");
					this.OnIdBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTypeOp", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdTypeOp
		{
			get
			{
				return this._IdTypeOp;
			}
			set
			{
				if ((this._IdTypeOp != value))
				{
					if (this._TYPE_OPERATION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdTypeOpChanging(value);
					this.SendPropertyChanging();
					this._IdTypeOp = value;
					this.SendPropertyChanged("IdTypeOp");
					this.OnIdTypeOpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOp", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateOp
		{
			get
			{
				return this._DateOp;
			}
			set
			{
				if ((this._DateOp != value))
				{
					this.OnDateOpChanging(value);
					this.SendPropertyChanging();
					this._DateOp = value;
					this.SendPropertyChanged("DateOp");
					this.OnDateOpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AIOp", DbType="NVarChar(255)")]
		public string AIOp
		{
			get
			{
				return this._AIOp;
			}
			set
			{
				if ((this._AIOp != value))
				{
					this.OnAIOpChanging(value);
					this.SendPropertyChanging();
					this._AIOp = value;
					this.SendPropertyChanged("AIOp");
					this.OnAIOpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdU", DbType="Int")]
		public System.Nullable<int> IdU
		{
			get
			{
				return this._IdU;
			}
			set
			{
				if ((this._IdU != value))
				{
					if (this._UTILISATEUR.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdUChanging(value);
					this.SendPropertyChanging();
					this._IdU = value;
					this.SendPropertyChanged("IdU");
					this.OnIdUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UTILISATEUR_OPERATION_CONNAISSEMENT", Storage="_UTILISATEUR", ThisKey="IdU", OtherKey="IdU", IsForeignKey=true)]
		public UTILISATEUR UTILISATEUR
		{
			get
			{
				return this._UTILISATEUR.Entity;
			}
			set
			{
				UTILISATEUR previousValue = this._UTILISATEUR.Entity;
				if (((previousValue != value) 
							|| (this._UTILISATEUR.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UTILISATEUR.Entity = null;
						previousValue.OPERATION_CONNAISSEMENT.Remove(this);
					}
					this._UTILISATEUR.Entity = value;
					if ((value != null))
					{
						value.OPERATION_CONNAISSEMENT.Add(this);
						this._IdU = value.IdU;
					}
					else
					{
						this._IdU = default(Nullable<int>);
					}
					this.SendPropertyChanged("UTILISATEUR");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TYPE_OPERATION_OPERATION_CONNAISSEMENT", Storage="_TYPE_OPERATION", ThisKey="IdTypeOp", OtherKey="IdTypeOp", IsForeignKey=true)]
		public TYPE_OPERATION TYPE_OPERATION
		{
			get
			{
				return this._TYPE_OPERATION.Entity;
			}
			set
			{
				TYPE_OPERATION previousValue = this._TYPE_OPERATION.Entity;
				if (((previousValue != value) 
							|| (this._TYPE_OPERATION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TYPE_OPERATION.Entity = null;
						previousValue.OPERATION_CONNAISSEMENT = null;
					}
					this._TYPE_OPERATION.Entity = value;
					if ((value != null))
					{
						value.OPERATION_CONNAISSEMENT = this;
						this._IdTypeOp = value.IdTypeOp;
					}
					else
					{
						this._IdTypeOp = default(int);
					}
					this.SendPropertyChanged("TYPE_OPERATION");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TYPE_VISITE")]
	public partial class TYPE_VISITE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdTypeVisite;
		
		private string _LibTypeVisite;
		
		private EntitySet<DEMANDE_VISITE> _DEMANDE_VISITE;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdTypeVisiteChanging(int value);
    partial void OnIdTypeVisiteChanged();
    partial void OnLibTypeVisiteChanging(string value);
    partial void OnLibTypeVisiteChanged();
    #endregion
		
		public TYPE_VISITE()
		{
			this._DEMANDE_VISITE = new EntitySet<DEMANDE_VISITE>(new Action<DEMANDE_VISITE>(this.attach_DEMANDE_VISITE), new Action<DEMANDE_VISITE>(this.detach_DEMANDE_VISITE));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTypeVisite", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdTypeVisite
		{
			get
			{
				return this._IdTypeVisite;
			}
			set
			{
				if ((this._IdTypeVisite != value))
				{
					this.OnIdTypeVisiteChanging(value);
					this.SendPropertyChanging();
					this._IdTypeVisite = value;
					this.SendPropertyChanged("IdTypeVisite");
					this.OnIdTypeVisiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LibTypeVisite", DbType="NVarChar(100)")]
		public string LibTypeVisite
		{
			get
			{
				return this._LibTypeVisite;
			}
			set
			{
				if ((this._LibTypeVisite != value))
				{
					this.OnLibTypeVisiteChanging(value);
					this.SendPropertyChanging();
					this._LibTypeVisite = value;
					this.SendPropertyChanged("LibTypeVisite");
					this.OnLibTypeVisiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TYPE_VISITE_DEMANDE_VISITE", Storage="_DEMANDE_VISITE", ThisKey="IdTypeVisite", OtherKey="IdTypeVisite")]
		public EntitySet<DEMANDE_VISITE> DEMANDE_VISITE
		{
			get
			{
				return this._DEMANDE_VISITE;
			}
			set
			{
				this._DEMANDE_VISITE.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DEMANDE_VISITE(DEMANDE_VISITE entity)
		{
			this.SendPropertyChanging();
			entity.TYPE_VISITE = this;
		}
		
		private void detach_DEMANDE_VISITE(DEMANDE_VISITE entity)
		{
			this.SendPropertyChanging();
			entity.TYPE_VISITE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VISITE_VEHICULE")]
	public partial class VISITE_VEHICULE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdDV;
		
		private int _IdVeh;
		
		private EntityRef<DEMANDE_VISITE> _DEMANDE_VISITE;
		
		private EntityRef<VEHICULE> _VEHICULE;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdDVChanging(int value);
    partial void OnIdDVChanged();
    partial void OnIdVehChanging(int value);
    partial void OnIdVehChanged();
    #endregion
		
		public VISITE_VEHICULE()
		{
			this._DEMANDE_VISITE = default(EntityRef<DEMANDE_VISITE>);
			this._VEHICULE = default(EntityRef<VEHICULE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDV", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdDV
		{
			get
			{
				return this._IdDV;
			}
			set
			{
				if ((this._IdDV != value))
				{
					if (this._DEMANDE_VISITE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdDVChanging(value);
					this.SendPropertyChanging();
					this._IdDV = value;
					this.SendPropertyChanged("IdDV");
					this.OnIdDVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdVeh", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdVeh
		{
			get
			{
				return this._IdVeh;
			}
			set
			{
				if ((this._IdVeh != value))
				{
					if (this._VEHICULE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdVehChanging(value);
					this.SendPropertyChanging();
					this._IdVeh = value;
					this.SendPropertyChanged("IdVeh");
					this.OnIdVehChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DEMANDE_VISITE_VISITE_VEHICULE", Storage="_DEMANDE_VISITE", ThisKey="IdDV", OtherKey="IdDV", IsForeignKey=true)]
		public DEMANDE_VISITE DEMANDE_VISITE
		{
			get
			{
				return this._DEMANDE_VISITE.Entity;
			}
			set
			{
				DEMANDE_VISITE previousValue = this._DEMANDE_VISITE.Entity;
				if (((previousValue != value) 
							|| (this._DEMANDE_VISITE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DEMANDE_VISITE.Entity = null;
						previousValue.VISITE_VEHICULE = null;
					}
					this._DEMANDE_VISITE.Entity = value;
					if ((value != null))
					{
						value.VISITE_VEHICULE = this;
						this._IdDV = value.IdDV;
					}
					else
					{
						this._IdDV = default(int);
					}
					this.SendPropertyChanged("DEMANDE_VISITE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VEHICULE_VISITE_VEHICULE", Storage="_VEHICULE", ThisKey="IdVeh", OtherKey="IdVeh", IsForeignKey=true)]
		public VEHICULE VEHICULE
		{
			get
			{
				return this._VEHICULE.Entity;
			}
			set
			{
				VEHICULE previousValue = this._VEHICULE.Entity;
				if (((previousValue != value) 
							|| (this._VEHICULE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VEHICULE.Entity = null;
						previousValue.VISITE_VEHICULE = null;
					}
					this._VEHICULE.Entity = value;
					if ((value != null))
					{
						value.VISITE_VEHICULE = this;
						this._IdVeh = value.IdVeh;
					}
					else
					{
						this._IdVeh = default(int);
					}
					this.SendPropertyChanged("VEHICULE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DEMANDE_VISITE")]
	public partial class DEMANDE_VISITE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdDV;
		
		private System.Nullable<System.DateTime> _DateDV;
		
		private System.Nullable<System.DateTime> _DVDV;
		
		private string _AIDV;
		
		private string _AIVDV;
		
		private System.Nullable<int> _IdBL;
		
		private System.Nullable<int> _IdU;
		
		private System.Nullable<int> _IdUV;
		
		private System.Nullable<int> _IdVeh;
		
		private System.Nullable<int> _IdTypeVisite;
		
		private System.Nullable<System.DateTime> _DateBadge;
		
		private System.Nullable<System.DateTime> _DateDebut;
		
		private System.Nullable<System.DateTime> _DateFin;
		
		private EntityRef<VISITE_VEHICULE> _VISITE_VEHICULE;
		
		private EntitySet<NOTE> _NOTE;
		
		private EntityRef<TYPE_VISITE> _TYPE_VISITE;
		
		private EntityRef<UTILISATEUR> _UTILISATEUR;
		
		private EntityRef<CONNAISSEMENT> _CONNAISSEMENT;
		
		private EntityRef<VEHICULE> _VEHICULE;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdDVChanging(int value);
    partial void OnIdDVChanged();
    partial void OnDateDVChanging(System.Nullable<System.DateTime> value);
    partial void OnDateDVChanged();
    partial void OnDVDVChanging(System.Nullable<System.DateTime> value);
    partial void OnDVDVChanged();
    partial void OnAIDVChanging(string value);
    partial void OnAIDVChanged();
    partial void OnAIVDVChanging(string value);
    partial void OnAIVDVChanged();
    partial void OnIdBLChanging(System.Nullable<int> value);
    partial void OnIdBLChanged();
    partial void OnIdUChanging(System.Nullable<int> value);
    partial void OnIdUChanged();
    partial void OnIdUVChanging(System.Nullable<int> value);
    partial void OnIdUVChanged();
    partial void OnIdVehChanging(System.Nullable<int> value);
    partial void OnIdVehChanged();
    partial void OnIdTypeVisiteChanging(System.Nullable<int> value);
    partial void OnIdTypeVisiteChanged();
    partial void OnDateBadgeChanging(System.Nullable<System.DateTime> value);
    partial void OnDateBadgeChanged();
    partial void OnDateDebutChanging(System.Nullable<System.DateTime> value);
    partial void OnDateDebutChanged();
    partial void OnDateFinChanging(System.Nullable<System.DateTime> value);
    partial void OnDateFinChanged();
    #endregion
		
		public DEMANDE_VISITE()
		{
			this._VISITE_VEHICULE = default(EntityRef<VISITE_VEHICULE>);
			this._NOTE = new EntitySet<NOTE>(new Action<NOTE>(this.attach_NOTE), new Action<NOTE>(this.detach_NOTE));
			this._TYPE_VISITE = default(EntityRef<TYPE_VISITE>);
			this._UTILISATEUR = default(EntityRef<UTILISATEUR>);
			this._CONNAISSEMENT = default(EntityRef<CONNAISSEMENT>);
			this._VEHICULE = default(EntityRef<VEHICULE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDV", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdDV
		{
			get
			{
				return this._IdDV;
			}
			set
			{
				if ((this._IdDV != value))
				{
					this.OnIdDVChanging(value);
					this.SendPropertyChanging();
					this._IdDV = value;
					this.SendPropertyChanged("IdDV");
					this.OnIdDVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateDV", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateDV
		{
			get
			{
				return this._DateDV;
			}
			set
			{
				if ((this._DateDV != value))
				{
					this.OnDateDVChanging(value);
					this.SendPropertyChanging();
					this._DateDV = value;
					this.SendPropertyChanged("DateDV");
					this.OnDateDVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DVDV", DbType="DateTime")]
		public System.Nullable<System.DateTime> DVDV
		{
			get
			{
				return this._DVDV;
			}
			set
			{
				if ((this._DVDV != value))
				{
					this.OnDVDVChanging(value);
					this.SendPropertyChanging();
					this._DVDV = value;
					this.SendPropertyChanged("DVDV");
					this.OnDVDVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AIDV", DbType="NVarChar(255)")]
		public string AIDV
		{
			get
			{
				return this._AIDV;
			}
			set
			{
				if ((this._AIDV != value))
				{
					this.OnAIDVChanging(value);
					this.SendPropertyChanging();
					this._AIDV = value;
					this.SendPropertyChanged("AIDV");
					this.OnAIDVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AIVDV", DbType="NVarChar(255)")]
		public string AIVDV
		{
			get
			{
				return this._AIVDV;
			}
			set
			{
				if ((this._AIVDV != value))
				{
					this.OnAIVDVChanging(value);
					this.SendPropertyChanging();
					this._AIVDV = value;
					this.SendPropertyChanged("AIVDV");
					this.OnAIVDVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdBL", DbType="Int")]
		public System.Nullable<int> IdBL
		{
			get
			{
				return this._IdBL;
			}
			set
			{
				if ((this._IdBL != value))
				{
					if (this._CONNAISSEMENT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdBLChanging(value);
					this.SendPropertyChanging();
					this._IdBL = value;
					this.SendPropertyChanged("IdBL");
					this.OnIdBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdU", DbType="Int")]
		public System.Nullable<int> IdU
		{
			get
			{
				return this._IdU;
			}
			set
			{
				if ((this._IdU != value))
				{
					if (this._UTILISATEUR.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdUChanging(value);
					this.SendPropertyChanging();
					this._IdU = value;
					this.SendPropertyChanged("IdU");
					this.OnIdUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUV", DbType="Int")]
		public System.Nullable<int> IdUV
		{
			get
			{
				return this._IdUV;
			}
			set
			{
				if ((this._IdUV != value))
				{
					this.OnIdUVChanging(value);
					this.SendPropertyChanging();
					this._IdUV = value;
					this.SendPropertyChanged("IdUV");
					this.OnIdUVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdVeh", DbType="Int")]
		public System.Nullable<int> IdVeh
		{
			get
			{
				return this._IdVeh;
			}
			set
			{
				if ((this._IdVeh != value))
				{
					if (this._VEHICULE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdVehChanging(value);
					this.SendPropertyChanging();
					this._IdVeh = value;
					this.SendPropertyChanged("IdVeh");
					this.OnIdVehChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTypeVisite", DbType="Int")]
		public System.Nullable<int> IdTypeVisite
		{
			get
			{
				return this._IdTypeVisite;
			}
			set
			{
				if ((this._IdTypeVisite != value))
				{
					if (this._TYPE_VISITE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdTypeVisiteChanging(value);
					this.SendPropertyChanging();
					this._IdTypeVisite = value;
					this.SendPropertyChanged("IdTypeVisite");
					this.OnIdTypeVisiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateBadge", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateBadge
		{
			get
			{
				return this._DateBadge;
			}
			set
			{
				if ((this._DateBadge != value))
				{
					this.OnDateBadgeChanging(value);
					this.SendPropertyChanging();
					this._DateBadge = value;
					this.SendPropertyChanged("DateBadge");
					this.OnDateBadgeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateDebut", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateDebut
		{
			get
			{
				return this._DateDebut;
			}
			set
			{
				if ((this._DateDebut != value))
				{
					this.OnDateDebutChanging(value);
					this.SendPropertyChanging();
					this._DateDebut = value;
					this.SendPropertyChanged("DateDebut");
					this.OnDateDebutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateFin", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateFin
		{
			get
			{
				return this._DateFin;
			}
			set
			{
				if ((this._DateFin != value))
				{
					this.OnDateFinChanging(value);
					this.SendPropertyChanging();
					this._DateFin = value;
					this.SendPropertyChanged("DateFin");
					this.OnDateFinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DEMANDE_VISITE_VISITE_VEHICULE", Storage="_VISITE_VEHICULE", ThisKey="IdDV", OtherKey="IdDV", IsUnique=true, IsForeignKey=false)]
		public VISITE_VEHICULE VISITE_VEHICULE
		{
			get
			{
				return this._VISITE_VEHICULE.Entity;
			}
			set
			{
				VISITE_VEHICULE previousValue = this._VISITE_VEHICULE.Entity;
				if (((previousValue != value) 
							|| (this._VISITE_VEHICULE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VISITE_VEHICULE.Entity = null;
						previousValue.DEMANDE_VISITE = null;
					}
					this._VISITE_VEHICULE.Entity = value;
					if ((value != null))
					{
						value.DEMANDE_VISITE = this;
					}
					this.SendPropertyChanged("VISITE_VEHICULE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DEMANDE_VISITE_NOTE", Storage="_NOTE", ThisKey="IdDV", OtherKey="IdDV")]
		public EntitySet<NOTE> NOTE
		{
			get
			{
				return this._NOTE;
			}
			set
			{
				this._NOTE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TYPE_VISITE_DEMANDE_VISITE", Storage="_TYPE_VISITE", ThisKey="IdTypeVisite", OtherKey="IdTypeVisite", IsForeignKey=true)]
		public TYPE_VISITE TYPE_VISITE
		{
			get
			{
				return this._TYPE_VISITE.Entity;
			}
			set
			{
				TYPE_VISITE previousValue = this._TYPE_VISITE.Entity;
				if (((previousValue != value) 
							|| (this._TYPE_VISITE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TYPE_VISITE.Entity = null;
						previousValue.DEMANDE_VISITE.Remove(this);
					}
					this._TYPE_VISITE.Entity = value;
					if ((value != null))
					{
						value.DEMANDE_VISITE.Add(this);
						this._IdTypeVisite = value.IdTypeVisite;
					}
					else
					{
						this._IdTypeVisite = default(Nullable<int>);
					}
					this.SendPropertyChanged("TYPE_VISITE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UTILISATEUR_DEMANDE_VISITE", Storage="_UTILISATEUR", ThisKey="IdU", OtherKey="IdU", IsForeignKey=true)]
		public UTILISATEUR UTILISATEUR
		{
			get
			{
				return this._UTILISATEUR.Entity;
			}
			set
			{
				UTILISATEUR previousValue = this._UTILISATEUR.Entity;
				if (((previousValue != value) 
							|| (this._UTILISATEUR.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UTILISATEUR.Entity = null;
						previousValue.DEMANDE_VISITE.Remove(this);
					}
					this._UTILISATEUR.Entity = value;
					if ((value != null))
					{
						value.DEMANDE_VISITE.Add(this);
						this._IdU = value.IdU;
					}
					else
					{
						this._IdU = default(Nullable<int>);
					}
					this.SendPropertyChanged("UTILISATEUR");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONNAISSEMENT_DEMANDE_VISITE", Storage="_CONNAISSEMENT", ThisKey="IdBL", OtherKey="IdBL", IsForeignKey=true, DeleteRule="CASCADE")]
		public CONNAISSEMENT CONNAISSEMENT
		{
			get
			{
				return this._CONNAISSEMENT.Entity;
			}
			set
			{
				CONNAISSEMENT previousValue = this._CONNAISSEMENT.Entity;
				if (((previousValue != value) 
							|| (this._CONNAISSEMENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CONNAISSEMENT.Entity = null;
						previousValue.DEMANDE_VISITE.Remove(this);
					}
					this._CONNAISSEMENT.Entity = value;
					if ((value != null))
					{
						value.DEMANDE_VISITE.Add(this);
						this._IdBL = value.IdBL;
					}
					else
					{
						this._IdBL = default(Nullable<int>);
					}
					this.SendPropertyChanged("CONNAISSEMENT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VEHICULE_DEMANDE_VISITE", Storage="_VEHICULE", ThisKey="IdVeh", OtherKey="IdVeh", IsForeignKey=true, DeleteRule="CASCADE")]
		public VEHICULE VEHICULE
		{
			get
			{
				return this._VEHICULE.Entity;
			}
			set
			{
				VEHICULE previousValue = this._VEHICULE.Entity;
				if (((previousValue != value) 
							|| (this._VEHICULE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VEHICULE.Entity = null;
						previousValue.DEMANDE_VISITE.Remove(this);
					}
					this._VEHICULE.Entity = value;
					if ((value != null))
					{
						value.DEMANDE_VISITE.Add(this);
						this._IdVeh = value.IdVeh;
					}
					else
					{
						this._IdVeh = default(Nullable<int>);
					}
					this.SendPropertyChanged("VEHICULE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NOTE(NOTE entity)
		{
			this.SendPropertyChanging();
			entity.DEMANDE_VISITE = this;
		}
		
		private void detach_NOTE(NOTE entity)
		{
			this.SendPropertyChanging();
			entity.DEMANDE_VISITE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HIST_CONNAISSEMENT")]
	public partial class HIST_CONNAISSEMENT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdHistBL;
		
		private System.Nullable<int> _IdBL;
		
		private string _NumBL;
		
		private string _LPBL;
		
		private string _DPBL;
		
		private string _BLGN;
		
		private string _BLIL;
		
		private string _BLSocar;
		
		private string _BLFO;
		
		private string _BLLT;
		
		private string _CCBL;
		
		private System.Nullable<int> _CCBLMontant;
		
		private string _BlBloque;
		
		private string _BLER;
		
		private string _BLERNote;
		
		private string _ConsigneeBL;
		
		private string _AdresseBL;
		
		private string _NotifyBL;
		
		private string _StatutBL;
		
		private System.Nullable<int> _IdClient;
		
		private System.Nullable<int> _IdMan;
		
		private System.Nullable<int> _IdEsc;
		
		private string _EmailBL;
		
		private string _SensBL;
		
		private string _BLDette;
		
		private System.Nullable<int> _DetteMontant;
		
		private string _BLBloqueNote;
		
		private string _DestBL;
		
		private int _IdU;
		
		private string _NumSocar;
		
		private EntityRef<ESCALE> _ESCALE;
		
		private EntityRef<MANIFESTE> _MANIFESTE;
		
		private EntityRef<CLIENT> _CLIENT;
		
		private EntityRef<UTILISATEUR> _UTILISATEUR;
		
		private EntityRef<CONNAISSEMENT> _CONNAISSEMENT;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdHistBLChanging(int value);
    partial void OnIdHistBLChanged();
    partial void OnIdBLChanging(System.Nullable<int> value);
    partial void OnIdBLChanged();
    partial void OnNumBLChanging(string value);
    partial void OnNumBLChanged();
    partial void OnLPBLChanging(string value);
    partial void OnLPBLChanged();
    partial void OnDPBLChanging(string value);
    partial void OnDPBLChanged();
    partial void OnBLGNChanging(string value);
    partial void OnBLGNChanged();
    partial void OnBLILChanging(string value);
    partial void OnBLILChanged();
    partial void OnBLSocarChanging(string value);
    partial void OnBLSocarChanged();
    partial void OnBLFOChanging(string value);
    partial void OnBLFOChanged();
    partial void OnBLLTChanging(string value);
    partial void OnBLLTChanged();
    partial void OnCCBLChanging(string value);
    partial void OnCCBLChanged();
    partial void OnCCBLMontantChanging(System.Nullable<int> value);
    partial void OnCCBLMontantChanged();
    partial void OnBlBloqueChanging(string value);
    partial void OnBlBloqueChanged();
    partial void OnBLERChanging(string value);
    partial void OnBLERChanged();
    partial void OnBLERNoteChanging(string value);
    partial void OnBLERNoteChanged();
    partial void OnConsigneeBLChanging(string value);
    partial void OnConsigneeBLChanged();
    partial void OnAdresseBLChanging(string value);
    partial void OnAdresseBLChanged();
    partial void OnNotifyBLChanging(string value);
    partial void OnNotifyBLChanged();
    partial void OnStatutBLChanging(string value);
    partial void OnStatutBLChanged();
    partial void OnIdClientChanging(System.Nullable<int> value);
    partial void OnIdClientChanged();
    partial void OnIdManChanging(System.Nullable<int> value);
    partial void OnIdManChanged();
    partial void OnIdEscChanging(System.Nullable<int> value);
    partial void OnIdEscChanged();
    partial void OnEmailBLChanging(string value);
    partial void OnEmailBLChanged();
    partial void OnSensBLChanging(string value);
    partial void OnSensBLChanged();
    partial void OnBLDetteChanging(string value);
    partial void OnBLDetteChanged();
    partial void OnDetteMontantChanging(System.Nullable<int> value);
    partial void OnDetteMontantChanged();
    partial void OnBLBloqueNoteChanging(string value);
    partial void OnBLBloqueNoteChanged();
    partial void OnDestBLChanging(string value);
    partial void OnDestBLChanged();
    partial void OnIdUChanging(int value);
    partial void OnIdUChanged();
    partial void OnNumSocarChanging(string value);
    partial void OnNumSocarChanged();
    #endregion
		
		public HIST_CONNAISSEMENT()
		{
			this._ESCALE = default(EntityRef<ESCALE>);
			this._MANIFESTE = default(EntityRef<MANIFESTE>);
			this._CLIENT = default(EntityRef<CLIENT>);
			this._UTILISATEUR = default(EntityRef<UTILISATEUR>);
			this._CONNAISSEMENT = default(EntityRef<CONNAISSEMENT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdHistBL", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdHistBL
		{
			get
			{
				return this._IdHistBL;
			}
			set
			{
				if ((this._IdHistBL != value))
				{
					this.OnIdHistBLChanging(value);
					this.SendPropertyChanging();
					this._IdHistBL = value;
					this.SendPropertyChanged("IdHistBL");
					this.OnIdHistBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdBL", DbType="Int")]
		public System.Nullable<int> IdBL
		{
			get
			{
				return this._IdBL;
			}
			set
			{
				if ((this._IdBL != value))
				{
					if (this._CONNAISSEMENT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdBLChanging(value);
					this.SendPropertyChanging();
					this._IdBL = value;
					this.SendPropertyChanged("IdBL");
					this.OnIdBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumBL", DbType="NVarChar(20)")]
		public string NumBL
		{
			get
			{
				return this._NumBL;
			}
			set
			{
				if ((this._NumBL != value))
				{
					this.OnNumBLChanging(value);
					this.SendPropertyChanging();
					this._NumBL = value;
					this.SendPropertyChanged("NumBL");
					this.OnNumBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LPBL", DbType="NVarChar(20)")]
		public string LPBL
		{
			get
			{
				return this._LPBL;
			}
			set
			{
				if ((this._LPBL != value))
				{
					this.OnLPBLChanging(value);
					this.SendPropertyChanging();
					this._LPBL = value;
					this.SendPropertyChanged("LPBL");
					this.OnLPBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DPBL", DbType="NVarChar(20)")]
		public string DPBL
		{
			get
			{
				return this._DPBL;
			}
			set
			{
				if ((this._DPBL != value))
				{
					this.OnDPBLChanging(value);
					this.SendPropertyChanging();
					this._DPBL = value;
					this.SendPropertyChanged("DPBL");
					this.OnDPBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BLGN", DbType="NVarChar(1)")]
		public string BLGN
		{
			get
			{
				return this._BLGN;
			}
			set
			{
				if ((this._BLGN != value))
				{
					this.OnBLGNChanging(value);
					this.SendPropertyChanging();
					this._BLGN = value;
					this.SendPropertyChanged("BLGN");
					this.OnBLGNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BLIL", DbType="NVarChar(1)")]
		public string BLIL
		{
			get
			{
				return this._BLIL;
			}
			set
			{
				if ((this._BLIL != value))
				{
					this.OnBLILChanging(value);
					this.SendPropertyChanging();
					this._BLIL = value;
					this.SendPropertyChanged("BLIL");
					this.OnBLILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BLSocar", DbType="NVarChar(1)")]
		public string BLSocar
		{
			get
			{
				return this._BLSocar;
			}
			set
			{
				if ((this._BLSocar != value))
				{
					this.OnBLSocarChanging(value);
					this.SendPropertyChanging();
					this._BLSocar = value;
					this.SendPropertyChanged("BLSocar");
					this.OnBLSocarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BLFO", DbType="NVarChar(1)")]
		public string BLFO
		{
			get
			{
				return this._BLFO;
			}
			set
			{
				if ((this._BLFO != value))
				{
					this.OnBLFOChanging(value);
					this.SendPropertyChanging();
					this._BLFO = value;
					this.SendPropertyChanged("BLFO");
					this.OnBLFOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BLLT", DbType="NVarChar(1)")]
		public string BLLT
		{
			get
			{
				return this._BLLT;
			}
			set
			{
				if ((this._BLLT != value))
				{
					this.OnBLLTChanging(value);
					this.SendPropertyChanging();
					this._BLLT = value;
					this.SendPropertyChanged("BLLT");
					this.OnBLLTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCBL", DbType="NVarChar(1)")]
		public string CCBL
		{
			get
			{
				return this._CCBL;
			}
			set
			{
				if ((this._CCBL != value))
				{
					this.OnCCBLChanging(value);
					this.SendPropertyChanging();
					this._CCBL = value;
					this.SendPropertyChanged("CCBL");
					this.OnCCBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCBLMontant", DbType="Int")]
		public System.Nullable<int> CCBLMontant
		{
			get
			{
				return this._CCBLMontant;
			}
			set
			{
				if ((this._CCBLMontant != value))
				{
					this.OnCCBLMontantChanging(value);
					this.SendPropertyChanging();
					this._CCBLMontant = value;
					this.SendPropertyChanged("CCBLMontant");
					this.OnCCBLMontantChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlBloque", DbType="NVarChar(1)")]
		public string BlBloque
		{
			get
			{
				return this._BlBloque;
			}
			set
			{
				if ((this._BlBloque != value))
				{
					this.OnBlBloqueChanging(value);
					this.SendPropertyChanging();
					this._BlBloque = value;
					this.SendPropertyChanged("BlBloque");
					this.OnBlBloqueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BLER", DbType="NVarChar(1)")]
		public string BLER
		{
			get
			{
				return this._BLER;
			}
			set
			{
				if ((this._BLER != value))
				{
					this.OnBLERChanging(value);
					this.SendPropertyChanging();
					this._BLER = value;
					this.SendPropertyChanged("BLER");
					this.OnBLERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BLERNote", DbType="NVarChar(255)")]
		public string BLERNote
		{
			get
			{
				return this._BLERNote;
			}
			set
			{
				if ((this._BLERNote != value))
				{
					this.OnBLERNoteChanging(value);
					this.SendPropertyChanging();
					this._BLERNote = value;
					this.SendPropertyChanged("BLERNote");
					this.OnBLERNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsigneeBL", DbType="NVarChar(255)")]
		public string ConsigneeBL
		{
			get
			{
				return this._ConsigneeBL;
			}
			set
			{
				if ((this._ConsigneeBL != value))
				{
					this.OnConsigneeBLChanging(value);
					this.SendPropertyChanging();
					this._ConsigneeBL = value;
					this.SendPropertyChanged("ConsigneeBL");
					this.OnConsigneeBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdresseBL", DbType="NVarChar(255)")]
		public string AdresseBL
		{
			get
			{
				return this._AdresseBL;
			}
			set
			{
				if ((this._AdresseBL != value))
				{
					this.OnAdresseBLChanging(value);
					this.SendPropertyChanging();
					this._AdresseBL = value;
					this.SendPropertyChanged("AdresseBL");
					this.OnAdresseBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotifyBL", DbType="NVarChar(255)")]
		public string NotifyBL
		{
			get
			{
				return this._NotifyBL;
			}
			set
			{
				if ((this._NotifyBL != value))
				{
					this.OnNotifyBLChanging(value);
					this.SendPropertyChanging();
					this._NotifyBL = value;
					this.SendPropertyChanged("NotifyBL");
					this.OnNotifyBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatutBL", DbType="NVarChar(15)")]
		public string StatutBL
		{
			get
			{
				return this._StatutBL;
			}
			set
			{
				if ((this._StatutBL != value))
				{
					this.OnStatutBLChanging(value);
					this.SendPropertyChanging();
					this._StatutBL = value;
					this.SendPropertyChanged("StatutBL");
					this.OnStatutBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdClient", DbType="Int")]
		public System.Nullable<int> IdClient
		{
			get
			{
				return this._IdClient;
			}
			set
			{
				if ((this._IdClient != value))
				{
					if (this._CLIENT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdClientChanging(value);
					this.SendPropertyChanging();
					this._IdClient = value;
					this.SendPropertyChanged("IdClient");
					this.OnIdClientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdMan", DbType="Int")]
		public System.Nullable<int> IdMan
		{
			get
			{
				return this._IdMan;
			}
			set
			{
				if ((this._IdMan != value))
				{
					if (this._MANIFESTE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdManChanging(value);
					this.SendPropertyChanging();
					this._IdMan = value;
					this.SendPropertyChanged("IdMan");
					this.OnIdManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEsc", DbType="Int")]
		public System.Nullable<int> IdEsc
		{
			get
			{
				return this._IdEsc;
			}
			set
			{
				if ((this._IdEsc != value))
				{
					if (this._ESCALE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdEscChanging(value);
					this.SendPropertyChanging();
					this._IdEsc = value;
					this.SendPropertyChanged("IdEsc");
					this.OnIdEscChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailBL", DbType="NVarChar(255)")]
		public string EmailBL
		{
			get
			{
				return this._EmailBL;
			}
			set
			{
				if ((this._EmailBL != value))
				{
					this.OnEmailBLChanging(value);
					this.SendPropertyChanging();
					this._EmailBL = value;
					this.SendPropertyChanged("EmailBL");
					this.OnEmailBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SensBL", DbType="NVarChar(1)")]
		public string SensBL
		{
			get
			{
				return this._SensBL;
			}
			set
			{
				if ((this._SensBL != value))
				{
					this.OnSensBLChanging(value);
					this.SendPropertyChanging();
					this._SensBL = value;
					this.SendPropertyChanged("SensBL");
					this.OnSensBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BLDette", DbType="NVarChar(1)")]
		public string BLDette
		{
			get
			{
				return this._BLDette;
			}
			set
			{
				if ((this._BLDette != value))
				{
					this.OnBLDetteChanging(value);
					this.SendPropertyChanging();
					this._BLDette = value;
					this.SendPropertyChanged("BLDette");
					this.OnBLDetteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetteMontant", DbType="Int")]
		public System.Nullable<int> DetteMontant
		{
			get
			{
				return this._DetteMontant;
			}
			set
			{
				if ((this._DetteMontant != value))
				{
					this.OnDetteMontantChanging(value);
					this.SendPropertyChanging();
					this._DetteMontant = value;
					this.SendPropertyChanged("DetteMontant");
					this.OnDetteMontantChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BLBloqueNote", DbType="NVarChar(255)")]
		public string BLBloqueNote
		{
			get
			{
				return this._BLBloqueNote;
			}
			set
			{
				if ((this._BLBloqueNote != value))
				{
					this.OnBLBloqueNoteChanging(value);
					this.SendPropertyChanging();
					this._BLBloqueNote = value;
					this.SendPropertyChanged("BLBloqueNote");
					this.OnBLBloqueNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DestBL", DbType="NVarChar(30)")]
		public string DestBL
		{
			get
			{
				return this._DestBL;
			}
			set
			{
				if ((this._DestBL != value))
				{
					this.OnDestBLChanging(value);
					this.SendPropertyChanging();
					this._DestBL = value;
					this.SendPropertyChanged("DestBL");
					this.OnDestBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdU", DbType="Int")]
		public int IdU
		{
			get
			{
				return this._IdU;
			}
			set
			{
				if ((this._IdU != value))
				{
					if (this._UTILISATEUR.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdUChanging(value);
					this.SendPropertyChanging();
					this._IdU = value;
					this.SendPropertyChanged("IdU");
					this.OnIdUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumSocar", DbType="NVarChar(10)")]
		public string NumSocar
		{
			get
			{
				return this._NumSocar;
			}
			set
			{
				if ((this._NumSocar != value))
				{
					this.OnNumSocarChanging(value);
					this.SendPropertyChanging();
					this._NumSocar = value;
					this.SendPropertyChanged("NumSocar");
					this.OnNumSocarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ESCALE_HIST_CONNAISSEMENT", Storage="_ESCALE", ThisKey="IdEsc", OtherKey="IdEsc", IsForeignKey=true)]
		public ESCALE ESCALE
		{
			get
			{
				return this._ESCALE.Entity;
			}
			set
			{
				ESCALE previousValue = this._ESCALE.Entity;
				if (((previousValue != value) 
							|| (this._ESCALE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ESCALE.Entity = null;
						previousValue.HIST_CONNAISSEMENT.Remove(this);
					}
					this._ESCALE.Entity = value;
					if ((value != null))
					{
						value.HIST_CONNAISSEMENT.Add(this);
						this._IdEsc = value.IdEsc;
					}
					else
					{
						this._IdEsc = default(Nullable<int>);
					}
					this.SendPropertyChanged("ESCALE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MANIFESTE_HIST_CONNAISSEMENT", Storage="_MANIFESTE", ThisKey="IdMan", OtherKey="IdMan", IsForeignKey=true)]
		public MANIFESTE MANIFESTE
		{
			get
			{
				return this._MANIFESTE.Entity;
			}
			set
			{
				MANIFESTE previousValue = this._MANIFESTE.Entity;
				if (((previousValue != value) 
							|| (this._MANIFESTE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MANIFESTE.Entity = null;
						previousValue.HIST_CONNAISSEMENT.Remove(this);
					}
					this._MANIFESTE.Entity = value;
					if ((value != null))
					{
						value.HIST_CONNAISSEMENT.Add(this);
						this._IdMan = value.IdMan;
					}
					else
					{
						this._IdMan = default(Nullable<int>);
					}
					this.SendPropertyChanged("MANIFESTE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CLIENT_HIST_CONNAISSEMENT", Storage="_CLIENT", ThisKey="IdClient", OtherKey="IdClient", IsForeignKey=true)]
		public CLIENT CLIENT
		{
			get
			{
				return this._CLIENT.Entity;
			}
			set
			{
				CLIENT previousValue = this._CLIENT.Entity;
				if (((previousValue != value) 
							|| (this._CLIENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CLIENT.Entity = null;
						previousValue.HIST_CONNAISSEMENT.Remove(this);
					}
					this._CLIENT.Entity = value;
					if ((value != null))
					{
						value.HIST_CONNAISSEMENT.Add(this);
						this._IdClient = value.IdClient;
					}
					else
					{
						this._IdClient = default(Nullable<int>);
					}
					this.SendPropertyChanged("CLIENT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UTILISATEUR_HIST_CONNAISSEMENT", Storage="_UTILISATEUR", ThisKey="IdU", OtherKey="IdU", IsForeignKey=true)]
		public UTILISATEUR UTILISATEUR
		{
			get
			{
				return this._UTILISATEUR.Entity;
			}
			set
			{
				UTILISATEUR previousValue = this._UTILISATEUR.Entity;
				if (((previousValue != value) 
							|| (this._UTILISATEUR.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UTILISATEUR.Entity = null;
						previousValue.HIST_CONNAISSEMENT.Remove(this);
					}
					this._UTILISATEUR.Entity = value;
					if ((value != null))
					{
						value.HIST_CONNAISSEMENT.Add(this);
						this._IdU = value.IdU;
					}
					else
					{
						this._IdU = default(int);
					}
					this.SendPropertyChanged("UTILISATEUR");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONNAISSEMENT_HIST_CONNAISSEMENT", Storage="_CONNAISSEMENT", ThisKey="IdBL", OtherKey="IdBL", IsForeignKey=true)]
		public CONNAISSEMENT CONNAISSEMENT
		{
			get
			{
				return this._CONNAISSEMENT.Entity;
			}
			set
			{
				CONNAISSEMENT previousValue = this._CONNAISSEMENT.Entity;
				if (((previousValue != value) 
							|| (this._CONNAISSEMENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CONNAISSEMENT.Entity = null;
						previousValue.HIST_CONNAISSEMENT.Remove(this);
					}
					this._CONNAISSEMENT.Entity = value;
					if ((value != null))
					{
						value.HIST_CONNAISSEMENT.Add(this);
						this._IdBL = value.IdBL;
					}
					else
					{
						this._IdBL = default(Nullable<int>);
					}
					this.SendPropertyChanged("CONNAISSEMENT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OPERATION_ESCALE")]
	public partial class OPERATION_ESCALE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdEsc;
		
		private int _IdTypeOp;
		
		private System.Nullable<System.DateTime> _DateOp;
		
		private string _AIOp;
		
		private System.Nullable<int> _IdU;
		
		private EntityRef<UTILISATEUR> _UTILISATEUR;
		
		private EntityRef<TYPE_OPERATION> _TYPE_OPERATION;
		
		private EntityRef<ESCALE> _ESCALE;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdEscChanging(int value);
    partial void OnIdEscChanged();
    partial void OnIdTypeOpChanging(int value);
    partial void OnIdTypeOpChanged();
    partial void OnDateOpChanging(System.Nullable<System.DateTime> value);
    partial void OnDateOpChanged();
    partial void OnAIOpChanging(string value);
    partial void OnAIOpChanged();
    partial void OnIdUChanging(System.Nullable<int> value);
    partial void OnIdUChanged();
    #endregion
		
		public OPERATION_ESCALE()
		{
			this._UTILISATEUR = default(EntityRef<UTILISATEUR>);
			this._TYPE_OPERATION = default(EntityRef<TYPE_OPERATION>);
			this._ESCALE = default(EntityRef<ESCALE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEsc", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdEsc
		{
			get
			{
				return this._IdEsc;
			}
			set
			{
				if ((this._IdEsc != value))
				{
					if (this._ESCALE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdEscChanging(value);
					this.SendPropertyChanging();
					this._IdEsc = value;
					this.SendPropertyChanged("IdEsc");
					this.OnIdEscChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTypeOp", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdTypeOp
		{
			get
			{
				return this._IdTypeOp;
			}
			set
			{
				if ((this._IdTypeOp != value))
				{
					if (this._TYPE_OPERATION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdTypeOpChanging(value);
					this.SendPropertyChanging();
					this._IdTypeOp = value;
					this.SendPropertyChanged("IdTypeOp");
					this.OnIdTypeOpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOp", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateOp
		{
			get
			{
				return this._DateOp;
			}
			set
			{
				if ((this._DateOp != value))
				{
					this.OnDateOpChanging(value);
					this.SendPropertyChanging();
					this._DateOp = value;
					this.SendPropertyChanged("DateOp");
					this.OnDateOpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AIOp", DbType="NVarChar(255)")]
		public string AIOp
		{
			get
			{
				return this._AIOp;
			}
			set
			{
				if ((this._AIOp != value))
				{
					this.OnAIOpChanging(value);
					this.SendPropertyChanging();
					this._AIOp = value;
					this.SendPropertyChanged("AIOp");
					this.OnAIOpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdU", DbType="Int")]
		public System.Nullable<int> IdU
		{
			get
			{
				return this._IdU;
			}
			set
			{
				if ((this._IdU != value))
				{
					if (this._UTILISATEUR.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdUChanging(value);
					this.SendPropertyChanging();
					this._IdU = value;
					this.SendPropertyChanged("IdU");
					this.OnIdUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UTILISATEUR_OPERATION_ESCALE", Storage="_UTILISATEUR", ThisKey="IdU", OtherKey="IdU", IsForeignKey=true)]
		public UTILISATEUR UTILISATEUR
		{
			get
			{
				return this._UTILISATEUR.Entity;
			}
			set
			{
				UTILISATEUR previousValue = this._UTILISATEUR.Entity;
				if (((previousValue != value) 
							|| (this._UTILISATEUR.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UTILISATEUR.Entity = null;
						previousValue.OPERATION_ESCALE.Remove(this);
					}
					this._UTILISATEUR.Entity = value;
					if ((value != null))
					{
						value.OPERATION_ESCALE.Add(this);
						this._IdU = value.IdU;
					}
					else
					{
						this._IdU = default(Nullable<int>);
					}
					this.SendPropertyChanged("UTILISATEUR");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TYPE_OPERATION_OPERATION_ESCALE", Storage="_TYPE_OPERATION", ThisKey="IdTypeOp", OtherKey="IdTypeOp", IsForeignKey=true)]
		public TYPE_OPERATION TYPE_OPERATION
		{
			get
			{
				return this._TYPE_OPERATION.Entity;
			}
			set
			{
				TYPE_OPERATION previousValue = this._TYPE_OPERATION.Entity;
				if (((previousValue != value) 
							|| (this._TYPE_OPERATION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TYPE_OPERATION.Entity = null;
						previousValue.OPERATION_ESCALE = null;
					}
					this._TYPE_OPERATION.Entity = value;
					if ((value != null))
					{
						value.OPERATION_ESCALE = this;
						this._IdTypeOp = value.IdTypeOp;
					}
					else
					{
						this._IdTypeOp = default(int);
					}
					this.SendPropertyChanged("TYPE_OPERATION");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ESCALE_OPERATION_ESCALE", Storage="_ESCALE", ThisKey="IdEsc", OtherKey="IdEsc", IsForeignKey=true)]
		public ESCALE ESCALE
		{
			get
			{
				return this._ESCALE.Entity;
			}
			set
			{
				ESCALE previousValue = this._ESCALE.Entity;
				if (((previousValue != value) 
							|| (this._ESCALE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ESCALE.Entity = null;
						previousValue.OPERATION_ESCALE = null;
					}
					this._ESCALE.Entity = value;
					if ((value != null))
					{
						value.OPERATION_ESCALE = this;
						this._IdEsc = value.IdEsc;
					}
					else
					{
						this._IdEsc = default(int);
					}
					this.SendPropertyChanged("ESCALE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OPERATION_MANIFESTE")]
	public partial class OPERATION_MANIFESTE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdMan;
		
		private int _IdTypeOp;
		
		private System.Nullable<System.DateTime> _DateOp;
		
		private string _AIOp;
		
		private System.Nullable<int> _IdU;
		
		private EntityRef<UTILISATEUR> _UTILISATEUR;
		
		private EntityRef<TYPE_OPERATION> _TYPE_OPERATION;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdManChanging(int value);
    partial void OnIdManChanged();
    partial void OnIdTypeOpChanging(int value);
    partial void OnIdTypeOpChanged();
    partial void OnDateOpChanging(System.Nullable<System.DateTime> value);
    partial void OnDateOpChanged();
    partial void OnAIOpChanging(string value);
    partial void OnAIOpChanged();
    partial void OnIdUChanging(System.Nullable<int> value);
    partial void OnIdUChanged();
    #endregion
		
		public OPERATION_MANIFESTE()
		{
			this._UTILISATEUR = default(EntityRef<UTILISATEUR>);
			this._TYPE_OPERATION = default(EntityRef<TYPE_OPERATION>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdMan", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdMan
		{
			get
			{
				return this._IdMan;
			}
			set
			{
				if ((this._IdMan != value))
				{
					this.OnIdManChanging(value);
					this.SendPropertyChanging();
					this._IdMan = value;
					this.SendPropertyChanged("IdMan");
					this.OnIdManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTypeOp", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdTypeOp
		{
			get
			{
				return this._IdTypeOp;
			}
			set
			{
				if ((this._IdTypeOp != value))
				{
					if (this._TYPE_OPERATION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdTypeOpChanging(value);
					this.SendPropertyChanging();
					this._IdTypeOp = value;
					this.SendPropertyChanged("IdTypeOp");
					this.OnIdTypeOpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOp", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateOp
		{
			get
			{
				return this._DateOp;
			}
			set
			{
				if ((this._DateOp != value))
				{
					this.OnDateOpChanging(value);
					this.SendPropertyChanging();
					this._DateOp = value;
					this.SendPropertyChanged("DateOp");
					this.OnDateOpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AIOp", DbType="NVarChar(255)")]
		public string AIOp
		{
			get
			{
				return this._AIOp;
			}
			set
			{
				if ((this._AIOp != value))
				{
					this.OnAIOpChanging(value);
					this.SendPropertyChanging();
					this._AIOp = value;
					this.SendPropertyChanged("AIOp");
					this.OnAIOpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdU", DbType="Int")]
		public System.Nullable<int> IdU
		{
			get
			{
				return this._IdU;
			}
			set
			{
				if ((this._IdU != value))
				{
					if (this._UTILISATEUR.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdUChanging(value);
					this.SendPropertyChanging();
					this._IdU = value;
					this.SendPropertyChanged("IdU");
					this.OnIdUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UTILISATEUR_OPERATION_MANIFESTE", Storage="_UTILISATEUR", ThisKey="IdU", OtherKey="IdU", IsForeignKey=true)]
		public UTILISATEUR UTILISATEUR
		{
			get
			{
				return this._UTILISATEUR.Entity;
			}
			set
			{
				UTILISATEUR previousValue = this._UTILISATEUR.Entity;
				if (((previousValue != value) 
							|| (this._UTILISATEUR.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UTILISATEUR.Entity = null;
						previousValue.OPERATION_MANIFESTE.Remove(this);
					}
					this._UTILISATEUR.Entity = value;
					if ((value != null))
					{
						value.OPERATION_MANIFESTE.Add(this);
						this._IdU = value.IdU;
					}
					else
					{
						this._IdU = default(Nullable<int>);
					}
					this.SendPropertyChanged("UTILISATEUR");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TYPE_OPERATION_OPERATION_MANIFESTE", Storage="_TYPE_OPERATION", ThisKey="IdTypeOp", OtherKey="IdTypeOp", IsForeignKey=true)]
		public TYPE_OPERATION TYPE_OPERATION
		{
			get
			{
				return this._TYPE_OPERATION.Entity;
			}
			set
			{
				TYPE_OPERATION previousValue = this._TYPE_OPERATION.Entity;
				if (((previousValue != value) 
							|| (this._TYPE_OPERATION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TYPE_OPERATION.Entity = null;
						previousValue.OPERATION_MANIFESTE = null;
					}
					this._TYPE_OPERATION.Entity = value;
					if ((value != null))
					{
						value.OPERATION_MANIFESTE = this;
						this._IdTypeOp = value.IdTypeOp;
					}
					else
					{
						this._IdTypeOp = default(int);
					}
					this.SendPropertyChanged("TYPE_OPERATION");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LIGNE_AVOIR")]
	public partial class LIGNE_AVOIR : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdFA;
		
		private int _IdJEF;
		
		private string _StatutLP;
		
		private System.Nullable<double> _PUEF;
		
		private System.Nullable<double> _QTEEF;
		
		private System.Nullable<float> _TauxTVA;
		
		private EntityRef<ELEMENT_FACTURATION> _ELEMENT_FACTURATION;
		
		private EntityRef<AVOIR> _AVOIR;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdFAChanging(int value);
    partial void OnIdFAChanged();
    partial void OnIdJEFChanging(int value);
    partial void OnIdJEFChanged();
    partial void OnStatutLPChanging(string value);
    partial void OnStatutLPChanged();
    partial void OnPUEFChanging(System.Nullable<double> value);
    partial void OnPUEFChanged();
    partial void OnQTEEFChanging(System.Nullable<double> value);
    partial void OnQTEEFChanged();
    partial void OnTauxTVAChanging(System.Nullable<float> value);
    partial void OnTauxTVAChanged();
    #endregion
		
		public LIGNE_AVOIR()
		{
			this._ELEMENT_FACTURATION = default(EntityRef<ELEMENT_FACTURATION>);
			this._AVOIR = default(EntityRef<AVOIR>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFA", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdFA
		{
			get
			{
				return this._IdFA;
			}
			set
			{
				if ((this._IdFA != value))
				{
					if (this._AVOIR.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdFAChanging(value);
					this.SendPropertyChanging();
					this._IdFA = value;
					this.SendPropertyChanged("IdFA");
					this.OnIdFAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdJEF", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdJEF
		{
			get
			{
				return this._IdJEF;
			}
			set
			{
				if ((this._IdJEF != value))
				{
					if (this._ELEMENT_FACTURATION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdJEFChanging(value);
					this.SendPropertyChanging();
					this._IdJEF = value;
					this.SendPropertyChanged("IdJEF");
					this.OnIdJEFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatutLP", DbType="NVarChar(1)")]
		public string StatutLP
		{
			get
			{
				return this._StatutLP;
			}
			set
			{
				if ((this._StatutLP != value))
				{
					this.OnStatutLPChanging(value);
					this.SendPropertyChanging();
					this._StatutLP = value;
					this.SendPropertyChanged("StatutLP");
					this.OnStatutLPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PUEF", DbType="Float")]
		public System.Nullable<double> PUEF
		{
			get
			{
				return this._PUEF;
			}
			set
			{
				if ((this._PUEF != value))
				{
					this.OnPUEFChanging(value);
					this.SendPropertyChanging();
					this._PUEF = value;
					this.SendPropertyChanged("PUEF");
					this.OnPUEFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTEEF", DbType="Float")]
		public System.Nullable<double> QTEEF
		{
			get
			{
				return this._QTEEF;
			}
			set
			{
				if ((this._QTEEF != value))
				{
					this.OnQTEEFChanging(value);
					this.SendPropertyChanging();
					this._QTEEF = value;
					this.SendPropertyChanged("QTEEF");
					this.OnQTEEFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TauxTVA", DbType="Real")]
		public System.Nullable<float> TauxTVA
		{
			get
			{
				return this._TauxTVA;
			}
			set
			{
				if ((this._TauxTVA != value))
				{
					this.OnTauxTVAChanging(value);
					this.SendPropertyChanging();
					this._TauxTVA = value;
					this.SendPropertyChanged("TauxTVA");
					this.OnTauxTVAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ELEMENT_FACTURATION_LIGNE_AVOIR", Storage="_ELEMENT_FACTURATION", ThisKey="IdJEF", OtherKey="IdJEF", IsForeignKey=true)]
		public ELEMENT_FACTURATION ELEMENT_FACTURATION
		{
			get
			{
				return this._ELEMENT_FACTURATION.Entity;
			}
			set
			{
				ELEMENT_FACTURATION previousValue = this._ELEMENT_FACTURATION.Entity;
				if (((previousValue != value) 
							|| (this._ELEMENT_FACTURATION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ELEMENT_FACTURATION.Entity = null;
						previousValue.LIGNE_AVOIR.Remove(this);
					}
					this._ELEMENT_FACTURATION.Entity = value;
					if ((value != null))
					{
						value.LIGNE_AVOIR.Add(this);
						this._IdJEF = value.IdJEF;
					}
					else
					{
						this._IdJEF = default(int);
					}
					this.SendPropertyChanged("ELEMENT_FACTURATION");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AVOIR_LIGNE_AVOIR", Storage="_AVOIR", ThisKey="IdFA", OtherKey="IdFA", IsForeignKey=true)]
		public AVOIR AVOIR
		{
			get
			{
				return this._AVOIR.Entity;
			}
			set
			{
				AVOIR previousValue = this._AVOIR.Entity;
				if (((previousValue != value) 
							|| (this._AVOIR.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AVOIR.Entity = null;
						previousValue.LIGNE_AVOIR.Remove(this);
					}
					this._AVOIR.Entity = value;
					if ((value != null))
					{
						value.LIGNE_AVOIR.Add(this);
						this._IdFA = value.IdFA;
					}
					else
					{
						this._IdFA = default(int);
					}
					this.SendPropertyChanged("AVOIR");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CUBAGE_VEHICULE")]
	public partial class CUBAGE_VEHICULE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdCubage;
		
		private int _IdVeh;
		
		private System.Nullable<float> _LongAVeh;
		
		private System.Nullable<float> _LargAVeh;
		
		private System.Nullable<float> _HautAVeh;
		
		private System.Nullable<float> _VolAVeh;
		
		private System.Nullable<float> _LongCVeh;
		
		private System.Nullable<float> _LargCVeh;
		
		private System.Nullable<float> _HautCVeh;
		
		private System.Nullable<float> _VolCVeh;
		
		private string _TypeCVeh;
		
		private System.Nullable<System.DateTime> _DateCV;
		
		private string _AICB;
		
		private System.Nullable<System.DateTime> _DateVal;
		
		private EntityRef<CUBAGE> _CUBAGE;
		
		private EntityRef<VEHICULE> _VEHICULE;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdCubageChanging(int value);
    partial void OnIdCubageChanged();
    partial void OnIdVehChanging(int value);
    partial void OnIdVehChanged();
    partial void OnLongAVehChanging(System.Nullable<float> value);
    partial void OnLongAVehChanged();
    partial void OnLargAVehChanging(System.Nullable<float> value);
    partial void OnLargAVehChanged();
    partial void OnHautAVehChanging(System.Nullable<float> value);
    partial void OnHautAVehChanged();
    partial void OnVolAVehChanging(System.Nullable<float> value);
    partial void OnVolAVehChanged();
    partial void OnLongCVehChanging(System.Nullable<float> value);
    partial void OnLongCVehChanged();
    partial void OnLargCVehChanging(System.Nullable<float> value);
    partial void OnLargCVehChanged();
    partial void OnHautCVehChanging(System.Nullable<float> value);
    partial void OnHautCVehChanged();
    partial void OnVolCVehChanging(System.Nullable<float> value);
    partial void OnVolCVehChanged();
    partial void OnTypeCVehChanging(string value);
    partial void OnTypeCVehChanged();
    partial void OnDateCVChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCVChanged();
    partial void OnAICBChanging(string value);
    partial void OnAICBChanged();
    partial void OnDateValChanging(System.Nullable<System.DateTime> value);
    partial void OnDateValChanged();
    #endregion
		
		public CUBAGE_VEHICULE()
		{
			this._CUBAGE = default(EntityRef<CUBAGE>);
			this._VEHICULE = default(EntityRef<VEHICULE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCubage", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdCubage
		{
			get
			{
				return this._IdCubage;
			}
			set
			{
				if ((this._IdCubage != value))
				{
					if (this._CUBAGE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdCubageChanging(value);
					this.SendPropertyChanging();
					this._IdCubage = value;
					this.SendPropertyChanged("IdCubage");
					this.OnIdCubageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdVeh", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdVeh
		{
			get
			{
				return this._IdVeh;
			}
			set
			{
				if ((this._IdVeh != value))
				{
					if (this._VEHICULE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdVehChanging(value);
					this.SendPropertyChanging();
					this._IdVeh = value;
					this.SendPropertyChanged("IdVeh");
					this.OnIdVehChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LongAVeh", DbType="Real")]
		public System.Nullable<float> LongAVeh
		{
			get
			{
				return this._LongAVeh;
			}
			set
			{
				if ((this._LongAVeh != value))
				{
					this.OnLongAVehChanging(value);
					this.SendPropertyChanging();
					this._LongAVeh = value;
					this.SendPropertyChanged("LongAVeh");
					this.OnLongAVehChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LargAVeh", DbType="Real")]
		public System.Nullable<float> LargAVeh
		{
			get
			{
				return this._LargAVeh;
			}
			set
			{
				if ((this._LargAVeh != value))
				{
					this.OnLargAVehChanging(value);
					this.SendPropertyChanging();
					this._LargAVeh = value;
					this.SendPropertyChanged("LargAVeh");
					this.OnLargAVehChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HautAVeh", DbType="Real")]
		public System.Nullable<float> HautAVeh
		{
			get
			{
				return this._HautAVeh;
			}
			set
			{
				if ((this._HautAVeh != value))
				{
					this.OnHautAVehChanging(value);
					this.SendPropertyChanging();
					this._HautAVeh = value;
					this.SendPropertyChanged("HautAVeh");
					this.OnHautAVehChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VolAVeh", DbType="Real")]
		public System.Nullable<float> VolAVeh
		{
			get
			{
				return this._VolAVeh;
			}
			set
			{
				if ((this._VolAVeh != value))
				{
					this.OnVolAVehChanging(value);
					this.SendPropertyChanging();
					this._VolAVeh = value;
					this.SendPropertyChanged("VolAVeh");
					this.OnVolAVehChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LongCVeh", DbType="Real")]
		public System.Nullable<float> LongCVeh
		{
			get
			{
				return this._LongCVeh;
			}
			set
			{
				if ((this._LongCVeh != value))
				{
					this.OnLongCVehChanging(value);
					this.SendPropertyChanging();
					this._LongCVeh = value;
					this.SendPropertyChanged("LongCVeh");
					this.OnLongCVehChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LargCVeh", DbType="Real")]
		public System.Nullable<float> LargCVeh
		{
			get
			{
				return this._LargCVeh;
			}
			set
			{
				if ((this._LargCVeh != value))
				{
					this.OnLargCVehChanging(value);
					this.SendPropertyChanging();
					this._LargCVeh = value;
					this.SendPropertyChanged("LargCVeh");
					this.OnLargCVehChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HautCVeh", DbType="Real")]
		public System.Nullable<float> HautCVeh
		{
			get
			{
				return this._HautCVeh;
			}
			set
			{
				if ((this._HautCVeh != value))
				{
					this.OnHautCVehChanging(value);
					this.SendPropertyChanging();
					this._HautCVeh = value;
					this.SendPropertyChanged("HautCVeh");
					this.OnHautCVehChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VolCVeh", DbType="Real")]
		public System.Nullable<float> VolCVeh
		{
			get
			{
				return this._VolCVeh;
			}
			set
			{
				if ((this._VolCVeh != value))
				{
					this.OnVolCVehChanging(value);
					this.SendPropertyChanging();
					this._VolCVeh = value;
					this.SendPropertyChanged("VolCVeh");
					this.OnVolCVehChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeCVeh", DbType="NVarChar(1)")]
		public string TypeCVeh
		{
			get
			{
				return this._TypeCVeh;
			}
			set
			{
				if ((this._TypeCVeh != value))
				{
					this.OnTypeCVehChanging(value);
					this.SendPropertyChanging();
					this._TypeCVeh = value;
					this.SendPropertyChanged("TypeCVeh");
					this.OnTypeCVehChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCV", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCV
		{
			get
			{
				return this._DateCV;
			}
			set
			{
				if ((this._DateCV != value))
				{
					this.OnDateCVChanging(value);
					this.SendPropertyChanging();
					this._DateCV = value;
					this.SendPropertyChanged("DateCV");
					this.OnDateCVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AICB", DbType="NVarChar(255)")]
		public string AICB
		{
			get
			{
				return this._AICB;
			}
			set
			{
				if ((this._AICB != value))
				{
					this.OnAICBChanging(value);
					this.SendPropertyChanging();
					this._AICB = value;
					this.SendPropertyChanged("AICB");
					this.OnAICBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateVal", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateVal
		{
			get
			{
				return this._DateVal;
			}
			set
			{
				if ((this._DateVal != value))
				{
					this.OnDateValChanging(value);
					this.SendPropertyChanging();
					this._DateVal = value;
					this.SendPropertyChanged("DateVal");
					this.OnDateValChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CUBAGE_CUBAGE_VEHICULE", Storage="_CUBAGE", ThisKey="IdCubage", OtherKey="IdCubage", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CUBAGE CUBAGE
		{
			get
			{
				return this._CUBAGE.Entity;
			}
			set
			{
				CUBAGE previousValue = this._CUBAGE.Entity;
				if (((previousValue != value) 
							|| (this._CUBAGE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CUBAGE.Entity = null;
						previousValue.CUBAGE_VEHICULE.Remove(this);
					}
					this._CUBAGE.Entity = value;
					if ((value != null))
					{
						value.CUBAGE_VEHICULE.Add(this);
						this._IdCubage = value.IdCubage;
					}
					else
					{
						this._IdCubage = default(int);
					}
					this.SendPropertyChanged("CUBAGE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VEHICULE_CUBAGE_VEHICULE", Storage="_VEHICULE", ThisKey="IdVeh", OtherKey="IdVeh", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public VEHICULE VEHICULE
		{
			get
			{
				return this._VEHICULE.Entity;
			}
			set
			{
				VEHICULE previousValue = this._VEHICULE.Entity;
				if (((previousValue != value) 
							|| (this._VEHICULE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VEHICULE.Entity = null;
						previousValue.CUBAGE_VEHICULE.Remove(this);
					}
					this._VEHICULE.Entity = value;
					if ((value != null))
					{
						value.CUBAGE_VEHICULE.Add(this);
						this._IdVeh = value.IdVeh;
					}
					else
					{
						this._IdVeh = default(int);
					}
					this.SendPropertyChanged("VEHICULE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ELEMENT_FACTURATION")]
	public partial class ELEMENT_FACTURATION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdJEF;
		
		private System.Nullable<System.DateTime> _DateJEF;
		
		private string _EltFacture;
		
		private string _LibEF;
		
		private System.Nullable<int> _IdLP;
		
		private System.Nullable<double> _PUEF;
		
		private System.Nullable<double> _QTEEF;
		
		private string _UnitEF;
		
		private System.Nullable<double> _PTDIT;
		
		private System.Nullable<int> _IdEsc;
		
		private System.Nullable<int> _IdMan;
		
		private System.Nullable<int> _IdBL;
		
		private System.Nullable<int> _IdVeh;
		
		private System.Nullable<int> _IdCtr;
		
		private System.Nullable<int> _IdGC;
		
		private System.Nullable<int> _IdOS;
		
		private System.Nullable<int> _IdLS;
		
		private string _CodeTVA;
		
		private System.Nullable<float> _TauxTVA;
		
		private string _CCArticle;
		
		private string _CCCP;
		
		private System.Nullable<int> _IdFD;
		
		private System.Nullable<int> _IdDDR;
		
		private string _DestEF;
		
		private System.Nullable<System.DateTime> _DelaiEF;
		
		private string _StatutEF;
		
		private System.Nullable<int> _IdFactDIT;
		
		private System.Nullable<int> _IdFA;
		
		private System.Nullable<int> _IdMafi;
		
		private System.Nullable<double> _PUEFBase;
		
		private string _CodeArticle;
		
		private System.Nullable<int> _IdFSoc;
		
		private System.Nullable<int> _REF_IDJEF;
		
		private System.Nullable<int> _ID_QUOTATION;
		
		private System.Nullable<double> _JrVeh;
		
		private System.Nullable<int> _PoidsVeh;
		
		private EntitySet<LIGNE_PROFORMA> _LIGNE_PROFORMA;
		
		private EntitySet<LIGNE_AVOIR> _LIGNE_AVOIR;
		
		private EntityRef<LIGNE_FACTURE_ARMATEUR> _LIGNE_FACTURE_ARMATEUR;
		
		private EntitySet<LIGNE_FACTURE_SOCOMAR> _LIGNE_FACTURE_SOCOMAR;
		
		private EntityRef<LIGNE_SERVICE> _LIGNE_SERVICE;
		
		private EntityRef<CODE_TVA> _CODE_TVA;
		
		private EntityRef<CONNAISSEMENT> _CONNAISSEMENT;
		
		private EntityRef<VEHICULE> _VEHICULE;
		
		private EntityRef<CONTENEUR> _CONTENEUR;
		
		private EntityRef<CONVENTIONNEL> _CONVENTIONNEL;
		
		private EntityRef<LIGNE_PRIX> _LIGNE_PRIX;
		
		private EntityRef<ORDRE_SERVICE> _ORDRE_SERVICE;
		
		private EntityRef<ESCALE> _ESCALE;
		
		private EntityRef<MAFI> _MAFI;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdJEFChanging(int value);
    partial void OnIdJEFChanged();
    partial void OnDateJEFChanging(System.Nullable<System.DateTime> value);
    partial void OnDateJEFChanged();
    partial void OnEltFactureChanging(string value);
    partial void OnEltFactureChanged();
    partial void OnLibEFChanging(string value);
    partial void OnLibEFChanged();
    partial void OnIdLPChanging(System.Nullable<int> value);
    partial void OnIdLPChanged();
    partial void OnPUEFChanging(System.Nullable<double> value);
    partial void OnPUEFChanged();
    partial void OnQTEEFChanging(System.Nullable<double> value);
    partial void OnQTEEFChanged();
    partial void OnUnitEFChanging(string value);
    partial void OnUnitEFChanged();
    partial void OnPTDITChanging(System.Nullable<double> value);
    partial void OnPTDITChanged();
    partial void OnIdEscChanging(System.Nullable<int> value);
    partial void OnIdEscChanged();
    partial void OnIdManChanging(System.Nullable<int> value);
    partial void OnIdManChanged();
    partial void OnIdBLChanging(System.Nullable<int> value);
    partial void OnIdBLChanged();
    partial void OnIdVehChanging(System.Nullable<int> value);
    partial void OnIdVehChanged();
    partial void OnIdCtrChanging(System.Nullable<int> value);
    partial void OnIdCtrChanged();
    partial void OnIdGCChanging(System.Nullable<int> value);
    partial void OnIdGCChanged();
    partial void OnIdOSChanging(System.Nullable<int> value);
    partial void OnIdOSChanged();
    partial void OnIdLSChanging(System.Nullable<int> value);
    partial void OnIdLSChanged();
    partial void OnCodeTVAChanging(string value);
    partial void OnCodeTVAChanged();
    partial void OnTauxTVAChanging(System.Nullable<float> value);
    partial void OnTauxTVAChanged();
    partial void OnCCArticleChanging(string value);
    partial void OnCCArticleChanged();
    partial void OnCCCPChanging(string value);
    partial void OnCCCPChanged();
    partial void OnIdFDChanging(System.Nullable<int> value);
    partial void OnIdFDChanged();
    partial void OnIdDDRChanging(System.Nullable<int> value);
    partial void OnIdDDRChanged();
    partial void OnDestEFChanging(string value);
    partial void OnDestEFChanged();
    partial void OnDelaiEFChanging(System.Nullable<System.DateTime> value);
    partial void OnDelaiEFChanged();
    partial void OnStatutEFChanging(string value);
    partial void OnStatutEFChanged();
    partial void OnIdFactDITChanging(System.Nullable<int> value);
    partial void OnIdFactDITChanged();
    partial void OnIdFAChanging(System.Nullable<int> value);
    partial void OnIdFAChanged();
    partial void OnIdMafiChanging(System.Nullable<int> value);
    partial void OnIdMafiChanged();
    partial void OnPUEFBaseChanging(System.Nullable<double> value);
    partial void OnPUEFBaseChanged();
    partial void OnCodeArticleChanging(string value);
    partial void OnCodeArticleChanged();
    partial void OnIdFSocChanging(System.Nullable<int> value);
    partial void OnIdFSocChanged();
    partial void OnREF_IDJEFChanging(System.Nullable<int> value);
    partial void OnREF_IDJEFChanged();
    partial void OnID_QUOTATIONChanging(System.Nullable<int> value);
    partial void OnID_QUOTATIONChanged();
    partial void OnJrVehChanging(System.Nullable<double> value);
    partial void OnJrVehChanged();
    partial void OnPoidsVehChanging(System.Nullable<int> value);
    partial void OnPoidsVehChanged();
    #endregion
		
		public ELEMENT_FACTURATION()
		{
			this._LIGNE_PROFORMA = new EntitySet<LIGNE_PROFORMA>(new Action<LIGNE_PROFORMA>(this.attach_LIGNE_PROFORMA), new Action<LIGNE_PROFORMA>(this.detach_LIGNE_PROFORMA));
			this._LIGNE_AVOIR = new EntitySet<LIGNE_AVOIR>(new Action<LIGNE_AVOIR>(this.attach_LIGNE_AVOIR), new Action<LIGNE_AVOIR>(this.detach_LIGNE_AVOIR));
			this._LIGNE_FACTURE_ARMATEUR = default(EntityRef<LIGNE_FACTURE_ARMATEUR>);
			this._LIGNE_FACTURE_SOCOMAR = new EntitySet<LIGNE_FACTURE_SOCOMAR>(new Action<LIGNE_FACTURE_SOCOMAR>(this.attach_LIGNE_FACTURE_SOCOMAR), new Action<LIGNE_FACTURE_SOCOMAR>(this.detach_LIGNE_FACTURE_SOCOMAR));
			this._LIGNE_SERVICE = default(EntityRef<LIGNE_SERVICE>);
			this._CODE_TVA = default(EntityRef<CODE_TVA>);
			this._CONNAISSEMENT = default(EntityRef<CONNAISSEMENT>);
			this._VEHICULE = default(EntityRef<VEHICULE>);
			this._CONTENEUR = default(EntityRef<CONTENEUR>);
			this._CONVENTIONNEL = default(EntityRef<CONVENTIONNEL>);
			this._LIGNE_PRIX = default(EntityRef<LIGNE_PRIX>);
			this._ORDRE_SERVICE = default(EntityRef<ORDRE_SERVICE>);
			this._ESCALE = default(EntityRef<ESCALE>);
			this._MAFI = default(EntityRef<MAFI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdJEF", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdJEF
		{
			get
			{
				return this._IdJEF;
			}
			set
			{
				if ((this._IdJEF != value))
				{
					this.OnIdJEFChanging(value);
					this.SendPropertyChanging();
					this._IdJEF = value;
					this.SendPropertyChanged("IdJEF");
					this.OnIdJEFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateJEF", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateJEF
		{
			get
			{
				return this._DateJEF;
			}
			set
			{
				if ((this._DateJEF != value))
				{
					this.OnDateJEFChanging(value);
					this.SendPropertyChanging();
					this._DateJEF = value;
					this.SendPropertyChanged("DateJEF");
					this.OnDateJEFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EltFacture", DbType="NVarChar(5)")]
		public string EltFacture
		{
			get
			{
				return this._EltFacture;
			}
			set
			{
				if ((this._EltFacture != value))
				{
					this.OnEltFactureChanging(value);
					this.SendPropertyChanging();
					this._EltFacture = value;
					this.SendPropertyChanged("EltFacture");
					this.OnEltFactureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LibEF", DbType="NVarChar(150)")]
		public string LibEF
		{
			get
			{
				return this._LibEF;
			}
			set
			{
				if ((this._LibEF != value))
				{
					this.OnLibEFChanging(value);
					this.SendPropertyChanging();
					this._LibEF = value;
					this.SendPropertyChanged("LibEF");
					this.OnLibEFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdLP", DbType="Int")]
		public System.Nullable<int> IdLP
		{
			get
			{
				return this._IdLP;
			}
			set
			{
				if ((this._IdLP != value))
				{
					if (this._LIGNE_PRIX.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdLPChanging(value);
					this.SendPropertyChanging();
					this._IdLP = value;
					this.SendPropertyChanged("IdLP");
					this.OnIdLPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PUEF", DbType="Float")]
		public System.Nullable<double> PUEF
		{
			get
			{
				return this._PUEF;
			}
			set
			{
				if ((this._PUEF != value))
				{
					this.OnPUEFChanging(value);
					this.SendPropertyChanging();
					this._PUEF = value;
					this.SendPropertyChanged("PUEF");
					this.OnPUEFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTEEF", DbType="Float")]
		public System.Nullable<double> QTEEF
		{
			get
			{
				return this._QTEEF;
			}
			set
			{
				if ((this._QTEEF != value))
				{
					this.OnQTEEFChanging(value);
					this.SendPropertyChanging();
					this._QTEEF = value;
					this.SendPropertyChanged("QTEEF");
					this.OnQTEEFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitEF", DbType="NVarChar(20)")]
		public string UnitEF
		{
			get
			{
				return this._UnitEF;
			}
			set
			{
				if ((this._UnitEF != value))
				{
					this.OnUnitEFChanging(value);
					this.SendPropertyChanging();
					this._UnitEF = value;
					this.SendPropertyChanged("UnitEF");
					this.OnUnitEFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PTDIT", DbType="Float")]
		public System.Nullable<double> PTDIT
		{
			get
			{
				return this._PTDIT;
			}
			set
			{
				if ((this._PTDIT != value))
				{
					this.OnPTDITChanging(value);
					this.SendPropertyChanging();
					this._PTDIT = value;
					this.SendPropertyChanged("PTDIT");
					this.OnPTDITChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEsc", DbType="Int")]
		public System.Nullable<int> IdEsc
		{
			get
			{
				return this._IdEsc;
			}
			set
			{
				if ((this._IdEsc != value))
				{
					if (this._ESCALE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdEscChanging(value);
					this.SendPropertyChanging();
					this._IdEsc = value;
					this.SendPropertyChanged("IdEsc");
					this.OnIdEscChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdMan", DbType="Int")]
		public System.Nullable<int> IdMan
		{
			get
			{
				return this._IdMan;
			}
			set
			{
				if ((this._IdMan != value))
				{
					this.OnIdManChanging(value);
					this.SendPropertyChanging();
					this._IdMan = value;
					this.SendPropertyChanged("IdMan");
					this.OnIdManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdBL", DbType="Int")]
		public System.Nullable<int> IdBL
		{
			get
			{
				return this._IdBL;
			}
			set
			{
				if ((this._IdBL != value))
				{
					if (this._CONNAISSEMENT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdBLChanging(value);
					this.SendPropertyChanging();
					this._IdBL = value;
					this.SendPropertyChanged("IdBL");
					this.OnIdBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdVeh", DbType="Int")]
		public System.Nullable<int> IdVeh
		{
			get
			{
				return this._IdVeh;
			}
			set
			{
				if ((this._IdVeh != value))
				{
					if (this._VEHICULE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdVehChanging(value);
					this.SendPropertyChanging();
					this._IdVeh = value;
					this.SendPropertyChanged("IdVeh");
					this.OnIdVehChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCtr", DbType="Int")]
		public System.Nullable<int> IdCtr
		{
			get
			{
				return this._IdCtr;
			}
			set
			{
				if ((this._IdCtr != value))
				{
					if (this._CONTENEUR.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdCtrChanging(value);
					this.SendPropertyChanging();
					this._IdCtr = value;
					this.SendPropertyChanged("IdCtr");
					this.OnIdCtrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdGC", DbType="Int")]
		public System.Nullable<int> IdGC
		{
			get
			{
				return this._IdGC;
			}
			set
			{
				if ((this._IdGC != value))
				{
					if (this._CONVENTIONNEL.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdGCChanging(value);
					this.SendPropertyChanging();
					this._IdGC = value;
					this.SendPropertyChanged("IdGC");
					this.OnIdGCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdOS", DbType="Int")]
		public System.Nullable<int> IdOS
		{
			get
			{
				return this._IdOS;
			}
			set
			{
				if ((this._IdOS != value))
				{
					if (this._ORDRE_SERVICE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdOSChanging(value);
					this.SendPropertyChanging();
					this._IdOS = value;
					this.SendPropertyChanged("IdOS");
					this.OnIdOSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdLS", DbType="Int")]
		public System.Nullable<int> IdLS
		{
			get
			{
				return this._IdLS;
			}
			set
			{
				if ((this._IdLS != value))
				{
					if (this._LIGNE_SERVICE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdLSChanging(value);
					this.SendPropertyChanging();
					this._IdLS = value;
					this.SendPropertyChanged("IdLS");
					this.OnIdLSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeTVA", DbType="NVarChar(10)")]
		public string CodeTVA
		{
			get
			{
				return this._CodeTVA;
			}
			set
			{
				if ((this._CodeTVA != value))
				{
					if (this._CODE_TVA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodeTVAChanging(value);
					this.SendPropertyChanging();
					this._CodeTVA = value;
					this.SendPropertyChanged("CodeTVA");
					this.OnCodeTVAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TauxTVA", DbType="Real")]
		public System.Nullable<float> TauxTVA
		{
			get
			{
				return this._TauxTVA;
			}
			set
			{
				if ((this._TauxTVA != value))
				{
					this.OnTauxTVAChanging(value);
					this.SendPropertyChanging();
					this._TauxTVA = value;
					this.SendPropertyChanged("TauxTVA");
					this.OnTauxTVAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCArticle", DbType="NVarChar(20)")]
		public string CCArticle
		{
			get
			{
				return this._CCArticle;
			}
			set
			{
				if ((this._CCArticle != value))
				{
					this.OnCCArticleChanging(value);
					this.SendPropertyChanging();
					this._CCArticle = value;
					this.SendPropertyChanged("CCArticle");
					this.OnCCArticleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCCP", DbType="NVarChar(20)")]
		public string CCCP
		{
			get
			{
				return this._CCCP;
			}
			set
			{
				if ((this._CCCP != value))
				{
					this.OnCCCPChanging(value);
					this.SendPropertyChanging();
					this._CCCP = value;
					this.SendPropertyChanged("CCCP");
					this.OnCCCPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFD", DbType="Int")]
		public System.Nullable<int> IdFD
		{
			get
			{
				return this._IdFD;
			}
			set
			{
				if ((this._IdFD != value))
				{
					this.OnIdFDChanging(value);
					this.SendPropertyChanging();
					this._IdFD = value;
					this.SendPropertyChanged("IdFD");
					this.OnIdFDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDDR", DbType="Int")]
		public System.Nullable<int> IdDDR
		{
			get
			{
				return this._IdDDR;
			}
			set
			{
				if ((this._IdDDR != value))
				{
					this.OnIdDDRChanging(value);
					this.SendPropertyChanging();
					this._IdDDR = value;
					this.SendPropertyChanged("IdDDR");
					this.OnIdDDRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DestEF", DbType="NVarChar(1)")]
		public string DestEF
		{
			get
			{
				return this._DestEF;
			}
			set
			{
				if ((this._DestEF != value))
				{
					this.OnDestEFChanging(value);
					this.SendPropertyChanging();
					this._DestEF = value;
					this.SendPropertyChanged("DestEF");
					this.OnDestEFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelaiEF", DbType="DateTime")]
		public System.Nullable<System.DateTime> DelaiEF
		{
			get
			{
				return this._DelaiEF;
			}
			set
			{
				if ((this._DelaiEF != value))
				{
					this.OnDelaiEFChanging(value);
					this.SendPropertyChanging();
					this._DelaiEF = value;
					this.SendPropertyChanged("DelaiEF");
					this.OnDelaiEFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatutEF", DbType="NVarChar(20)")]
		public string StatutEF
		{
			get
			{
				return this._StatutEF;
			}
			set
			{
				if ((this._StatutEF != value))
				{
					this.OnStatutEFChanging(value);
					this.SendPropertyChanging();
					this._StatutEF = value;
					this.SendPropertyChanged("StatutEF");
					this.OnStatutEFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFactDIT", DbType="Int")]
		public System.Nullable<int> IdFactDIT
		{
			get
			{
				return this._IdFactDIT;
			}
			set
			{
				if ((this._IdFactDIT != value))
				{
					this.OnIdFactDITChanging(value);
					this.SendPropertyChanging();
					this._IdFactDIT = value;
					this.SendPropertyChanged("IdFactDIT");
					this.OnIdFactDITChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFA", DbType="Int")]
		public System.Nullable<int> IdFA
		{
			get
			{
				return this._IdFA;
			}
			set
			{
				if ((this._IdFA != value))
				{
					this.OnIdFAChanging(value);
					this.SendPropertyChanging();
					this._IdFA = value;
					this.SendPropertyChanged("IdFA");
					this.OnIdFAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdMafi", DbType="Int")]
		public System.Nullable<int> IdMafi
		{
			get
			{
				return this._IdMafi;
			}
			set
			{
				if ((this._IdMafi != value))
				{
					if (this._MAFI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdMafiChanging(value);
					this.SendPropertyChanging();
					this._IdMafi = value;
					this.SendPropertyChanged("IdMafi");
					this.OnIdMafiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PUEFBase", DbType="Float")]
		public System.Nullable<double> PUEFBase
		{
			get
			{
				return this._PUEFBase;
			}
			set
			{
				if ((this._PUEFBase != value))
				{
					this.OnPUEFBaseChanging(value);
					this.SendPropertyChanging();
					this._PUEFBase = value;
					this.SendPropertyChanged("PUEFBase");
					this.OnPUEFBaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeArticle", DbType="varchar(10)")]
		public string CodeArticle
		{
			get
			{
				return this._CodeArticle;
			}
			set
			{
				if ((this._CodeArticle != value))
				{
					this.OnCodeArticleChanging(value);
					this.SendPropertyChanging();
					this._CodeArticle = value;
					this.SendPropertyChanged("CodeArticle");
					this.OnCodeArticleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFSoc", DbType="Int")]
		public System.Nullable<int> IdFSoc
		{
			get
			{
				return this._IdFSoc;
			}
			set
			{
				if ((this._IdFSoc != value))
				{
					this.OnIdFSocChanging(value);
					this.SendPropertyChanging();
					this._IdFSoc = value;
					this.SendPropertyChanged("IdFSoc");
					this.OnIdFSocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REF_IDJEF", DbType="INT")]
		public System.Nullable<int> REF_IDJEF
		{
			get
			{
				return this._REF_IDJEF;
			}
			set
			{
				if ((this._REF_IDJEF != value))
				{
					this.OnREF_IDJEFChanging(value);
					this.SendPropertyChanging();
					this._REF_IDJEF = value;
					this.SendPropertyChanged("REF_IDJEF");
					this.OnREF_IDJEFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_QUOTATION", DbType="int")]
		public System.Nullable<int> ID_QUOTATION
		{
			get
			{
				return this._ID_QUOTATION;
			}
			set
			{
				if ((this._ID_QUOTATION != value))
				{
					this.OnID_QUOTATIONChanging(value);
					this.SendPropertyChanging();
					this._ID_QUOTATION = value;
					this.SendPropertyChanged("ID_QUOTATION");
					this.OnID_QUOTATIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JrVeh", DbType="float")]
		public System.Nullable<double> JrVeh
		{
			get
			{
				return this._JrVeh;
			}
			set
			{
				if ((this._JrVeh != value))
				{
					this.OnJrVehChanging(value);
					this.SendPropertyChanging();
					this._JrVeh = value;
					this.SendPropertyChanged("JrVeh");
					this.OnJrVehChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PoidsVeh", DbType="int")]
		public System.Nullable<int> PoidsVeh
		{
			get
			{
				return this._PoidsVeh;
			}
			set
			{
				if ((this._PoidsVeh != value))
				{
					this.OnPoidsVehChanging(value);
					this.SendPropertyChanging();
					this._PoidsVeh = value;
					this.SendPropertyChanged("PoidsVeh");
					this.OnPoidsVehChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ELEMENT_FACTURATION_LIGNE_PROFORMA", Storage="_LIGNE_PROFORMA", ThisKey="IdJEF", OtherKey="IdJEF")]
		public EntitySet<LIGNE_PROFORMA> LIGNE_PROFORMA
		{
			get
			{
				return this._LIGNE_PROFORMA;
			}
			set
			{
				this._LIGNE_PROFORMA.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ELEMENT_FACTURATION_LIGNE_AVOIR", Storage="_LIGNE_AVOIR", ThisKey="IdJEF", OtherKey="IdJEF")]
		public EntitySet<LIGNE_AVOIR> LIGNE_AVOIR
		{
			get
			{
				return this._LIGNE_AVOIR;
			}
			set
			{
				this._LIGNE_AVOIR.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ELEMENT_FACTURATION_LIGNE_FACTURE_ARMATEUR", Storage="_LIGNE_FACTURE_ARMATEUR", ThisKey="IdJEF", OtherKey="IdJEF", IsUnique=true, IsForeignKey=false)]
		public LIGNE_FACTURE_ARMATEUR LIGNE_FACTURE_ARMATEUR
		{
			get
			{
				return this._LIGNE_FACTURE_ARMATEUR.Entity;
			}
			set
			{
				LIGNE_FACTURE_ARMATEUR previousValue = this._LIGNE_FACTURE_ARMATEUR.Entity;
				if (((previousValue != value) 
							|| (this._LIGNE_FACTURE_ARMATEUR.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LIGNE_FACTURE_ARMATEUR.Entity = null;
						previousValue.ELEMENT_FACTURATION = null;
					}
					this._LIGNE_FACTURE_ARMATEUR.Entity = value;
					if ((value != null))
					{
						value.ELEMENT_FACTURATION = this;
					}
					this.SendPropertyChanged("LIGNE_FACTURE_ARMATEUR");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ELEMENT_FACTURATION_LIGNE_FACTURE_SOCOMAR", Storage="_LIGNE_FACTURE_SOCOMAR", ThisKey="IdJEF", OtherKey="IdJEF")]
		public EntitySet<LIGNE_FACTURE_SOCOMAR> LIGNE_FACTURE_SOCOMAR
		{
			get
			{
				return this._LIGNE_FACTURE_SOCOMAR;
			}
			set
			{
				this._LIGNE_FACTURE_SOCOMAR.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LIGNE_SERVICE_ELEMENT_FACTURATION", Storage="_LIGNE_SERVICE", ThisKey="IdLS", OtherKey="IdLS", IsForeignKey=true, DeleteRule="CASCADE")]
		public LIGNE_SERVICE LIGNE_SERVICE
		{
			get
			{
				return this._LIGNE_SERVICE.Entity;
			}
			set
			{
				LIGNE_SERVICE previousValue = this._LIGNE_SERVICE.Entity;
				if (((previousValue != value) 
							|| (this._LIGNE_SERVICE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LIGNE_SERVICE.Entity = null;
						previousValue.ELEMENT_FACTURATION.Remove(this);
					}
					this._LIGNE_SERVICE.Entity = value;
					if ((value != null))
					{
						value.ELEMENT_FACTURATION.Add(this);
						this._IdLS = value.IdLS;
					}
					else
					{
						this._IdLS = default(Nullable<int>);
					}
					this.SendPropertyChanged("LIGNE_SERVICE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CODE_TVA_ELEMENT_FACTURATION", Storage="_CODE_TVA", ThisKey="CodeTVA", OtherKey="CodeTVA", IsForeignKey=true)]
		public CODE_TVA CODE_TVA
		{
			get
			{
				return this._CODE_TVA.Entity;
			}
			set
			{
				CODE_TVA previousValue = this._CODE_TVA.Entity;
				if (((previousValue != value) 
							|| (this._CODE_TVA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CODE_TVA.Entity = null;
						previousValue.ELEMENT_FACTURATION.Remove(this);
					}
					this._CODE_TVA.Entity = value;
					if ((value != null))
					{
						value.ELEMENT_FACTURATION.Add(this);
						this._CodeTVA = value.CodeTVA;
					}
					else
					{
						this._CodeTVA = default(string);
					}
					this.SendPropertyChanged("CODE_TVA");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONNAISSEMENT_ELEMENT_FACTURATION", Storage="_CONNAISSEMENT", ThisKey="IdBL", OtherKey="IdBL", IsForeignKey=true, DeleteRule="CASCADE")]
		public CONNAISSEMENT CONNAISSEMENT
		{
			get
			{
				return this._CONNAISSEMENT.Entity;
			}
			set
			{
				CONNAISSEMENT previousValue = this._CONNAISSEMENT.Entity;
				if (((previousValue != value) 
							|| (this._CONNAISSEMENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CONNAISSEMENT.Entity = null;
						previousValue.ELEMENT_FACTURATION.Remove(this);
					}
					this._CONNAISSEMENT.Entity = value;
					if ((value != null))
					{
						value.ELEMENT_FACTURATION.Add(this);
						this._IdBL = value.IdBL;
					}
					else
					{
						this._IdBL = default(Nullable<int>);
					}
					this.SendPropertyChanged("CONNAISSEMENT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VEHICULE_ELEMENT_FACTURATION", Storage="_VEHICULE", ThisKey="IdVeh", OtherKey="IdVeh", IsForeignKey=true)]
		public VEHICULE VEHICULE
		{
			get
			{
				return this._VEHICULE.Entity;
			}
			set
			{
				VEHICULE previousValue = this._VEHICULE.Entity;
				if (((previousValue != value) 
							|| (this._VEHICULE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VEHICULE.Entity = null;
						previousValue.ELEMENT_FACTURATION.Remove(this);
					}
					this._VEHICULE.Entity = value;
					if ((value != null))
					{
						value.ELEMENT_FACTURATION.Add(this);
						this._IdVeh = value.IdVeh;
					}
					else
					{
						this._IdVeh = default(Nullable<int>);
					}
					this.SendPropertyChanged("VEHICULE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONTENEUR_ELEMENT_FACTURATION", Storage="_CONTENEUR", ThisKey="IdCtr", OtherKey="IdCtr", IsForeignKey=true)]
		public CONTENEUR CONTENEUR
		{
			get
			{
				return this._CONTENEUR.Entity;
			}
			set
			{
				CONTENEUR previousValue = this._CONTENEUR.Entity;
				if (((previousValue != value) 
							|| (this._CONTENEUR.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CONTENEUR.Entity = null;
						previousValue.ELEMENT_FACTURATION.Remove(this);
					}
					this._CONTENEUR.Entity = value;
					if ((value != null))
					{
						value.ELEMENT_FACTURATION.Add(this);
						this._IdCtr = value.IdCtr;
					}
					else
					{
						this._IdCtr = default(Nullable<int>);
					}
					this.SendPropertyChanged("CONTENEUR");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONVENTIONNEL_ELEMENT_FACTURATION", Storage="_CONVENTIONNEL", ThisKey="IdGC", OtherKey="IdGC", IsForeignKey=true)]
		public CONVENTIONNEL CONVENTIONNEL
		{
			get
			{
				return this._CONVENTIONNEL.Entity;
			}
			set
			{
				CONVENTIONNEL previousValue = this._CONVENTIONNEL.Entity;
				if (((previousValue != value) 
							|| (this._CONVENTIONNEL.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CONVENTIONNEL.Entity = null;
						previousValue.ELEMENT_FACTURATION.Remove(this);
					}
					this._CONVENTIONNEL.Entity = value;
					if ((value != null))
					{
						value.ELEMENT_FACTURATION.Add(this);
						this._IdGC = value.IdGC;
					}
					else
					{
						this._IdGC = default(Nullable<int>);
					}
					this.SendPropertyChanged("CONVENTIONNEL");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LIGNE_PRIX_ELEMENT_FACTURATION", Storage="_LIGNE_PRIX", ThisKey="IdLP", OtherKey="IdLP", IsForeignKey=true)]
		public LIGNE_PRIX LIGNE_PRIX
		{
			get
			{
				return this._LIGNE_PRIX.Entity;
			}
			set
			{
				LIGNE_PRIX previousValue = this._LIGNE_PRIX.Entity;
				if (((previousValue != value) 
							|| (this._LIGNE_PRIX.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LIGNE_PRIX.Entity = null;
						previousValue.ELEMENT_FACTURATION.Remove(this);
					}
					this._LIGNE_PRIX.Entity = value;
					if ((value != null))
					{
						value.ELEMENT_FACTURATION.Add(this);
						this._IdLP = value.IdLP;
					}
					else
					{
						this._IdLP = default(Nullable<int>);
					}
					this.SendPropertyChanged("LIGNE_PRIX");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ORDRE_SERVICE_ELEMENT_FACTURATION", Storage="_ORDRE_SERVICE", ThisKey="IdOS", OtherKey="IdOS", IsForeignKey=true)]
		public ORDRE_SERVICE ORDRE_SERVICE
		{
			get
			{
				return this._ORDRE_SERVICE.Entity;
			}
			set
			{
				ORDRE_SERVICE previousValue = this._ORDRE_SERVICE.Entity;
				if (((previousValue != value) 
							|| (this._ORDRE_SERVICE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ORDRE_SERVICE.Entity = null;
						previousValue.ELEMENT_FACTURATION.Remove(this);
					}
					this._ORDRE_SERVICE.Entity = value;
					if ((value != null))
					{
						value.ELEMENT_FACTURATION.Add(this);
						this._IdOS = value.IdOS;
					}
					else
					{
						this._IdOS = default(Nullable<int>);
					}
					this.SendPropertyChanged("ORDRE_SERVICE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ESCALE_ELEMENT_FACTURATION", Storage="_ESCALE", ThisKey="IdEsc", OtherKey="IdEsc", IsForeignKey=true)]
		public ESCALE ESCALE
		{
			get
			{
				return this._ESCALE.Entity;
			}
			set
			{
				ESCALE previousValue = this._ESCALE.Entity;
				if (((previousValue != value) 
							|| (this._ESCALE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ESCALE.Entity = null;
						previousValue.ELEMENT_FACTURATION.Remove(this);
					}
					this._ESCALE.Entity = value;
					if ((value != null))
					{
						value.ELEMENT_FACTURATION.Add(this);
						this._IdEsc = value.IdEsc;
					}
					else
					{
						this._IdEsc = default(Nullable<int>);
					}
					this.SendPropertyChanged("ESCALE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MAFI_ELEMENT_FACTURATION", Storage="_MAFI", ThisKey="IdMafi", OtherKey="IdMafi", IsForeignKey=true)]
		public MAFI MAFI
		{
			get
			{
				return this._MAFI.Entity;
			}
			set
			{
				MAFI previousValue = this._MAFI.Entity;
				if (((previousValue != value) 
							|| (this._MAFI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MAFI.Entity = null;
						previousValue.ELEMENT_FACTURATION.Remove(this);
					}
					this._MAFI.Entity = value;
					if ((value != null))
					{
						value.ELEMENT_FACTURATION.Add(this);
						this._IdMafi = value.IdMafi;
					}
					else
					{
						this._IdMafi = default(Nullable<int>);
					}
					this.SendPropertyChanged("MAFI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LIGNE_PROFORMA(LIGNE_PROFORMA entity)
		{
			this.SendPropertyChanging();
			entity.ELEMENT_FACTURATION = this;
		}
		
		private void detach_LIGNE_PROFORMA(LIGNE_PROFORMA entity)
		{
			this.SendPropertyChanging();
			entity.ELEMENT_FACTURATION = null;
		}
		
		private void attach_LIGNE_AVOIR(LIGNE_AVOIR entity)
		{
			this.SendPropertyChanging();
			entity.ELEMENT_FACTURATION = this;
		}
		
		private void detach_LIGNE_AVOIR(LIGNE_AVOIR entity)
		{
			this.SendPropertyChanging();
			entity.ELEMENT_FACTURATION = null;
		}
		
		private void attach_LIGNE_FACTURE_SOCOMAR(LIGNE_FACTURE_SOCOMAR entity)
		{
			this.SendPropertyChanging();
			entity.ELEMENT_FACTURATION = this;
		}
		
		private void detach_LIGNE_FACTURE_SOCOMAR(LIGNE_FACTURE_SOCOMAR entity)
		{
			this.SendPropertyChanging();
			entity.ELEMENT_FACTURATION = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SINISTRE")]
	public partial class SINISTRE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdSinistre;
		
		private System.Nullable<System.DateTime> _DateSinistre;
		
		private string _DescSinistre;
		
		private System.Nullable<int> _IdTypeSinistre;
		
		private System.Nullable<int> _IdVeh;
		
		private System.Nullable<int> _IdCtr;
		
		private System.Nullable<int> _IdGC;
		
		private string _S;
		
		private string _Be;
		
		private string _R;
		
		private string _Br;
		
		private string _T;
		
		private string _M;
		
		private string _Ru;
		
		private string _Re;
		
		private string _D;
		
		private System.Nullable<int> _IdOpSinistre;
		
		private EntityRef<OPERATION_SINISTRE> _OPERATION_SINISTRE;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdSinistreChanging(int value);
    partial void OnIdSinistreChanged();
    partial void OnDateSinistreChanging(System.Nullable<System.DateTime> value);
    partial void OnDateSinistreChanged();
    partial void OnDescSinistreChanging(string value);
    partial void OnDescSinistreChanged();
    partial void OnIdTypeSinistreChanging(System.Nullable<int> value);
    partial void OnIdTypeSinistreChanged();
    partial void OnIdVehChanging(System.Nullable<int> value);
    partial void OnIdVehChanged();
    partial void OnIdCtrChanging(System.Nullable<int> value);
    partial void OnIdCtrChanged();
    partial void OnIdGCChanging(System.Nullable<int> value);
    partial void OnIdGCChanged();
    partial void OnSChanging(string value);
    partial void OnSChanged();
    partial void OnBeChanging(string value);
    partial void OnBeChanged();
    partial void OnRChanging(string value);
    partial void OnRChanged();
    partial void OnBrChanging(string value);
    partial void OnBrChanged();
    partial void OnTChanging(string value);
    partial void OnTChanged();
    partial void OnMChanging(string value);
    partial void OnMChanged();
    partial void OnRuChanging(string value);
    partial void OnRuChanged();
    partial void OnReChanging(string value);
    partial void OnReChanged();
    partial void OnDChanging(string value);
    partial void OnDChanged();
    partial void OnIdOpSinistreChanging(System.Nullable<int> value);
    partial void OnIdOpSinistreChanged();
    #endregion
		
		public SINISTRE()
		{
			this._OPERATION_SINISTRE = default(EntityRef<OPERATION_SINISTRE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdSinistre", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdSinistre
		{
			get
			{
				return this._IdSinistre;
			}
			set
			{
				if ((this._IdSinistre != value))
				{
					this.OnIdSinistreChanging(value);
					this.SendPropertyChanging();
					this._IdSinistre = value;
					this.SendPropertyChanged("IdSinistre");
					this.OnIdSinistreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateSinistre", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateSinistre
		{
			get
			{
				return this._DateSinistre;
			}
			set
			{
				if ((this._DateSinistre != value))
				{
					this.OnDateSinistreChanging(value);
					this.SendPropertyChanging();
					this._DateSinistre = value;
					this.SendPropertyChanged("DateSinistre");
					this.OnDateSinistreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescSinistre", DbType="NVarChar(255)")]
		public string DescSinistre
		{
			get
			{
				return this._DescSinistre;
			}
			set
			{
				if ((this._DescSinistre != value))
				{
					this.OnDescSinistreChanging(value);
					this.SendPropertyChanging();
					this._DescSinistre = value;
					this.SendPropertyChanged("DescSinistre");
					this.OnDescSinistreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTypeSinistre", DbType="Int")]
		public System.Nullable<int> IdTypeSinistre
		{
			get
			{
				return this._IdTypeSinistre;
			}
			set
			{
				if ((this._IdTypeSinistre != value))
				{
					this.OnIdTypeSinistreChanging(value);
					this.SendPropertyChanging();
					this._IdTypeSinistre = value;
					this.SendPropertyChanged("IdTypeSinistre");
					this.OnIdTypeSinistreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdVeh", DbType="Int")]
		public System.Nullable<int> IdVeh
		{
			get
			{
				return this._IdVeh;
			}
			set
			{
				if ((this._IdVeh != value))
				{
					this.OnIdVehChanging(value);
					this.SendPropertyChanging();
					this._IdVeh = value;
					this.SendPropertyChanged("IdVeh");
					this.OnIdVehChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCtr", DbType="Int")]
		public System.Nullable<int> IdCtr
		{
			get
			{
				return this._IdCtr;
			}
			set
			{
				if ((this._IdCtr != value))
				{
					this.OnIdCtrChanging(value);
					this.SendPropertyChanging();
					this._IdCtr = value;
					this.SendPropertyChanged("IdCtr");
					this.OnIdCtrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdGC", DbType="Int")]
		public System.Nullable<int> IdGC
		{
			get
			{
				return this._IdGC;
			}
			set
			{
				if ((this._IdGC != value))
				{
					this.OnIdGCChanging(value);
					this.SendPropertyChanging();
					this._IdGC = value;
					this.SendPropertyChanged("IdGC");
					this.OnIdGCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_S", DbType="NVarChar(1)")]
		public string S
		{
			get
			{
				return this._S;
			}
			set
			{
				if ((this._S != value))
				{
					this.OnSChanging(value);
					this.SendPropertyChanging();
					this._S = value;
					this.SendPropertyChanged("S");
					this.OnSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Be", DbType="NVarChar(1)")]
		public string Be
		{
			get
			{
				return this._Be;
			}
			set
			{
				if ((this._Be != value))
				{
					this.OnBeChanging(value);
					this.SendPropertyChanging();
					this._Be = value;
					this.SendPropertyChanged("Be");
					this.OnBeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_R", DbType="NVarChar(1)")]
		public string R
		{
			get
			{
				return this._R;
			}
			set
			{
				if ((this._R != value))
				{
					this.OnRChanging(value);
					this.SendPropertyChanging();
					this._R = value;
					this.SendPropertyChanged("R");
					this.OnRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Br", DbType="NVarChar(1)")]
		public string Br
		{
			get
			{
				return this._Br;
			}
			set
			{
				if ((this._Br != value))
				{
					this.OnBrChanging(value);
					this.SendPropertyChanging();
					this._Br = value;
					this.SendPropertyChanged("Br");
					this.OnBrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_T", DbType="NVarChar(1)")]
		public string T
		{
			get
			{
				return this._T;
			}
			set
			{
				if ((this._T != value))
				{
					this.OnTChanging(value);
					this.SendPropertyChanging();
					this._T = value;
					this.SendPropertyChanged("T");
					this.OnTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_M", DbType="NVarChar(1)")]
		public string M
		{
			get
			{
				return this._M;
			}
			set
			{
				if ((this._M != value))
				{
					this.OnMChanging(value);
					this.SendPropertyChanging();
					this._M = value;
					this.SendPropertyChanged("M");
					this.OnMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ru", DbType="NVarChar(1)")]
		public string Ru
		{
			get
			{
				return this._Ru;
			}
			set
			{
				if ((this._Ru != value))
				{
					this.OnRuChanging(value);
					this.SendPropertyChanging();
					this._Ru = value;
					this.SendPropertyChanged("Ru");
					this.OnRuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Re", DbType="NVarChar(1)")]
		public string Re
		{
			get
			{
				return this._Re;
			}
			set
			{
				if ((this._Re != value))
				{
					this.OnReChanging(value);
					this.SendPropertyChanging();
					this._Re = value;
					this.SendPropertyChanged("Re");
					this.OnReChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_D", DbType="NVarChar(1)")]
		public string D
		{
			get
			{
				return this._D;
			}
			set
			{
				if ((this._D != value))
				{
					this.OnDChanging(value);
					this.SendPropertyChanging();
					this._D = value;
					this.SendPropertyChanged("D");
					this.OnDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdOpSinistre", DbType="Int")]
		public System.Nullable<int> IdOpSinistre
		{
			get
			{
				return this._IdOpSinistre;
			}
			set
			{
				if ((this._IdOpSinistre != value))
				{
					if (this._OPERATION_SINISTRE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdOpSinistreChanging(value);
					this.SendPropertyChanging();
					this._IdOpSinistre = value;
					this.SendPropertyChanged("IdOpSinistre");
					this.OnIdOpSinistreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OPERATION_SINISTRE_SINISTRE", Storage="_OPERATION_SINISTRE", ThisKey="IdOpSinistre", OtherKey="IdOpSinistre", IsForeignKey=true)]
		public OPERATION_SINISTRE OPERATION_SINISTRE
		{
			get
			{
				return this._OPERATION_SINISTRE.Entity;
			}
			set
			{
				OPERATION_SINISTRE previousValue = this._OPERATION_SINISTRE.Entity;
				if (((previousValue != value) 
							|| (this._OPERATION_SINISTRE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OPERATION_SINISTRE.Entity = null;
						previousValue.SINISTRE.Remove(this);
					}
					this._OPERATION_SINISTRE.Entity = value;
					if ((value != null))
					{
						value.SINISTRE.Add(this);
						this._IdOpSinistre = value.IdOpSinistre;
					}
					else
					{
						this._IdOpSinistre = default(Nullable<int>);
					}
					this.SendPropertyChanged("OPERATION_SINISTRE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OPERATION_SINISTRE")]
	public partial class OPERATION_SINISTRE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdOpSinistre;
		
		private System.Nullable<System.DateTime> _DateSinistre;
		
		private string _AISinistre;
		
		private System.Nullable<int> _IdVeh;
		
		private System.Nullable<int> _IdU;
		
		private EntitySet<SINISTRE> _SINISTRE;
		
		private EntityRef<VEHICULE> _VEHICULE;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdOpSinistreChanging(int value);
    partial void OnIdOpSinistreChanged();
    partial void OnDateSinistreChanging(System.Nullable<System.DateTime> value);
    partial void OnDateSinistreChanged();
    partial void OnAISinistreChanging(string value);
    partial void OnAISinistreChanged();
    partial void OnIdVehChanging(System.Nullable<int> value);
    partial void OnIdVehChanged();
    partial void OnIdUChanging(System.Nullable<int> value);
    partial void OnIdUChanged();
    #endregion
		
		public OPERATION_SINISTRE()
		{
			this._SINISTRE = new EntitySet<SINISTRE>(new Action<SINISTRE>(this.attach_SINISTRE), new Action<SINISTRE>(this.detach_SINISTRE));
			this._VEHICULE = default(EntityRef<VEHICULE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdOpSinistre", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdOpSinistre
		{
			get
			{
				return this._IdOpSinistre;
			}
			set
			{
				if ((this._IdOpSinistre != value))
				{
					this.OnIdOpSinistreChanging(value);
					this.SendPropertyChanging();
					this._IdOpSinistre = value;
					this.SendPropertyChanged("IdOpSinistre");
					this.OnIdOpSinistreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateSinistre", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateSinistre
		{
			get
			{
				return this._DateSinistre;
			}
			set
			{
				if ((this._DateSinistre != value))
				{
					this.OnDateSinistreChanging(value);
					this.SendPropertyChanging();
					this._DateSinistre = value;
					this.SendPropertyChanged("DateSinistre");
					this.OnDateSinistreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AISinistre", DbType="NVarChar(255)")]
		public string AISinistre
		{
			get
			{
				return this._AISinistre;
			}
			set
			{
				if ((this._AISinistre != value))
				{
					this.OnAISinistreChanging(value);
					this.SendPropertyChanging();
					this._AISinistre = value;
					this.SendPropertyChanged("AISinistre");
					this.OnAISinistreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdVeh", DbType="Int")]
		public System.Nullable<int> IdVeh
		{
			get
			{
				return this._IdVeh;
			}
			set
			{
				if ((this._IdVeh != value))
				{
					if (this._VEHICULE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdVehChanging(value);
					this.SendPropertyChanging();
					this._IdVeh = value;
					this.SendPropertyChanged("IdVeh");
					this.OnIdVehChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdU", DbType="Int")]
		public System.Nullable<int> IdU
		{
			get
			{
				return this._IdU;
			}
			set
			{
				if ((this._IdU != value))
				{
					this.OnIdUChanging(value);
					this.SendPropertyChanging();
					this._IdU = value;
					this.SendPropertyChanged("IdU");
					this.OnIdUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OPERATION_SINISTRE_SINISTRE", Storage="_SINISTRE", ThisKey="IdOpSinistre", OtherKey="IdOpSinistre")]
		public EntitySet<SINISTRE> SINISTRE
		{
			get
			{
				return this._SINISTRE;
			}
			set
			{
				this._SINISTRE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VEHICULE_OPERATION_SINISTRE", Storage="_VEHICULE", ThisKey="IdVeh", OtherKey="IdVeh", IsForeignKey=true)]
		public VEHICULE VEHICULE
		{
			get
			{
				return this._VEHICULE.Entity;
			}
			set
			{
				VEHICULE previousValue = this._VEHICULE.Entity;
				if (((previousValue != value) 
							|| (this._VEHICULE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VEHICULE.Entity = null;
						previousValue.OPERATION_SINISTRE.Remove(this);
					}
					this._VEHICULE.Entity = value;
					if ((value != null))
					{
						value.OPERATION_SINISTRE.Add(this);
						this._IdVeh = value.IdVeh;
					}
					else
					{
						this._IdVeh = default(Nullable<int>);
					}
					this.SendPropertyChanged("VEHICULE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SINISTRE(SINISTRE entity)
		{
			this.SendPropertyChanging();
			entity.OPERATION_SINISTRE = this;
		}
		
		private void detach_SINISTRE(SINISTRE entity)
		{
			this.SendPropertyChanging();
			entity.OPERATION_SINISTRE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AVOIR")]
	public partial class AVOIR : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdFA;
		
		private System.Nullable<System.DateTime> _DCFA;
		
		private System.Nullable<System.DateTime> _DVFA;
		
		private string _AIFA;
		
		private string _AIVFA;
		
		private string _StatutFA;
		
		private System.Nullable<int> _MHT;
		
		private System.Nullable<int> _MTVA;
		
		private System.Nullable<int> _MTTC;
		
		private System.Nullable<int> _IdBL;
		
		private System.Nullable<int> _IdArm;
		
		private System.Nullable<int> _IdU;
		
		private System.Nullable<int> _IdUV;
		
		private System.Nullable<int> _IdClient;
		
		private System.Nullable<int> _IdFD;
		
		private System.Nullable<int> _IdDocSAP;
		
		private string _ClientAvoir;
		
		private string _TypeAvoir;
		
		private string _TypeFacture;
		
		private System.Nullable<int> _IdPay;
		
		private EntitySet<LIGNE_AVOIR> _LIGNE_AVOIR;
		
		private EntityRef<CLIENT> _CLIENT;
		
		private EntityRef<CONNAISSEMENT> _CONNAISSEMENT;
		
		private EntityRef<FACTURE> _FACTURE;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdFAChanging(int value);
    partial void OnIdFAChanged();
    partial void OnDCFAChanging(System.Nullable<System.DateTime> value);
    partial void OnDCFAChanged();
    partial void OnDVFAChanging(System.Nullable<System.DateTime> value);
    partial void OnDVFAChanged();
    partial void OnAIFAChanging(string value);
    partial void OnAIFAChanged();
    partial void OnAIVFAChanging(string value);
    partial void OnAIVFAChanged();
    partial void OnStatutFAChanging(string value);
    partial void OnStatutFAChanged();
    partial void OnMHTChanging(System.Nullable<int> value);
    partial void OnMHTChanged();
    partial void OnMTVAChanging(System.Nullable<int> value);
    partial void OnMTVAChanged();
    partial void OnMTTCChanging(System.Nullable<int> value);
    partial void OnMTTCChanged();
    partial void OnIdBLChanging(System.Nullable<int> value);
    partial void OnIdBLChanged();
    partial void OnIdArmChanging(System.Nullable<int> value);
    partial void OnIdArmChanged();
    partial void OnIdUChanging(System.Nullable<int> value);
    partial void OnIdUChanged();
    partial void OnIdUVChanging(System.Nullable<int> value);
    partial void OnIdUVChanged();
    partial void OnIdClientChanging(System.Nullable<int> value);
    partial void OnIdClientChanged();
    partial void OnIdFDChanging(System.Nullable<int> value);
    partial void OnIdFDChanged();
    partial void OnIdDocSAPChanging(System.Nullable<int> value);
    partial void OnIdDocSAPChanged();
    partial void OnClientAvoirChanging(string value);
    partial void OnClientAvoirChanged();
    partial void OnTypeAvoirChanging(string value);
    partial void OnTypeAvoirChanged();
    partial void OnTypeFactureChanging(string value);
    partial void OnTypeFactureChanged();
    partial void OnIdPayChanging(System.Nullable<int> value);
    partial void OnIdPayChanged();
    #endregion
		
		public AVOIR()
		{
			this._LIGNE_AVOIR = new EntitySet<LIGNE_AVOIR>(new Action<LIGNE_AVOIR>(this.attach_LIGNE_AVOIR), new Action<LIGNE_AVOIR>(this.detach_LIGNE_AVOIR));
			this._CLIENT = default(EntityRef<CLIENT>);
			this._CONNAISSEMENT = default(EntityRef<CONNAISSEMENT>);
			this._FACTURE = default(EntityRef<FACTURE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFA", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdFA
		{
			get
			{
				return this._IdFA;
			}
			set
			{
				if ((this._IdFA != value))
				{
					this.OnIdFAChanging(value);
					this.SendPropertyChanging();
					this._IdFA = value;
					this.SendPropertyChanged("IdFA");
					this.OnIdFAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DCFA", DbType="DateTime")]
		public System.Nullable<System.DateTime> DCFA
		{
			get
			{
				return this._DCFA;
			}
			set
			{
				if ((this._DCFA != value))
				{
					this.OnDCFAChanging(value);
					this.SendPropertyChanging();
					this._DCFA = value;
					this.SendPropertyChanged("DCFA");
					this.OnDCFAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DVFA", DbType="DateTime")]
		public System.Nullable<System.DateTime> DVFA
		{
			get
			{
				return this._DVFA;
			}
			set
			{
				if ((this._DVFA != value))
				{
					this.OnDVFAChanging(value);
					this.SendPropertyChanging();
					this._DVFA = value;
					this.SendPropertyChanged("DVFA");
					this.OnDVFAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AIFA", DbType="NVarChar(255)")]
		public string AIFA
		{
			get
			{
				return this._AIFA;
			}
			set
			{
				if ((this._AIFA != value))
				{
					this.OnAIFAChanging(value);
					this.SendPropertyChanging();
					this._AIFA = value;
					this.SendPropertyChanged("AIFA");
					this.OnAIFAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AIVFA", DbType="NVarChar(255)")]
		public string AIVFA
		{
			get
			{
				return this._AIVFA;
			}
			set
			{
				if ((this._AIVFA != value))
				{
					this.OnAIVFAChanging(value);
					this.SendPropertyChanging();
					this._AIVFA = value;
					this.SendPropertyChanged("AIVFA");
					this.OnAIVFAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatutFA", DbType="NVarChar(1)")]
		public string StatutFA
		{
			get
			{
				return this._StatutFA;
			}
			set
			{
				if ((this._StatutFA != value))
				{
					this.OnStatutFAChanging(value);
					this.SendPropertyChanging();
					this._StatutFA = value;
					this.SendPropertyChanged("StatutFA");
					this.OnStatutFAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MHT", DbType="Int")]
		public System.Nullable<int> MHT
		{
			get
			{
				return this._MHT;
			}
			set
			{
				if ((this._MHT != value))
				{
					this.OnMHTChanging(value);
					this.SendPropertyChanging();
					this._MHT = value;
					this.SendPropertyChanged("MHT");
					this.OnMHTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MTVA", DbType="Int")]
		public System.Nullable<int> MTVA
		{
			get
			{
				return this._MTVA;
			}
			set
			{
				if ((this._MTVA != value))
				{
					this.OnMTVAChanging(value);
					this.SendPropertyChanging();
					this._MTVA = value;
					this.SendPropertyChanged("MTVA");
					this.OnMTVAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MTTC", DbType="Int")]
		public System.Nullable<int> MTTC
		{
			get
			{
				return this._MTTC;
			}
			set
			{
				if ((this._MTTC != value))
				{
					this.OnMTTCChanging(value);
					this.SendPropertyChanging();
					this._MTTC = value;
					this.SendPropertyChanged("MTTC");
					this.OnMTTCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdBL", DbType="Int")]
		public System.Nullable<int> IdBL
		{
			get
			{
				return this._IdBL;
			}
			set
			{
				if ((this._IdBL != value))
				{
					if (this._CONNAISSEMENT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdBLChanging(value);
					this.SendPropertyChanging();
					this._IdBL = value;
					this.SendPropertyChanged("IdBL");
					this.OnIdBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdArm", DbType="Int")]
		public System.Nullable<int> IdArm
		{
			get
			{
				return this._IdArm;
			}
			set
			{
				if ((this._IdArm != value))
				{
					this.OnIdArmChanging(value);
					this.SendPropertyChanging();
					this._IdArm = value;
					this.SendPropertyChanged("IdArm");
					this.OnIdArmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdU", DbType="Int")]
		public System.Nullable<int> IdU
		{
			get
			{
				return this._IdU;
			}
			set
			{
				if ((this._IdU != value))
				{
					this.OnIdUChanging(value);
					this.SendPropertyChanging();
					this._IdU = value;
					this.SendPropertyChanged("IdU");
					this.OnIdUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUV", DbType="Int")]
		public System.Nullable<int> IdUV
		{
			get
			{
				return this._IdUV;
			}
			set
			{
				if ((this._IdUV != value))
				{
					this.OnIdUVChanging(value);
					this.SendPropertyChanging();
					this._IdUV = value;
					this.SendPropertyChanged("IdUV");
					this.OnIdUVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdClient", DbType="Int")]
		public System.Nullable<int> IdClient
		{
			get
			{
				return this._IdClient;
			}
			set
			{
				if ((this._IdClient != value))
				{
					if (this._CLIENT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdClientChanging(value);
					this.SendPropertyChanging();
					this._IdClient = value;
					this.SendPropertyChanged("IdClient");
					this.OnIdClientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFD", DbType="Int")]
		public System.Nullable<int> IdFD
		{
			get
			{
				return this._IdFD;
			}
			set
			{
				if ((this._IdFD != value))
				{
					if (this._FACTURE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdFDChanging(value);
					this.SendPropertyChanging();
					this._IdFD = value;
					this.SendPropertyChanged("IdFD");
					this.OnIdFDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDocSAP", DbType="Int")]
		public System.Nullable<int> IdDocSAP
		{
			get
			{
				return this._IdDocSAP;
			}
			set
			{
				if ((this._IdDocSAP != value))
				{
					this.OnIdDocSAPChanging(value);
					this.SendPropertyChanging();
					this._IdDocSAP = value;
					this.SendPropertyChanged("IdDocSAP");
					this.OnIdDocSAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientAvoir", DbType="NVarChar(50)")]
		public string ClientAvoir
		{
			get
			{
				return this._ClientAvoir;
			}
			set
			{
				if ((this._ClientAvoir != value))
				{
					this.OnClientAvoirChanging(value);
					this.SendPropertyChanging();
					this._ClientAvoir = value;
					this.SendPropertyChanged("ClientAvoir");
					this.OnClientAvoirChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeAvoir", DbType="NVarChar(50)")]
		public string TypeAvoir
		{
			get
			{
				return this._TypeAvoir;
			}
			set
			{
				if ((this._TypeAvoir != value))
				{
					this.OnTypeAvoirChanging(value);
					this.SendPropertyChanging();
					this._TypeAvoir = value;
					this.SendPropertyChanged("TypeAvoir");
					this.OnTypeAvoirChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeFacture", DbType="Varchar(10)")]
		public string TypeFacture
		{
			get
			{
				return this._TypeFacture;
			}
			set
			{
				if ((this._TypeFacture != value))
				{
					this.OnTypeFactureChanging(value);
					this.SendPropertyChanging();
					this._TypeFacture = value;
					this.SendPropertyChanged("TypeFacture");
					this.OnTypeFactureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPay", DbType="int")]
		public System.Nullable<int> IdPay
		{
			get
			{
				return this._IdPay;
			}
			set
			{
				if ((this._IdPay != value))
				{
					this.OnIdPayChanging(value);
					this.SendPropertyChanging();
					this._IdPay = value;
					this.SendPropertyChanged("IdPay");
					this.OnIdPayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AVOIR_LIGNE_AVOIR", Storage="_LIGNE_AVOIR", ThisKey="IdFA", OtherKey="IdFA")]
		public EntitySet<LIGNE_AVOIR> LIGNE_AVOIR
		{
			get
			{
				return this._LIGNE_AVOIR;
			}
			set
			{
				this._LIGNE_AVOIR.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CLIENT_AVOIR", Storage="_CLIENT", ThisKey="IdClient", OtherKey="IdClient", IsForeignKey=true)]
		public CLIENT CLIENT
		{
			get
			{
				return this._CLIENT.Entity;
			}
			set
			{
				CLIENT previousValue = this._CLIENT.Entity;
				if (((previousValue != value) 
							|| (this._CLIENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CLIENT.Entity = null;
						previousValue.AVOIR.Remove(this);
					}
					this._CLIENT.Entity = value;
					if ((value != null))
					{
						value.AVOIR.Add(this);
						this._IdClient = value.IdClient;
					}
					else
					{
						this._IdClient = default(Nullable<int>);
					}
					this.SendPropertyChanged("CLIENT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONNAISSEMENT_AVOIR", Storage="_CONNAISSEMENT", ThisKey="IdBL", OtherKey="IdBL", IsForeignKey=true)]
		public CONNAISSEMENT CONNAISSEMENT
		{
			get
			{
				return this._CONNAISSEMENT.Entity;
			}
			set
			{
				CONNAISSEMENT previousValue = this._CONNAISSEMENT.Entity;
				if (((previousValue != value) 
							|| (this._CONNAISSEMENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CONNAISSEMENT.Entity = null;
						previousValue.AVOIR.Remove(this);
					}
					this._CONNAISSEMENT.Entity = value;
					if ((value != null))
					{
						value.AVOIR.Add(this);
						this._IdBL = value.IdBL;
					}
					else
					{
						this._IdBL = default(Nullable<int>);
					}
					this.SendPropertyChanged("CONNAISSEMENT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FACTURE_AVOIR", Storage="_FACTURE", ThisKey="IdFD", OtherKey="IdFD", IsForeignKey=true)]
		public FACTURE FACTURE
		{
			get
			{
				return this._FACTURE.Entity;
			}
			set
			{
				FACTURE previousValue = this._FACTURE.Entity;
				if (((previousValue != value) 
							|| (this._FACTURE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FACTURE.Entity = null;
						previousValue.AVOIR.Remove(this);
					}
					this._FACTURE.Entity = value;
					if ((value != null))
					{
						value.AVOIR.Add(this);
						this._IdFD = value.IdFD;
					}
					else
					{
						this._IdFD = default(Nullable<int>);
					}
					this.SendPropertyChanged("FACTURE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LIGNE_AVOIR(LIGNE_AVOIR entity)
		{
			this.SendPropertyChanging();
			entity.AVOIR = this;
		}
		
		private void detach_LIGNE_AVOIR(LIGNE_AVOIR entity)
		{
			this.SendPropertyChanging();
			entity.AVOIR = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CONNAISSEMENT")]
	public partial class CONNAISSEMENT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdBL;
		
		private string _NumBL;
		
		private string _NumBooking;
		
		private System.Nullable<System.DateTime> _DCBL;
		
		private string _EtatBL;
		
		private string _LPBL;
		
		private string _DPBL;
		
		private string _LDBL;
		
		private string _BLGN;
		
		private string _BLIL;
		
		private string _BLSocar;
		
		private string _BLFO;
		
		private string _BLLT;
		
		private string _CCBL;
		
		private System.Nullable<int> _CCBLMontant;
		
		private string _LPFret;
		
		private string _BlBloque;
		
		private string _BLER;
		
		private string _BLERNote;
		
		private string _TypeBL;
		
		private string _DescBL;
		
		private string _ConsigneeBL;
		
		private string _AdresseBL;
		
		private string _ConsigneeBooking;
		
		private string _AdresseConsignee;
		
		private string _AdresseNotify;
		
		private string _EmailNotify;
		
		private string _TelNotify;
		
		private string _NotifyBL;
		
		private string _StatutBL;
		
		private System.Nullable<int> _IdClient;
		
		private System.Nullable<int> _IdMan;
		
		private System.Nullable<int> _IdEsc;
		
		private System.Nullable<int> _IdAcc;
		
		private string _CodeTVA;
		
		private string _NomManBL;
		
		private string _CNIManBL;
		
		private System.Nullable<System.DateTime> _DDCNIManBL;
		
		private string _LDCNIManBL;
		
		private string _PhoneManBL;
		
		private string _EmailBL;
		
		private string _NContribBL;
		
		private System.Nullable<System.DateTime> _DateAccBL;
		
		private string _AIBL;
		
		private string _SensBL;
		
		private System.Nullable<double> _PoidsBL;
		
		private System.Nullable<double> _VolBL;
		
		private string _NumCtrBL;
		
		private string _NumDEBL;
		
		private string _NumBESCBL;
		
		private string _NumHSCode;
		
		private System.Nullable<System.DateTime> _DCBLI;
		
		private System.Nullable<System.DateTime> _DVCBLI;
		
		private string _AIVCBLI;
		
		private System.Nullable<System.DateTime> _DCLBL;
		
		private string _AIDCLBL;
		
		private string _BLDette;
		
		private System.Nullable<int> _DetteMontant;
		
		private string _BLBloqueNote;
		
		private System.Nullable<System.DateTime> _DVBL;
		
		private string _AIBLVal;
		
		private string _DestBL;
		
		private System.Nullable<System.DateTime> _LastModif;
		
		private System.Nullable<int> _IdU;
		
		private string _NumSocar;
		
		private string _NomCharger;
		
		private string _AdresseCharger;
		
		private string _Payor;
		
		private string _ClearAgent;
		
		private string _NoSPEBC;
		
		private string _NotifyBL2;
		
		private string _AdresseNotify2;
		
		private string _EmailNotify2;
		
		private string _TelNotify2;
		
		private EntitySet<BON_ENLEVEMENT> _BON_ENLEVEMENT;
		
		private EntitySet<DEMANDE_CAUTION> _DEMANDE_CAUTION;
		
		private EntitySet<DEMANDE_LIVRAISON> _DEMANDE_LIVRAISON;
		
		private EntitySet<FACTURE_DIT> _FACTURE_DIT;
		
		private EntitySet<ORDRE_SERVICE> _ORDRE_SERVICE;
		
		private EntitySet<PAYEMENT> _PAYEMENT;
		
		private EntitySet<DEMANDE_REDUCTION> _DEMANDE_REDUCTION;
		
		private EntitySet<EXTENSION_FRANCHISE> _EXTENSION_FRANCHISE;
		
		private EntitySet<DEMANDE_VISITE> _DEMANDE_VISITE;
		
		private EntitySet<HIST_CONNAISSEMENT> _HIST_CONNAISSEMENT;
		
		private EntitySet<ELEMENT_FACTURATION> _ELEMENT_FACTURATION;
		
		private EntitySet<AVOIR> _AVOIR;
		
		private EntitySet<PROFORMA> _PROFORMA;
		
		private EntitySet<VEHICULE> _VEHICULE;
		
		private EntitySet<CONTENEUR> _CONTENEUR;
		
		private EntitySet<CONVENTIONNEL> _CONVENTIONNEL;
		
		private EntitySet<BON_SORTIE> _BON_SORTIE;
		
		private EntitySet<MAFI> _MAFI;
		
		private EntitySet<NOTE> _NOTE;
		
		private EntitySet<MOUVEMENT_TC> _MOUVEMENT_TC;
		
		private EntitySet<DISPOSITION_CONTENEUR> _DISPOSITION_CONTENEUR;
		
		private EntityRef<ESCALE> _ESCALE;
		
		private EntityRef<MANIFESTE> _MANIFESTE;
		
		private EntityRef<CODE_TVA> _CODE_TVA;
		
		private EntityRef<CLIENT> _CLIENT;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdBLChanging(int value);
    partial void OnIdBLChanged();
    partial void OnNumBLChanging(string value);
    partial void OnNumBLChanged();
    partial void OnNumBookingChanging(string value);
    partial void OnNumBookingChanged();
    partial void OnDCBLChanging(System.Nullable<System.DateTime> value);
    partial void OnDCBLChanged();
    partial void OnEtatBLChanging(string value);
    partial void OnEtatBLChanged();
    partial void OnLPBLChanging(string value);
    partial void OnLPBLChanged();
    partial void OnDPBLChanging(string value);
    partial void OnDPBLChanged();
    partial void OnLDBLChanging(string value);
    partial void OnLDBLChanged();
    partial void OnBLGNChanging(string value);
    partial void OnBLGNChanged();
    partial void OnBLILChanging(string value);
    partial void OnBLILChanged();
    partial void OnBLSocarChanging(string value);
    partial void OnBLSocarChanged();
    partial void OnBLFOChanging(string value);
    partial void OnBLFOChanged();
    partial void OnBLLTChanging(string value);
    partial void OnBLLTChanged();
    partial void OnCCBLChanging(string value);
    partial void OnCCBLChanged();
    partial void OnCCBLMontantChanging(System.Nullable<int> value);
    partial void OnCCBLMontantChanged();
    partial void OnLPFretChanging(string value);
    partial void OnLPFretChanged();
    partial void OnBlBloqueChanging(string value);
    partial void OnBlBloqueChanged();
    partial void OnBLERChanging(string value);
    partial void OnBLERChanged();
    partial void OnBLERNoteChanging(string value);
    partial void OnBLERNoteChanged();
    partial void OnTypeBLChanging(string value);
    partial void OnTypeBLChanged();
    partial void OnDescBLChanging(string value);
    partial void OnDescBLChanged();
    partial void OnConsigneeBLChanging(string value);
    partial void OnConsigneeBLChanged();
    partial void OnAdresseBLChanging(string value);
    partial void OnAdresseBLChanged();
    partial void OnConsigneeBookingChanging(string value);
    partial void OnConsigneeBookingChanged();
    partial void OnAdresseConsigneeChanging(string value);
    partial void OnAdresseConsigneeChanged();
    partial void OnAdresseNotifyChanging(string value);
    partial void OnAdresseNotifyChanged();
    partial void OnEmailNotifyChanging(string value);
    partial void OnEmailNotifyChanged();
    partial void OnTelNotifyChanging(string value);
    partial void OnTelNotifyChanged();
    partial void OnNotifyBLChanging(string value);
    partial void OnNotifyBLChanged();
    partial void OnStatutBLChanging(string value);
    partial void OnStatutBLChanged();
    partial void OnIdClientChanging(System.Nullable<int> value);
    partial void OnIdClientChanged();
    partial void OnIdManChanging(System.Nullable<int> value);
    partial void OnIdManChanged();
    partial void OnIdEscChanging(System.Nullable<int> value);
    partial void OnIdEscChanged();
    partial void OnIdAccChanging(System.Nullable<int> value);
    partial void OnIdAccChanged();
    partial void OnCodeTVAChanging(string value);
    partial void OnCodeTVAChanged();
    partial void OnNomManBLChanging(string value);
    partial void OnNomManBLChanged();
    partial void OnCNIManBLChanging(string value);
    partial void OnCNIManBLChanged();
    partial void OnDDCNIManBLChanging(System.Nullable<System.DateTime> value);
    partial void OnDDCNIManBLChanged();
    partial void OnLDCNIManBLChanging(string value);
    partial void OnLDCNIManBLChanged();
    partial void OnPhoneManBLChanging(string value);
    partial void OnPhoneManBLChanged();
    partial void OnEmailBLChanging(string value);
    partial void OnEmailBLChanged();
    partial void OnNContribBLChanging(string value);
    partial void OnNContribBLChanged();
    partial void OnDateAccBLChanging(System.Nullable<System.DateTime> value);
    partial void OnDateAccBLChanged();
    partial void OnAIBLChanging(string value);
    partial void OnAIBLChanged();
    partial void OnSensBLChanging(string value);
    partial void OnSensBLChanged();
    partial void OnPoidsBLChanging(System.Nullable<double> value);
    partial void OnPoidsBLChanged();
    partial void OnVolBLChanging(System.Nullable<double> value);
    partial void OnVolBLChanged();
    partial void OnNumCtrBLChanging(string value);
    partial void OnNumCtrBLChanged();
    partial void OnNumDEBLChanging(string value);
    partial void OnNumDEBLChanged();
    partial void OnNumBESCBLChanging(string value);
    partial void OnNumBESCBLChanged();
    partial void OnNumHSCodeChanging(string value);
    partial void OnNumHSCodeChanged();
    partial void OnDCBLIChanging(System.Nullable<System.DateTime> value);
    partial void OnDCBLIChanged();
    partial void OnDVCBLIChanging(System.Nullable<System.DateTime> value);
    partial void OnDVCBLIChanged();
    partial void OnAIVCBLIChanging(string value);
    partial void OnAIVCBLIChanged();
    partial void OnDCLBLChanging(System.Nullable<System.DateTime> value);
    partial void OnDCLBLChanged();
    partial void OnAIDCLBLChanging(string value);
    partial void OnAIDCLBLChanged();
    partial void OnBLDetteChanging(string value);
    partial void OnBLDetteChanged();
    partial void OnDetteMontantChanging(System.Nullable<int> value);
    partial void OnDetteMontantChanged();
    partial void OnBLBloqueNoteChanging(string value);
    partial void OnBLBloqueNoteChanged();
    partial void OnDVBLChanging(System.Nullable<System.DateTime> value);
    partial void OnDVBLChanged();
    partial void OnAIBLValChanging(string value);
    partial void OnAIBLValChanged();
    partial void OnDestBLChanging(string value);
    partial void OnDestBLChanged();
    partial void OnLastModifChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifChanged();
    partial void OnIdUChanging(System.Nullable<int> value);
    partial void OnIdUChanged();
    partial void OnNumSocarChanging(string value);
    partial void OnNumSocarChanged();
    partial void OnNomChargerChanging(string value);
    partial void OnNomChargerChanged();
    partial void OnAdresseChargerChanging(string value);
    partial void OnAdresseChargerChanged();
    partial void OnPayorChanging(string value);
    partial void OnPayorChanged();
    partial void OnClearAgentChanging(string value);
    partial void OnClearAgentChanged();
    partial void OnNoSEPBCChanging(string value);
    partial void OnNoSEPBCChanged();
    partial void OnNotifyBL2Changing(string value);
    partial void OnNotifyBL2Changed();
    partial void OnAdresseNotify2Changing(string value);
    partial void OnAdresseNotify2Changed();
    partial void OnEmailNotify2Changing(string value);
    partial void OnEmailNotify2Changed();
    partial void OnTelNotify2Changing(string value);
    partial void OnTelNotify2Changed();
    #endregion
		
		public CONNAISSEMENT()
		{
			this._BON_ENLEVEMENT = new EntitySet<BON_ENLEVEMENT>(new Action<BON_ENLEVEMENT>(this.attach_BON_ENLEVEMENT), new Action<BON_ENLEVEMENT>(this.detach_BON_ENLEVEMENT));
			this._DEMANDE_CAUTION = new EntitySet<DEMANDE_CAUTION>(new Action<DEMANDE_CAUTION>(this.attach_DEMANDE_CAUTION), new Action<DEMANDE_CAUTION>(this.detach_DEMANDE_CAUTION));
			this._DEMANDE_LIVRAISON = new EntitySet<DEMANDE_LIVRAISON>(new Action<DEMANDE_LIVRAISON>(this.attach_DEMANDE_LIVRAISON), new Action<DEMANDE_LIVRAISON>(this.detach_DEMANDE_LIVRAISON));
			this._FACTURE_DIT = new EntitySet<FACTURE_DIT>(new Action<FACTURE_DIT>(this.attach_FACTURE_DIT), new Action<FACTURE_DIT>(this.detach_FACTURE_DIT));
			this._ORDRE_SERVICE = new EntitySet<ORDRE_SERVICE>(new Action<ORDRE_SERVICE>(this.attach_ORDRE_SERVICE), new Action<ORDRE_SERVICE>(this.detach_ORDRE_SERVICE));
			this._PAYEMENT = new EntitySet<PAYEMENT>(new Action<PAYEMENT>(this.attach_PAYEMENT), new Action<PAYEMENT>(this.detach_PAYEMENT));
			this._DEMANDE_REDUCTION = new EntitySet<DEMANDE_REDUCTION>(new Action<DEMANDE_REDUCTION>(this.attach_DEMANDE_REDUCTION), new Action<DEMANDE_REDUCTION>(this.detach_DEMANDE_REDUCTION));
			this._EXTENSION_FRANCHISE = new EntitySet<EXTENSION_FRANCHISE>(new Action<EXTENSION_FRANCHISE>(this.attach_EXTENSION_FRANCHISE), new Action<EXTENSION_FRANCHISE>(this.detach_EXTENSION_FRANCHISE));
			this._DEMANDE_VISITE = new EntitySet<DEMANDE_VISITE>(new Action<DEMANDE_VISITE>(this.attach_DEMANDE_VISITE), new Action<DEMANDE_VISITE>(this.detach_DEMANDE_VISITE));
			this._HIST_CONNAISSEMENT = new EntitySet<HIST_CONNAISSEMENT>(new Action<HIST_CONNAISSEMENT>(this.attach_HIST_CONNAISSEMENT), new Action<HIST_CONNAISSEMENT>(this.detach_HIST_CONNAISSEMENT));
			this._ELEMENT_FACTURATION = new EntitySet<ELEMENT_FACTURATION>(new Action<ELEMENT_FACTURATION>(this.attach_ELEMENT_FACTURATION), new Action<ELEMENT_FACTURATION>(this.detach_ELEMENT_FACTURATION));
			this._AVOIR = new EntitySet<AVOIR>(new Action<AVOIR>(this.attach_AVOIR), new Action<AVOIR>(this.detach_AVOIR));
			this._PROFORMA = new EntitySet<PROFORMA>(new Action<PROFORMA>(this.attach_PROFORMA), new Action<PROFORMA>(this.detach_PROFORMA));
			this._VEHICULE = new EntitySet<VEHICULE>(new Action<VEHICULE>(this.attach_VEHICULE), new Action<VEHICULE>(this.detach_VEHICULE));
			this._CONTENEUR = new EntitySet<CONTENEUR>(new Action<CONTENEUR>(this.attach_CONTENEUR), new Action<CONTENEUR>(this.detach_CONTENEUR));
			this._CONVENTIONNEL = new EntitySet<CONVENTIONNEL>(new Action<CONVENTIONNEL>(this.attach_CONVENTIONNEL), new Action<CONVENTIONNEL>(this.detach_CONVENTIONNEL));
			this._BON_SORTIE = new EntitySet<BON_SORTIE>(new Action<BON_SORTIE>(this.attach_BON_SORTIE), new Action<BON_SORTIE>(this.detach_BON_SORTIE));
			this._MAFI = new EntitySet<MAFI>(new Action<MAFI>(this.attach_MAFI), new Action<MAFI>(this.detach_MAFI));
			this._NOTE = new EntitySet<NOTE>(new Action<NOTE>(this.attach_NOTE), new Action<NOTE>(this.detach_NOTE));
			this._MOUVEMENT_TC = new EntitySet<MOUVEMENT_TC>(new Action<MOUVEMENT_TC>(this.attach_MOUVEMENT_TC), new Action<MOUVEMENT_TC>(this.detach_MOUVEMENT_TC));
			this._DISPOSITION_CONTENEUR = new EntitySet<DISPOSITION_CONTENEUR>(new Action<DISPOSITION_CONTENEUR>(this.attach_DISPOSITION_CONTENEUR), new Action<DISPOSITION_CONTENEUR>(this.detach_DISPOSITION_CONTENEUR));
			this._ESCALE = default(EntityRef<ESCALE>);
			this._MANIFESTE = default(EntityRef<MANIFESTE>);
			this._CODE_TVA = default(EntityRef<CODE_TVA>);
			this._CLIENT = default(EntityRef<CLIENT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdBL", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdBL
		{
			get
			{
				return this._IdBL;
			}
			set
			{
				if ((this._IdBL != value))
				{
					this.OnIdBLChanging(value);
					this.SendPropertyChanging();
					this._IdBL = value;
					this.SendPropertyChanged("IdBL");
					this.OnIdBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumBL", DbType="NVarChar(50)")]
		public string NumBL
		{
			get
			{
				return this._NumBL;
			}
			set
			{
				if ((this._NumBL != value))
				{
					this.OnNumBLChanging(value);
					this.SendPropertyChanging();
					this._NumBL = value;
					this.SendPropertyChanged("NumBL");
					this.OnNumBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumBooking", DbType="NVarChar(50)")]
		public string NumBooking
		{
			get
			{
				return this._NumBooking;
			}
			set
			{
				if ((this._NumBooking != value))
				{
					this.OnNumBookingChanging(value);
					this.SendPropertyChanging();
					this._NumBooking = value;
					this.SendPropertyChanged("NumBooking");
					this.OnNumBookingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DCBL", DbType="DateTime")]
		public System.Nullable<System.DateTime> DCBL
		{
			get
			{
				return this._DCBL;
			}
			set
			{
				if ((this._DCBL != value))
				{
					this.OnDCBLChanging(value);
					this.SendPropertyChanging();
					this._DCBL = value;
					this.SendPropertyChanged("DCBL");
					this.OnDCBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EtatBL", DbType="NVarChar(1)")]
		public string EtatBL
		{
			get
			{
				return this._EtatBL;
			}
			set
			{
				if ((this._EtatBL != value))
				{
					this.OnEtatBLChanging(value);
					this.SendPropertyChanging();
					this._EtatBL = value;
					this.SendPropertyChanged("EtatBL");
					this.OnEtatBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LPBL", DbType="NVarChar(20)")]
		public string LPBL
		{
			get
			{
				return this._LPBL;
			}
			set
			{
				if ((this._LPBL != value))
				{
					this.OnLPBLChanging(value);
					this.SendPropertyChanging();
					this._LPBL = value;
					this.SendPropertyChanged("LPBL");
					this.OnLPBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DPBL", DbType="NVarChar(20)")]
		public string DPBL
		{
			get
			{
				return this._DPBL;
			}
			set
			{
				if ((this._DPBL != value))
				{
					this.OnDPBLChanging(value);
					this.SendPropertyChanging();
					this._DPBL = value;
					this.SendPropertyChanged("DPBL");
					this.OnDPBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LDBL", DbType="NVarChar(20)")]
		public string LDBL
		{
			get
			{
				return this._LDBL;
			}
			set
			{
				if ((this._LDBL != value))
				{
					this.OnLDBLChanging(value);
					this.SendPropertyChanging();
					this._LDBL = value;
					this.SendPropertyChanged("LDBL");
					this.OnLDBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BLGN", DbType="NVarChar(1)")]
		public string BLGN
		{
			get
			{
				return this._BLGN;
			}
			set
			{
				if ((this._BLGN != value))
				{
					this.OnBLGNChanging(value);
					this.SendPropertyChanging();
					this._BLGN = value;
					this.SendPropertyChanged("BLGN");
					this.OnBLGNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BLIL", DbType="NVarChar(1)")]
		public string BLIL
		{
			get
			{
				return this._BLIL;
			}
			set
			{
				if ((this._BLIL != value))
				{
					this.OnBLILChanging(value);
					this.SendPropertyChanging();
					this._BLIL = value;
					this.SendPropertyChanged("BLIL");
					this.OnBLILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BLSocar", DbType="NVarChar(1)")]
		public string BLSocar
		{
			get
			{
				return this._BLSocar;
			}
			set
			{
				if ((this._BLSocar != value))
				{
					this.OnBLSocarChanging(value);
					this.SendPropertyChanging();
					this._BLSocar = value;
					this.SendPropertyChanged("BLSocar");
					this.OnBLSocarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BLFO", DbType="NVarChar(1)")]
		public string BLFO
		{
			get
			{
				return this._BLFO;
			}
			set
			{
				if ((this._BLFO != value))
				{
					this.OnBLFOChanging(value);
					this.SendPropertyChanging();
					this._BLFO = value;
					this.SendPropertyChanged("BLFO");
					this.OnBLFOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BLLT", DbType="NVarChar(1)")]
		public string BLLT
		{
			get
			{
				return this._BLLT;
			}
			set
			{
				if ((this._BLLT != value))
				{
					this.OnBLLTChanging(value);
					this.SendPropertyChanging();
					this._BLLT = value;
					this.SendPropertyChanged("BLLT");
					this.OnBLLTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCBL", DbType="NVarChar(1)")]
		public string CCBL
		{
			get
			{
				return this._CCBL;
			}
			set
			{
				if ((this._CCBL != value))
				{
					this.OnCCBLChanging(value);
					this.SendPropertyChanging();
					this._CCBL = value;
					this.SendPropertyChanged("CCBL");
					this.OnCCBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCBLMontant", DbType="Int")]
		public System.Nullable<int> CCBLMontant
		{
			get
			{
				return this._CCBLMontant;
			}
			set
			{
				if ((this._CCBLMontant != value))
				{
					this.OnCCBLMontantChanging(value);
					this.SendPropertyChanging();
					this._CCBLMontant = value;
					this.SendPropertyChanged("CCBLMontant");
					this.OnCCBLMontantChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LPFret", DbType="NVarChar(50)")]
		public string LPFret
		{
			get
			{
				return this._LPFret;
			}
			set
			{
				if ((this._LPFret != value))
				{
					this.OnLPFretChanging(value);
					this.SendPropertyChanging();
					this._LPFret = value;
					this.SendPropertyChanged("LPFret");
					this.OnLPFretChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlBloque", DbType="NVarChar(1)")]
		public string BlBloque
		{
			get
			{
				return this._BlBloque;
			}
			set
			{
				if ((this._BlBloque != value))
				{
					this.OnBlBloqueChanging(value);
					this.SendPropertyChanging();
					this._BlBloque = value;
					this.SendPropertyChanged("BlBloque");
					this.OnBlBloqueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BLER", DbType="NVarChar(1)")]
		public string BLER
		{
			get
			{
				return this._BLER;
			}
			set
			{
				if ((this._BLER != value))
				{
					this.OnBLERChanging(value);
					this.SendPropertyChanging();
					this._BLER = value;
					this.SendPropertyChanged("BLER");
					this.OnBLERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BLERNote", DbType="NVarChar(255)")]
		public string BLERNote
		{
			get
			{
				return this._BLERNote;
			}
			set
			{
				if ((this._BLERNote != value))
				{
					this.OnBLERNoteChanging(value);
					this.SendPropertyChanging();
					this._BLERNote = value;
					this.SendPropertyChanged("BLERNote");
					this.OnBLERNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeBL", DbType="NVarChar(2)")]
		public string TypeBL
		{
			get
			{
				return this._TypeBL;
			}
			set
			{
				if ((this._TypeBL != value))
				{
					this.OnTypeBLChanging(value);
					this.SendPropertyChanging();
					this._TypeBL = value;
					this.SendPropertyChanged("TypeBL");
					this.OnTypeBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescBL", DbType="NVarChar(255)")]
		public string DescBL
		{
			get
			{
				return this._DescBL;
			}
			set
			{
				if ((this._DescBL != value))
				{
					this.OnDescBLChanging(value);
					this.SendPropertyChanging();
					this._DescBL = value;
					this.SendPropertyChanged("DescBL");
					this.OnDescBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsigneeBL", DbType="NVarChar(255)")]
		public string ConsigneeBL
		{
			get
			{
				return this._ConsigneeBL;
			}
			set
			{
				if ((this._ConsigneeBL != value))
				{
					this.OnConsigneeBLChanging(value);
					this.SendPropertyChanging();
					this._ConsigneeBL = value;
					this.SendPropertyChanged("ConsigneeBL");
					this.OnConsigneeBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdresseBL", DbType="NVarChar(255)")]
		public string AdresseBL
		{
			get
			{
				return this._AdresseBL;
			}
			set
			{
				if ((this._AdresseBL != value))
				{
					this.OnAdresseBLChanging(value);
					this.SendPropertyChanging();
					this._AdresseBL = value;
					this.SendPropertyChanged("AdresseBL");
					this.OnAdresseBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsigneeBooking", DbType="NVarChar(255)")]
		public string ConsigneeBooking
		{
			get
			{
				return this._ConsigneeBooking;
			}
			set
			{
				if ((this._ConsigneeBooking != value))
				{
					this.OnConsigneeBookingChanging(value);
					this.SendPropertyChanging();
					this._ConsigneeBooking = value;
					this.SendPropertyChanged("ConsigneeBooking");
					this.OnConsigneeBookingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdresseConsignee", DbType="NVarChar(255)")]
		public string AdresseConsignee
		{
			get
			{
				return this._AdresseConsignee;
			}
			set
			{
				if ((this._AdresseConsignee != value))
				{
					this.OnAdresseConsigneeChanging(value);
					this.SendPropertyChanging();
					this._AdresseConsignee = value;
					this.SendPropertyChanged("AdresseConsignee");
					this.OnAdresseConsigneeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdresseNotify", DbType="NVarChar(255)")]
		public string AdresseNotify
		{
			get
			{
				return this._AdresseNotify;
			}
			set
			{
				if ((this._AdresseNotify != value))
				{
					this.OnAdresseNotifyChanging(value);
					this.SendPropertyChanging();
					this._AdresseNotify = value;
					this.SendPropertyChanged("AdresseNotify");
					this.OnAdresseNotifyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailNotify", DbType="NVarChar(255)")]
		public string EmailNotify
		{
			get
			{
				return this._EmailNotify;
			}
			set
			{
				if ((this._EmailNotify != value))
				{
					this.OnEmailNotifyChanging(value);
					this.SendPropertyChanging();
					this._EmailNotify = value;
					this.SendPropertyChanged("EmailNotify");
					this.OnEmailNotifyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelNotify", DbType="NVarChar(255)")]
		public string TelNotify
		{
			get
			{
				return this._TelNotify;
			}
			set
			{
				if ((this._TelNotify != value))
				{
					this.OnTelNotifyChanging(value);
					this.SendPropertyChanging();
					this._TelNotify = value;
					this.SendPropertyChanged("TelNotify");
					this.OnTelNotifyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotifyBL", DbType="NVarChar(255)")]
		public string NotifyBL
		{
			get
			{
				return this._NotifyBL;
			}
			set
			{
				if ((this._NotifyBL != value))
				{
					this.OnNotifyBLChanging(value);
					this.SendPropertyChanging();
					this._NotifyBL = value;
					this.SendPropertyChanged("NotifyBL");
					this.OnNotifyBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatutBL", DbType="NVarChar(15)")]
		public string StatutBL
		{
			get
			{
				return this._StatutBL;
			}
			set
			{
				if ((this._StatutBL != value))
				{
					this.OnStatutBLChanging(value);
					this.SendPropertyChanging();
					this._StatutBL = value;
					this.SendPropertyChanged("StatutBL");
					this.OnStatutBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdClient", DbType="Int")]
		public System.Nullable<int> IdClient
		{
			get
			{
				return this._IdClient;
			}
			set
			{
				if ((this._IdClient != value))
				{
					if (this._CLIENT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdClientChanging(value);
					this.SendPropertyChanging();
					this._IdClient = value;
					this.SendPropertyChanged("IdClient");
					this.OnIdClientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdMan", DbType="Int")]
		public System.Nullable<int> IdMan
		{
			get
			{
				return this._IdMan;
			}
			set
			{
				if ((this._IdMan != value))
				{
					if (this._MANIFESTE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdManChanging(value);
					this.SendPropertyChanging();
					this._IdMan = value;
					this.SendPropertyChanged("IdMan");
					this.OnIdManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEsc", DbType="Int")]
		public System.Nullable<int> IdEsc
		{
			get
			{
				return this._IdEsc;
			}
			set
			{
				if ((this._IdEsc != value))
				{
					if (this._ESCALE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdEscChanging(value);
					this.SendPropertyChanging();
					this._IdEsc = value;
					this.SendPropertyChanged("IdEsc");
					this.OnIdEscChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdAcc", DbType="Int")]
		public System.Nullable<int> IdAcc
		{
			get
			{
				return this._IdAcc;
			}
			set
			{
				if ((this._IdAcc != value))
				{
					this.OnIdAccChanging(value);
					this.SendPropertyChanging();
					this._IdAcc = value;
					this.SendPropertyChanged("IdAcc");
					this.OnIdAccChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeTVA", DbType="NVarChar(10)")]
		public string CodeTVA
		{
			get
			{
				return this._CodeTVA;
			}
			set
			{
				if ((this._CodeTVA != value))
				{
					if (this._CODE_TVA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodeTVAChanging(value);
					this.SendPropertyChanging();
					this._CodeTVA = value;
					this.SendPropertyChanged("CodeTVA");
					this.OnCodeTVAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NomManBL", DbType="NVarChar(50)")]
		public string NomManBL
		{
			get
			{
				return this._NomManBL;
			}
			set
			{
				if ((this._NomManBL != value))
				{
					this.OnNomManBLChanging(value);
					this.SendPropertyChanging();
					this._NomManBL = value;
					this.SendPropertyChanged("NomManBL");
					this.OnNomManBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CNIManBL", DbType="NVarChar(20)")]
		public string CNIManBL
		{
			get
			{
				return this._CNIManBL;
			}
			set
			{
				if ((this._CNIManBL != value))
				{
					this.OnCNIManBLChanging(value);
					this.SendPropertyChanging();
					this._CNIManBL = value;
					this.SendPropertyChanged("CNIManBL");
					this.OnCNIManBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DDCNIManBL", DbType="DateTime")]
		public System.Nullable<System.DateTime> DDCNIManBL
		{
			get
			{
				return this._DDCNIManBL;
			}
			set
			{
				if ((this._DDCNIManBL != value))
				{
					this.OnDDCNIManBLChanging(value);
					this.SendPropertyChanging();
					this._DDCNIManBL = value;
					this.SendPropertyChanged("DDCNIManBL");
					this.OnDDCNIManBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LDCNIManBL", DbType="NVarChar(20)")]
		public string LDCNIManBL
		{
			get
			{
				return this._LDCNIManBL;
			}
			set
			{
				if ((this._LDCNIManBL != value))
				{
					this.OnLDCNIManBLChanging(value);
					this.SendPropertyChanging();
					this._LDCNIManBL = value;
					this.SendPropertyChanged("LDCNIManBL");
					this.OnLDCNIManBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneManBL", DbType="NVarChar(255)")]
		public string PhoneManBL
		{
			get
			{
				return this._PhoneManBL;
			}
			set
			{
				if ((this._PhoneManBL != value))
				{
					this.OnPhoneManBLChanging(value);
					this.SendPropertyChanging();
					this._PhoneManBL = value;
					this.SendPropertyChanged("PhoneManBL");
					this.OnPhoneManBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailBL", DbType="NVarChar(255)")]
		public string EmailBL
		{
			get
			{
				return this._EmailBL;
			}
			set
			{
				if ((this._EmailBL != value))
				{
					this.OnEmailBLChanging(value);
					this.SendPropertyChanging();
					this._EmailBL = value;
					this.SendPropertyChanged("EmailBL");
					this.OnEmailBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NContribBL", DbType="NVarChar(20)")]
		public string NContribBL
		{
			get
			{
				return this._NContribBL;
			}
			set
			{
				if ((this._NContribBL != value))
				{
					this.OnNContribBLChanging(value);
					this.SendPropertyChanging();
					this._NContribBL = value;
					this.SendPropertyChanged("NContribBL");
					this.OnNContribBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAccBL", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateAccBL
		{
			get
			{
				return this._DateAccBL;
			}
			set
			{
				if ((this._DateAccBL != value))
				{
					this.OnDateAccBLChanging(value);
					this.SendPropertyChanging();
					this._DateAccBL = value;
					this.SendPropertyChanged("DateAccBL");
					this.OnDateAccBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AIBL", DbType="NVarChar(255)")]
		public string AIBL
		{
			get
			{
				return this._AIBL;
			}
			set
			{
				if ((this._AIBL != value))
				{
					this.OnAIBLChanging(value);
					this.SendPropertyChanging();
					this._AIBL = value;
					this.SendPropertyChanged("AIBL");
					this.OnAIBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SensBL", DbType="NVarChar(1)")]
		public string SensBL
		{
			get
			{
				return this._SensBL;
			}
			set
			{
				if ((this._SensBL != value))
				{
					this.OnSensBLChanging(value);
					this.SendPropertyChanging();
					this._SensBL = value;
					this.SendPropertyChanged("SensBL");
					this.OnSensBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PoidsBL", DbType="Float")]
		public System.Nullable<double> PoidsBL
		{
			get
			{
				return this._PoidsBL;
			}
			set
			{
				if ((this._PoidsBL != value))
				{
					this.OnPoidsBLChanging(value);
					this.SendPropertyChanging();
					this._PoidsBL = value;
					this.SendPropertyChanged("PoidsBL");
					this.OnPoidsBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VolBL", DbType="Float")]
		public System.Nullable<double> VolBL
		{
			get
			{
				return this._VolBL;
			}
			set
			{
				if ((this._VolBL != value))
				{
					this.OnVolBLChanging(value);
					this.SendPropertyChanging();
					this._VolBL = value;
					this.SendPropertyChanged("VolBL");
					this.OnVolBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumCtrBL", DbType="NVarChar(50)")]
		public string NumCtrBL
		{
			get
			{
				return this._NumCtrBL;
			}
			set
			{
				if ((this._NumCtrBL != value))
				{
					this.OnNumCtrBLChanging(value);
					this.SendPropertyChanging();
					this._NumCtrBL = value;
					this.SendPropertyChanged("NumCtrBL");
					this.OnNumCtrBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumDEBL", DbType="NVarChar(50)")]
		public string NumDEBL
		{
			get
			{
				return this._NumDEBL;
			}
			set
			{
				if ((this._NumDEBL != value))
				{
					this.OnNumDEBLChanging(value);
					this.SendPropertyChanging();
					this._NumDEBL = value;
					this.SendPropertyChanged("NumDEBL");
					this.OnNumDEBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumBESCBL", DbType="NVarChar(50)")]
		public string NumBESCBL
		{
			get
			{
				return this._NumBESCBL;
			}
			set
			{
				if ((this._NumBESCBL != value))
				{
					this.OnNumBESCBLChanging(value);
					this.SendPropertyChanging();
					this._NumBESCBL = value;
					this.SendPropertyChanged("NumBESCBL");
					this.OnNumBESCBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumHSCode", DbType="NVarChar(50)")]
		public string NumHSCode
		{
			get
			{
				return this._NumHSCode;
			}
			set
			{
				if ((this._NumHSCode != value))
				{
					this.OnNumHSCodeChanging(value);
					this.SendPropertyChanging();
					this._NumHSCode = value;
					this.SendPropertyChanged("NumHSCode");
					this.OnNumHSCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DCBLI", DbType="DateTime")]
		public System.Nullable<System.DateTime> DCBLI
		{
			get
			{
				return this._DCBLI;
			}
			set
			{
				if ((this._DCBLI != value))
				{
					this.OnDCBLIChanging(value);
					this.SendPropertyChanging();
					this._DCBLI = value;
					this.SendPropertyChanged("DCBLI");
					this.OnDCBLIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DVCBLI", DbType="DateTime")]
		public System.Nullable<System.DateTime> DVCBLI
		{
			get
			{
				return this._DVCBLI;
			}
			set
			{
				if ((this._DVCBLI != value))
				{
					this.OnDVCBLIChanging(value);
					this.SendPropertyChanging();
					this._DVCBLI = value;
					this.SendPropertyChanged("DVCBLI");
					this.OnDVCBLIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AIVCBLI", DbType="NVarChar(255)")]
		public string AIVCBLI
		{
			get
			{
				return this._AIVCBLI;
			}
			set
			{
				if ((this._AIVCBLI != value))
				{
					this.OnAIVCBLIChanging(value);
					this.SendPropertyChanging();
					this._AIVCBLI = value;
					this.SendPropertyChanged("AIVCBLI");
					this.OnAIVCBLIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DCLBL", DbType="DateTime")]
		public System.Nullable<System.DateTime> DCLBL
		{
			get
			{
				return this._DCLBL;
			}
			set
			{
				if ((this._DCLBL != value))
				{
					this.OnDCLBLChanging(value);
					this.SendPropertyChanging();
					this._DCLBL = value;
					this.SendPropertyChanged("DCLBL");
					this.OnDCLBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AIDCLBL", DbType="NVarChar(255)")]
		public string AIDCLBL
		{
			get
			{
				return this._AIDCLBL;
			}
			set
			{
				if ((this._AIDCLBL != value))
				{
					this.OnAIDCLBLChanging(value);
					this.SendPropertyChanging();
					this._AIDCLBL = value;
					this.SendPropertyChanged("AIDCLBL");
					this.OnAIDCLBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BLDette", DbType="NVarChar(1)")]
		public string BLDette
		{
			get
			{
				return this._BLDette;
			}
			set
			{
				if ((this._BLDette != value))
				{
					this.OnBLDetteChanging(value);
					this.SendPropertyChanging();
					this._BLDette = value;
					this.SendPropertyChanged("BLDette");
					this.OnBLDetteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetteMontant", DbType="Int")]
		public System.Nullable<int> DetteMontant
		{
			get
			{
				return this._DetteMontant;
			}
			set
			{
				if ((this._DetteMontant != value))
				{
					this.OnDetteMontantChanging(value);
					this.SendPropertyChanging();
					this._DetteMontant = value;
					this.SendPropertyChanged("DetteMontant");
					this.OnDetteMontantChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BLBloqueNote", DbType="NVarChar(255)")]
		public string BLBloqueNote
		{
			get
			{
				return this._BLBloqueNote;
			}
			set
			{
				if ((this._BLBloqueNote != value))
				{
					this.OnBLBloqueNoteChanging(value);
					this.SendPropertyChanging();
					this._BLBloqueNote = value;
					this.SendPropertyChanged("BLBloqueNote");
					this.OnBLBloqueNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DVBL", DbType="DateTime")]
		public System.Nullable<System.DateTime> DVBL
		{
			get
			{
				return this._DVBL;
			}
			set
			{
				if ((this._DVBL != value))
				{
					this.OnDVBLChanging(value);
					this.SendPropertyChanging();
					this._DVBL = value;
					this.SendPropertyChanged("DVBL");
					this.OnDVBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AIBLVal", DbType="NVarChar(255)")]
		public string AIBLVal
		{
			get
			{
				return this._AIBLVal;
			}
			set
			{
				if ((this._AIBLVal != value))
				{
					this.OnAIBLValChanging(value);
					this.SendPropertyChanging();
					this._AIBLVal = value;
					this.SendPropertyChanged("AIBLVal");
					this.OnAIBLValChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DestBL", DbType="NVarChar(30)")]
		public string DestBL
		{
			get
			{
				return this._DestBL;
			}
			set
			{
				if ((this._DestBL != value))
				{
					this.OnDestBLChanging(value);
					this.SendPropertyChanging();
					this._DestBL = value;
					this.SendPropertyChanged("DestBL");
					this.OnDestBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModif", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModif
		{
			get
			{
				return this._LastModif;
			}
			set
			{
				if ((this._LastModif != value))
				{
					this.OnLastModifChanging(value);
					this.SendPropertyChanging();
					this._LastModif = value;
					this.SendPropertyChanged("LastModif");
					this.OnLastModifChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdU", DbType="Int")]
		public System.Nullable<int> IdU
		{
			get
			{
				return this._IdU;
			}
			set
			{
				if ((this._IdU != value))
				{
					this.OnIdUChanging(value);
					this.SendPropertyChanging();
					this._IdU = value;
					this.SendPropertyChanged("IdU");
					this.OnIdUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumSocar", DbType="NVarChar(10)")]
		public string NumSocar
		{
			get
			{
				return this._NumSocar;
			}
			set
			{
				if ((this._NumSocar != value))
				{
					this.OnNumSocarChanging(value);
					this.SendPropertyChanging();
					this._NumSocar = value;
					this.SendPropertyChanged("NumSocar");
					this.OnNumSocarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NomCharger", DbType="NVarChar(35)")]
		public string NomCharger
		{
			get
			{
				return this._NomCharger;
			}
			set
			{
				if ((this._NomCharger != value))
				{
					this.OnNomChargerChanging(value);
					this.SendPropertyChanging();
					this._NomCharger = value;
					this.SendPropertyChanged("NomCharger");
					this.OnNomChargerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdresseCharger", DbType="NVarChar(175)")]
		public string AdresseCharger
		{
			get
			{
				return this._AdresseCharger;
			}
			set
			{
				if ((this._AdresseCharger != value))
				{
					this.OnAdresseChargerChanging(value);
					this.SendPropertyChanging();
					this._AdresseCharger = value;
					this.SendPropertyChanged("AdresseCharger");
					this.OnAdresseChargerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payor", DbType="NVarChar(255)")]
		public string Payor
		{
			get
			{
				return this._Payor;
			}
			set
			{
				if ((this._Payor != value))
				{
					this.OnPayorChanging(value);
					this.SendPropertyChanging();
					this._Payor = value;
					this.SendPropertyChanged("Payor");
					this.OnPayorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClearAgent", DbType="NVarChar(255)")]
		public string ClearAgent
		{
			get
			{
				return this._ClearAgent;
			}
			set
			{
				if ((this._ClearAgent != value))
				{
					this.OnClearAgentChanging(value);
					this.SendPropertyChanging();
					this._ClearAgent = value;
					this.SendPropertyChanged("ClearAgent");
					this.OnClearAgentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoSPEBC", DbType="NVarChar(1)")]
		public string NoSEPBC
		{
			get
			{
				return this._NoSPEBC;
			}
			set
			{
				if ((this._NoSPEBC != value))
				{
					this.OnNoSEPBCChanging(value);
					this.SendPropertyChanging();
					this._NoSPEBC = value;
					this.SendPropertyChanged("NoSEPBC");
					this.OnNoSEPBCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotifyBL2", DbType="NVarChar(255)")]
		public string NotifyBL2
		{
			get
			{
				return this._NotifyBL2;
			}
			set
			{
				if ((this._NotifyBL2 != value))
				{
					this.OnNotifyBL2Changing(value);
					this.SendPropertyChanging();
					this._NotifyBL2 = value;
					this.SendPropertyChanged("NotifyBL2");
					this.OnNotifyBL2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdresseNotify2", DbType="NVarChar(255)")]
		public string AdresseNotify2
		{
			get
			{
				return this._AdresseNotify2;
			}
			set
			{
				if ((this._AdresseNotify2 != value))
				{
					this.OnAdresseNotify2Changing(value);
					this.SendPropertyChanging();
					this._AdresseNotify2 = value;
					this.SendPropertyChanged("AdresseNotify2");
					this.OnAdresseNotify2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailNotify2", DbType="NVarChar(255)")]
		public string EmailNotify2
		{
			get
			{
				return this._EmailNotify2;
			}
			set
			{
				if ((this._EmailNotify2 != value))
				{
					this.OnEmailNotify2Changing(value);
					this.SendPropertyChanging();
					this._EmailNotify2 = value;
					this.SendPropertyChanged("EmailNotify2");
					this.OnEmailNotify2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelNotify2", DbType="NVarChar(255)")]
		public string TelNotify2
		{
			get
			{
				return this._TelNotify2;
			}
			set
			{
				if ((this._TelNotify2 != value))
				{
					this.OnTelNotify2Changing(value);
					this.SendPropertyChanging();
					this._TelNotify2 = value;
					this.SendPropertyChanged("TelNotify2");
					this.OnTelNotify2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONNAISSEMENT_BON_ENLEVEMENT", Storage="_BON_ENLEVEMENT", ThisKey="IdBL", OtherKey="IdBL")]
		public EntitySet<BON_ENLEVEMENT> BON_ENLEVEMENT
		{
			get
			{
				return this._BON_ENLEVEMENT;
			}
			set
			{
				this._BON_ENLEVEMENT.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONNAISSEMENT_DEMANDE_CAUTION", Storage="_DEMANDE_CAUTION", ThisKey="IdBL", OtherKey="IdBL")]
		public EntitySet<DEMANDE_CAUTION> DEMANDE_CAUTION
		{
			get
			{
				return this._DEMANDE_CAUTION;
			}
			set
			{
				this._DEMANDE_CAUTION.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONNAISSEMENT_DEMANDE_LIVRAISON", Storage="_DEMANDE_LIVRAISON", ThisKey="IdBL", OtherKey="IdBL")]
		public EntitySet<DEMANDE_LIVRAISON> DEMANDE_LIVRAISON
		{
			get
			{
				return this._DEMANDE_LIVRAISON;
			}
			set
			{
				this._DEMANDE_LIVRAISON.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONNAISSEMENT_FACTURE_DIT", Storage="_FACTURE_DIT", ThisKey="IdBL", OtherKey="IdBL")]
		public EntitySet<FACTURE_DIT> FACTURE_DIT
		{
			get
			{
				return this._FACTURE_DIT;
			}
			set
			{
				this._FACTURE_DIT.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONNAISSEMENT_ORDRE_SERVICE", Storage="_ORDRE_SERVICE", ThisKey="IdBL", OtherKey="IdBL")]
		public EntitySet<ORDRE_SERVICE> ORDRE_SERVICE
		{
			get
			{
				return this._ORDRE_SERVICE;
			}
			set
			{
				this._ORDRE_SERVICE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONNAISSEMENT_PAYEMENT", Storage="_PAYEMENT", ThisKey="IdBL", OtherKey="IdBL")]
		public EntitySet<PAYEMENT> PAYEMENT
		{
			get
			{
				return this._PAYEMENT;
			}
			set
			{
				this._PAYEMENT.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONNAISSEMENT_DEMANDE_REDUCTION", Storage="_DEMANDE_REDUCTION", ThisKey="IdBL", OtherKey="IdBL")]
		public EntitySet<DEMANDE_REDUCTION> DEMANDE_REDUCTION
		{
			get
			{
				return this._DEMANDE_REDUCTION;
			}
			set
			{
				this._DEMANDE_REDUCTION.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONNAISSEMENT_EXTENSION_FRANCHISE", Storage="_EXTENSION_FRANCHISE", ThisKey="IdBL", OtherKey="IdBL")]
		public EntitySet<EXTENSION_FRANCHISE> EXTENSION_FRANCHISE
		{
			get
			{
				return this._EXTENSION_FRANCHISE;
			}
			set
			{
				this._EXTENSION_FRANCHISE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONNAISSEMENT_DEMANDE_VISITE", Storage="_DEMANDE_VISITE", ThisKey="IdBL", OtherKey="IdBL")]
		public EntitySet<DEMANDE_VISITE> DEMANDE_VISITE
		{
			get
			{
				return this._DEMANDE_VISITE;
			}
			set
			{
				this._DEMANDE_VISITE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONNAISSEMENT_HIST_CONNAISSEMENT", Storage="_HIST_CONNAISSEMENT", ThisKey="IdBL", OtherKey="IdBL")]
		public EntitySet<HIST_CONNAISSEMENT> HIST_CONNAISSEMENT
		{
			get
			{
				return this._HIST_CONNAISSEMENT;
			}
			set
			{
				this._HIST_CONNAISSEMENT.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONNAISSEMENT_ELEMENT_FACTURATION", Storage="_ELEMENT_FACTURATION", ThisKey="IdBL", OtherKey="IdBL")]
		public EntitySet<ELEMENT_FACTURATION> ELEMENT_FACTURATION
		{
			get
			{
				return this._ELEMENT_FACTURATION;
			}
			set
			{
				this._ELEMENT_FACTURATION.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONNAISSEMENT_AVOIR", Storage="_AVOIR", ThisKey="IdBL", OtherKey="IdBL")]
		public EntitySet<AVOIR> AVOIR
		{
			get
			{
				return this._AVOIR;
			}
			set
			{
				this._AVOIR.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONNAISSEMENT_PROFORMA", Storage="_PROFORMA", ThisKey="IdBL", OtherKey="IdBL")]
		public EntitySet<PROFORMA> PROFORMA
		{
			get
			{
				return this._PROFORMA;
			}
			set
			{
				this._PROFORMA.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONNAISSEMENT_VEHICULE", Storage="_VEHICULE", ThisKey="IdBL", OtherKey="IdBL")]
		public EntitySet<VEHICULE> VEHICULE
		{
			get
			{
				return this._VEHICULE;
			}
			set
			{
				this._VEHICULE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONNAISSEMENT_CONTENEUR", Storage="_CONTENEUR", ThisKey="IdBL", OtherKey="IdBL")]
		public EntitySet<CONTENEUR> CONTENEUR
		{
			get
			{
				return this._CONTENEUR;
			}
			set
			{
				this._CONTENEUR.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONNAISSEMENT_CONVENTIONNEL", Storage="_CONVENTIONNEL", ThisKey="IdBL", OtherKey="IdBL")]
		public EntitySet<CONVENTIONNEL> CONVENTIONNEL
		{
			get
			{
				return this._CONVENTIONNEL;
			}
			set
			{
				this._CONVENTIONNEL.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONNAISSEMENT_BON_SORTIE", Storage="_BON_SORTIE", ThisKey="IdBL", OtherKey="IdBL")]
		public EntitySet<BON_SORTIE> BON_SORTIE
		{
			get
			{
				return this._BON_SORTIE;
			}
			set
			{
				this._BON_SORTIE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONNAISSEMENT_MAFI", Storage="_MAFI", ThisKey="IdBL", OtherKey="IdBL")]
		public EntitySet<MAFI> MAFI
		{
			get
			{
				return this._MAFI;
			}
			set
			{
				this._MAFI.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONNAISSEMENT_NOTE", Storage="_NOTE", ThisKey="IdBL", OtherKey="IdBL")]
		public EntitySet<NOTE> NOTE
		{
			get
			{
				return this._NOTE;
			}
			set
			{
				this._NOTE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONNAISSEMENT_MOUVEMENT_TC", Storage="_MOUVEMENT_TC", ThisKey="IdBL", OtherKey="IdBL")]
		public EntitySet<MOUVEMENT_TC> MOUVEMENT_TC
		{
			get
			{
				return this._MOUVEMENT_TC;
			}
			set
			{
				this._MOUVEMENT_TC.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONNAISSEMENT_DISPOSITION_CONTENEUR", Storage="_DISPOSITION_CONTENEUR", ThisKey="IdBL", OtherKey="IdBooking")]
		public EntitySet<DISPOSITION_CONTENEUR> DISPOSITION_CONTENEUR
		{
			get
			{
				return this._DISPOSITION_CONTENEUR;
			}
			set
			{
				this._DISPOSITION_CONTENEUR.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ESCALE_CONNAISSEMENT", Storage="_ESCALE", ThisKey="IdEsc", OtherKey="IdEsc", IsForeignKey=true)]
		public ESCALE ESCALE
		{
			get
			{
				return this._ESCALE.Entity;
			}
			set
			{
				ESCALE previousValue = this._ESCALE.Entity;
				if (((previousValue != value) 
							|| (this._ESCALE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ESCALE.Entity = null;
						previousValue.CONNAISSEMENT.Remove(this);
					}
					this._ESCALE.Entity = value;
					if ((value != null))
					{
						value.CONNAISSEMENT.Add(this);
						this._IdEsc = value.IdEsc;
					}
					else
					{
						this._IdEsc = default(Nullable<int>);
					}
					this.SendPropertyChanged("ESCALE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MANIFESTE_CONNAISSEMENT", Storage="_MANIFESTE", ThisKey="IdMan", OtherKey="IdMan", IsForeignKey=true)]
		public MANIFESTE MANIFESTE
		{
			get
			{
				return this._MANIFESTE.Entity;
			}
			set
			{
				MANIFESTE previousValue = this._MANIFESTE.Entity;
				if (((previousValue != value) 
							|| (this._MANIFESTE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MANIFESTE.Entity = null;
						previousValue.CONNAISSEMENT.Remove(this);
					}
					this._MANIFESTE.Entity = value;
					if ((value != null))
					{
						value.CONNAISSEMENT.Add(this);
						this._IdMan = value.IdMan;
					}
					else
					{
						this._IdMan = default(Nullable<int>);
					}
					this.SendPropertyChanged("MANIFESTE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CODE_TVA_CONNAISSEMENT", Storage="_CODE_TVA", ThisKey="CodeTVA", OtherKey="CodeTVA", IsForeignKey=true)]
		public CODE_TVA CODE_TVA
		{
			get
			{
				return this._CODE_TVA.Entity;
			}
			set
			{
				CODE_TVA previousValue = this._CODE_TVA.Entity;
				if (((previousValue != value) 
							|| (this._CODE_TVA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CODE_TVA.Entity = null;
						previousValue.CONNAISSEMENT.Remove(this);
					}
					this._CODE_TVA.Entity = value;
					if ((value != null))
					{
						value.CONNAISSEMENT.Add(this);
						this._CodeTVA = value.CodeTVA;
					}
					else
					{
						this._CodeTVA = default(string);
					}
					this.SendPropertyChanged("CODE_TVA");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CLIENT_CONNAISSEMENT", Storage="_CLIENT", ThisKey="IdClient", OtherKey="IdClient", IsForeignKey=true)]
		public CLIENT CLIENT
		{
			get
			{
				return this._CLIENT.Entity;
			}
			set
			{
				CLIENT previousValue = this._CLIENT.Entity;
				if (((previousValue != value) 
							|| (this._CLIENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CLIENT.Entity = null;
						previousValue.CONNAISSEMENT.Remove(this);
					}
					this._CLIENT.Entity = value;
					if ((value != null))
					{
						value.CONNAISSEMENT.Add(this);
						this._IdClient = value.IdClient;
					}
					else
					{
						this._IdClient = default(Nullable<int>);
					}
					this.SendPropertyChanged("CLIENT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BON_ENLEVEMENT(BON_ENLEVEMENT entity)
		{
			this.SendPropertyChanging();
			entity.CONNAISSEMENT = this;
		}
		
		private void detach_BON_ENLEVEMENT(BON_ENLEVEMENT entity)
		{
			this.SendPropertyChanging();
			entity.CONNAISSEMENT = null;
		}
		
		private void attach_DEMANDE_CAUTION(DEMANDE_CAUTION entity)
		{
			this.SendPropertyChanging();
			entity.CONNAISSEMENT = this;
		}
		
		private void detach_DEMANDE_CAUTION(DEMANDE_CAUTION entity)
		{
			this.SendPropertyChanging();
			entity.CONNAISSEMENT = null;
		}
		
		private void attach_DEMANDE_LIVRAISON(DEMANDE_LIVRAISON entity)
		{
			this.SendPropertyChanging();
			entity.CONNAISSEMENT = this;
		}
		
		private void detach_DEMANDE_LIVRAISON(DEMANDE_LIVRAISON entity)
		{
			this.SendPropertyChanging();
			entity.CONNAISSEMENT = null;
		}
		
		private void attach_FACTURE_DIT(FACTURE_DIT entity)
		{
			this.SendPropertyChanging();
			entity.CONNAISSEMENT = this;
		}
		
		private void detach_FACTURE_DIT(FACTURE_DIT entity)
		{
			this.SendPropertyChanging();
			entity.CONNAISSEMENT = null;
		}
		
		private void attach_ORDRE_SERVICE(ORDRE_SERVICE entity)
		{
			this.SendPropertyChanging();
			entity.CONNAISSEMENT = this;
		}
		
		private void detach_ORDRE_SERVICE(ORDRE_SERVICE entity)
		{
			this.SendPropertyChanging();
			entity.CONNAISSEMENT = null;
		}
		
		private void attach_PAYEMENT(PAYEMENT entity)
		{
			this.SendPropertyChanging();
			entity.CONNAISSEMENT = this;
		}
		
		private void detach_PAYEMENT(PAYEMENT entity)
		{
			this.SendPropertyChanging();
			entity.CONNAISSEMENT = null;
		}
		
		private void attach_DEMANDE_REDUCTION(DEMANDE_REDUCTION entity)
		{
			this.SendPropertyChanging();
			entity.CONNAISSEMENT = this;
		}
		
		private void detach_DEMANDE_REDUCTION(DEMANDE_REDUCTION entity)
		{
			this.SendPropertyChanging();
			entity.CONNAISSEMENT = null;
		}
		
		private void attach_EXTENSION_FRANCHISE(EXTENSION_FRANCHISE entity)
		{
			this.SendPropertyChanging();
			entity.CONNAISSEMENT = this;
		}
		
		private void detach_EXTENSION_FRANCHISE(EXTENSION_FRANCHISE entity)
		{
			this.SendPropertyChanging();
			entity.CONNAISSEMENT = null;
		}
		
		private void attach_DEMANDE_VISITE(DEMANDE_VISITE entity)
		{
			this.SendPropertyChanging();
			entity.CONNAISSEMENT = this;
		}
		
		private void detach_DEMANDE_VISITE(DEMANDE_VISITE entity)
		{
			this.SendPropertyChanging();
			entity.CONNAISSEMENT = null;
		}
		
		private void attach_HIST_CONNAISSEMENT(HIST_CONNAISSEMENT entity)
		{
			this.SendPropertyChanging();
			entity.CONNAISSEMENT = this;
		}
		
		private void detach_HIST_CONNAISSEMENT(HIST_CONNAISSEMENT entity)
		{
			this.SendPropertyChanging();
			entity.CONNAISSEMENT = null;
		}
		
		private void attach_ELEMENT_FACTURATION(ELEMENT_FACTURATION entity)
		{
			this.SendPropertyChanging();
			entity.CONNAISSEMENT = this;
		}
		
		private void detach_ELEMENT_FACTURATION(ELEMENT_FACTURATION entity)
		{
			this.SendPropertyChanging();
			entity.CONNAISSEMENT = null;
		}
		
		private void attach_AVOIR(AVOIR entity)
		{
			this.SendPropertyChanging();
			entity.CONNAISSEMENT = this;
		}
		
		private void detach_AVOIR(AVOIR entity)
		{
			this.SendPropertyChanging();
			entity.CONNAISSEMENT = null;
		}
		
		private void attach_PROFORMA(PROFORMA entity)
		{
			this.SendPropertyChanging();
			entity.CONNAISSEMENT = this;
		}
		
		private void detach_PROFORMA(PROFORMA entity)
		{
			this.SendPropertyChanging();
			entity.CONNAISSEMENT = null;
		}
		
		private void attach_VEHICULE(VEHICULE entity)
		{
			this.SendPropertyChanging();
			entity.CONNAISSEMENT = this;
		}
		
		private void detach_VEHICULE(VEHICULE entity)
		{
			this.SendPropertyChanging();
			entity.CONNAISSEMENT = null;
		}
		
		private void attach_CONTENEUR(CONTENEUR entity)
		{
			this.SendPropertyChanging();
			entity.CONNAISSEMENT = this;
		}
		
		private void detach_CONTENEUR(CONTENEUR entity)
		{
			this.SendPropertyChanging();
			entity.CONNAISSEMENT = null;
		}
		
		private void attach_CONVENTIONNEL(CONVENTIONNEL entity)
		{
			this.SendPropertyChanging();
			entity.CONNAISSEMENT = this;
		}
		
		private void detach_CONVENTIONNEL(CONVENTIONNEL entity)
		{
			this.SendPropertyChanging();
			entity.CONNAISSEMENT = null;
		}
		
		private void attach_BON_SORTIE(BON_SORTIE entity)
		{
			this.SendPropertyChanging();
			entity.CONNAISSEMENT = this;
		}
		
		private void detach_BON_SORTIE(BON_SORTIE entity)
		{
			this.SendPropertyChanging();
			entity.CONNAISSEMENT = null;
		}
		
		private void attach_MAFI(MAFI entity)
		{
			this.SendPropertyChanging();
			entity.CONNAISSEMENT = this;
		}
		
		private void detach_MAFI(MAFI entity)
		{
			this.SendPropertyChanging();
			entity.CONNAISSEMENT = null;
		}
		
		private void attach_NOTE(NOTE entity)
		{
			this.SendPropertyChanging();
			entity.CONNAISSEMENT = this;
		}
		
		private void detach_NOTE(NOTE entity)
		{
			this.SendPropertyChanging();
			entity.CONNAISSEMENT = null;
		}
		
		private void attach_MOUVEMENT_TC(MOUVEMENT_TC entity)
		{
			this.SendPropertyChanging();
			entity.CONNAISSEMENT = this;
		}
		
		private void detach_MOUVEMENT_TC(MOUVEMENT_TC entity)
		{
			this.SendPropertyChanging();
			entity.CONNAISSEMENT = null;
		}
		
		private void attach_DISPOSITION_CONTENEUR(DISPOSITION_CONTENEUR entity)
		{
			this.SendPropertyChanging();
			entity.CONNAISSEMENT = this;
		}
		
		private void detach_DISPOSITION_CONTENEUR(DISPOSITION_CONTENEUR entity)
		{
			this.SendPropertyChanging();
			entity.CONNAISSEMENT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PROFORMA")]
	public partial class PROFORMA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdFP;
		
		private string _RefAS400;
		
		private System.Nullable<System.DateTime> _DCFP;
		
		private System.Nullable<System.DateTime> _DVFP;
		
		private string _AIFP;
		
		private string _AIVFP;
		
		private string _StatutFP;
		
		private System.Nullable<int> _MHT;
		
		private System.Nullable<int> _MTVA;
		
		private System.Nullable<int> _MTTC;
		
		private System.Nullable<int> _IdBL;
		
		private System.Nullable<int> _IdArm;
		
		private System.Nullable<int> _IdU;
		
		private System.Nullable<int> _IdUV;
		
		private System.Nullable<int> _IdClient;
		
		private string _ClientFacture;
		
		private System.Nullable<int> _MHT_EF;
		
		private System.Nullable<int> _MTVA_EF;
		
		private System.Nullable<int> _MTTC_EF;
		
		private System.Nullable<int> _PROMO;
		
		private EntitySet<LIGNE_PROFORMA> _LIGNE_PROFORMA;
		
		private EntitySet<FACTURE> _FACTURE;
		
		private EntitySet<NOTE> _NOTE;
		
		private EntityRef<CONNAISSEMENT> _CONNAISSEMENT;
		
		private EntityRef<CLIENT> _CLIENT;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdFPChanging(int value);
    partial void OnIdFPChanged();
    partial void OnRefAS400Changing(string value);
    partial void OnRefAS400Changed();
    partial void OnDCFPChanging(System.Nullable<System.DateTime> value);
    partial void OnDCFPChanged();
    partial void OnDVFPChanging(System.Nullable<System.DateTime> value);
    partial void OnDVFPChanged();
    partial void OnAIFPChanging(string value);
    partial void OnAIFPChanged();
    partial void OnAIVFPChanging(string value);
    partial void OnAIVFPChanged();
    partial void OnStatutFPChanging(string value);
    partial void OnStatutFPChanged();
    partial void OnMHTChanging(System.Nullable<int> value);
    partial void OnMHTChanged();
    partial void OnMTVAChanging(System.Nullable<int> value);
    partial void OnMTVAChanged();
    partial void OnMTTCChanging(System.Nullable<int> value);
    partial void OnMTTCChanged();
    partial void OnIdBLChanging(System.Nullable<int> value);
    partial void OnIdBLChanged();
    partial void OnIdArmChanging(System.Nullable<int> value);
    partial void OnIdArmChanged();
    partial void OnIdUChanging(System.Nullable<int> value);
    partial void OnIdUChanged();
    partial void OnIdUVChanging(System.Nullable<int> value);
    partial void OnIdUVChanged();
    partial void OnIdClientChanging(System.Nullable<int> value);
    partial void OnIdClientChanged();
    partial void OnClientFactureChanging(string value);
    partial void OnClientFactureChanged();
    partial void OnMHT_EFChanging(System.Nullable<int> value);
    partial void OnMHT_EFChanged();
    partial void OnMTVA_EFChanging(System.Nullable<int> value);
    partial void OnMTVA_EFChanged();
    partial void OnMTTC_EFChanging(System.Nullable<int> value);
    partial void OnMTTC_EFChanged();
    partial void OnPROMOChanging(System.Nullable<int> value);
    partial void OnPROMOChanged();
    #endregion
		
		public PROFORMA()
		{
			this._LIGNE_PROFORMA = new EntitySet<LIGNE_PROFORMA>(new Action<LIGNE_PROFORMA>(this.attach_LIGNE_PROFORMA), new Action<LIGNE_PROFORMA>(this.detach_LIGNE_PROFORMA));
			this._FACTURE = new EntitySet<FACTURE>(new Action<FACTURE>(this.attach_FACTURE), new Action<FACTURE>(this.detach_FACTURE));
			this._NOTE = new EntitySet<NOTE>(new Action<NOTE>(this.attach_NOTE), new Action<NOTE>(this.detach_NOTE));
			this._CONNAISSEMENT = default(EntityRef<CONNAISSEMENT>);
			this._CLIENT = default(EntityRef<CLIENT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFP", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdFP
		{
			get
			{
				return this._IdFP;
			}
			set
			{
				if ((this._IdFP != value))
				{
					this.OnIdFPChanging(value);
					this.SendPropertyChanging();
					this._IdFP = value;
					this.SendPropertyChanged("IdFP");
					this.OnIdFPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefAS400", DbType="NVarChar(20)")]
		public string RefAS400
		{
			get
			{
				return this._RefAS400;
			}
			set
			{
				if ((this._RefAS400 != value))
				{
					this.OnRefAS400Changing(value);
					this.SendPropertyChanging();
					this._RefAS400 = value;
					this.SendPropertyChanged("RefAS400");
					this.OnRefAS400Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DCFP", DbType="DateTime")]
		public System.Nullable<System.DateTime> DCFP
		{
			get
			{
				return this._DCFP;
			}
			set
			{
				if ((this._DCFP != value))
				{
					this.OnDCFPChanging(value);
					this.SendPropertyChanging();
					this._DCFP = value;
					this.SendPropertyChanged("DCFP");
					this.OnDCFPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DVFP", DbType="DateTime")]
		public System.Nullable<System.DateTime> DVFP
		{
			get
			{
				return this._DVFP;
			}
			set
			{
				if ((this._DVFP != value))
				{
					this.OnDVFPChanging(value);
					this.SendPropertyChanging();
					this._DVFP = value;
					this.SendPropertyChanged("DVFP");
					this.OnDVFPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AIFP", DbType="NVarChar(255)")]
		public string AIFP
		{
			get
			{
				return this._AIFP;
			}
			set
			{
				if ((this._AIFP != value))
				{
					this.OnAIFPChanging(value);
					this.SendPropertyChanging();
					this._AIFP = value;
					this.SendPropertyChanged("AIFP");
					this.OnAIFPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AIVFP", DbType="NVarChar(255)")]
		public string AIVFP
		{
			get
			{
				return this._AIVFP;
			}
			set
			{
				if ((this._AIVFP != value))
				{
					this.OnAIVFPChanging(value);
					this.SendPropertyChanging();
					this._AIVFP = value;
					this.SendPropertyChanged("AIVFP");
					this.OnAIVFPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatutFP", DbType="NVarChar(1)")]
		public string StatutFP
		{
			get
			{
				return this._StatutFP;
			}
			set
			{
				if ((this._StatutFP != value))
				{
					this.OnStatutFPChanging(value);
					this.SendPropertyChanging();
					this._StatutFP = value;
					this.SendPropertyChanged("StatutFP");
					this.OnStatutFPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MHT", DbType="Int")]
		public System.Nullable<int> MHT
		{
			get
			{
				return this._MHT;
			}
			set
			{
				if ((this._MHT != value))
				{
					this.OnMHTChanging(value);
					this.SendPropertyChanging();
					this._MHT = value;
					this.SendPropertyChanged("MHT");
					this.OnMHTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MTVA", DbType="Int")]
		public System.Nullable<int> MTVA
		{
			get
			{
				return this._MTVA;
			}
			set
			{
				if ((this._MTVA != value))
				{
					this.OnMTVAChanging(value);
					this.SendPropertyChanging();
					this._MTVA = value;
					this.SendPropertyChanged("MTVA");
					this.OnMTVAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MTTC", DbType="Int")]
		public System.Nullable<int> MTTC
		{
			get
			{
				return this._MTTC;
			}
			set
			{
				if ((this._MTTC != value))
				{
					this.OnMTTCChanging(value);
					this.SendPropertyChanging();
					this._MTTC = value;
					this.SendPropertyChanged("MTTC");
					this.OnMTTCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdBL", DbType="Int")]
		public System.Nullable<int> IdBL
		{
			get
			{
				return this._IdBL;
			}
			set
			{
				if ((this._IdBL != value))
				{
					if (this._CONNAISSEMENT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdBLChanging(value);
					this.SendPropertyChanging();
					this._IdBL = value;
					this.SendPropertyChanged("IdBL");
					this.OnIdBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdArm", DbType="Int")]
		public System.Nullable<int> IdArm
		{
			get
			{
				return this._IdArm;
			}
			set
			{
				if ((this._IdArm != value))
				{
					this.OnIdArmChanging(value);
					this.SendPropertyChanging();
					this._IdArm = value;
					this.SendPropertyChanged("IdArm");
					this.OnIdArmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdU", DbType="Int")]
		public System.Nullable<int> IdU
		{
			get
			{
				return this._IdU;
			}
			set
			{
				if ((this._IdU != value))
				{
					this.OnIdUChanging(value);
					this.SendPropertyChanging();
					this._IdU = value;
					this.SendPropertyChanged("IdU");
					this.OnIdUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUV", DbType="Int")]
		public System.Nullable<int> IdUV
		{
			get
			{
				return this._IdUV;
			}
			set
			{
				if ((this._IdUV != value))
				{
					this.OnIdUVChanging(value);
					this.SendPropertyChanging();
					this._IdUV = value;
					this.SendPropertyChanged("IdUV");
					this.OnIdUVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdClient", DbType="Int")]
		public System.Nullable<int> IdClient
		{
			get
			{
				return this._IdClient;
			}
			set
			{
				if ((this._IdClient != value))
				{
					if (this._CLIENT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdClientChanging(value);
					this.SendPropertyChanging();
					this._IdClient = value;
					this.SendPropertyChanged("IdClient");
					this.OnIdClientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientFacture", DbType="NVarChar(50)")]
		public string ClientFacture
		{
			get
			{
				return this._ClientFacture;
			}
			set
			{
				if ((this._ClientFacture != value))
				{
					this.OnClientFactureChanging(value);
					this.SendPropertyChanging();
					this._ClientFacture = value;
					this.SendPropertyChanged("ClientFacture");
					this.OnClientFactureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MHT_EF", DbType="Int")]
		public System.Nullable<int> MHT_EF
		{
			get
			{
				return this._MHT_EF;
			}
			set
			{
				if ((this._MHT_EF != value))
				{
					this.OnMHT_EFChanging(value);
					this.SendPropertyChanging();
					this._MHT_EF = value;
					this.SendPropertyChanged("MHT_EF");
					this.OnMHT_EFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MTVA_EF", DbType="int")]
		public System.Nullable<int> MTVA_EF
		{
			get
			{
				return this._MTVA_EF;
			}
			set
			{
				if ((this._MTVA_EF != value))
				{
					this.OnMTVA_EFChanging(value);
					this.SendPropertyChanging();
					this._MTVA_EF = value;
					this.SendPropertyChanged("MTVA_EF");
					this.OnMTVA_EFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MTTC_EF", DbType="int")]
		public System.Nullable<int> MTTC_EF
		{
			get
			{
				return this._MTTC_EF;
			}
			set
			{
				if ((this._MTTC_EF != value))
				{
					this.OnMTTC_EFChanging(value);
					this.SendPropertyChanging();
					this._MTTC_EF = value;
					this.SendPropertyChanged("MTTC_EF");
					this.OnMTTC_EFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PROMO", DbType="int")]
		public System.Nullable<int> PROMO
		{
			get
			{
				return this._PROMO;
			}
			set
			{
				if ((this._PROMO != value))
				{
					this.OnPROMOChanging(value);
					this.SendPropertyChanging();
					this._PROMO = value;
					this.SendPropertyChanged("PROMO");
					this.OnPROMOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PROFORMA_LIGNE_PROFORMA", Storage="_LIGNE_PROFORMA", ThisKey="IdFP", OtherKey="IdFP")]
		public EntitySet<LIGNE_PROFORMA> LIGNE_PROFORMA
		{
			get
			{
				return this._LIGNE_PROFORMA;
			}
			set
			{
				this._LIGNE_PROFORMA.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PROFORMA_FACTURE", Storage="_FACTURE", ThisKey="IdFP", OtherKey="IdFP")]
		public EntitySet<FACTURE> FACTURE
		{
			get
			{
				return this._FACTURE;
			}
			set
			{
				this._FACTURE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PROFORMA_NOTE", Storage="_NOTE", ThisKey="IdFP", OtherKey="IdFP")]
		public EntitySet<NOTE> NOTE
		{
			get
			{
				return this._NOTE;
			}
			set
			{
				this._NOTE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONNAISSEMENT_PROFORMA", Storage="_CONNAISSEMENT", ThisKey="IdBL", OtherKey="IdBL", IsForeignKey=true)]
		public CONNAISSEMENT CONNAISSEMENT
		{
			get
			{
				return this._CONNAISSEMENT.Entity;
			}
			set
			{
				CONNAISSEMENT previousValue = this._CONNAISSEMENT.Entity;
				if (((previousValue != value) 
							|| (this._CONNAISSEMENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CONNAISSEMENT.Entity = null;
						previousValue.PROFORMA.Remove(this);
					}
					this._CONNAISSEMENT.Entity = value;
					if ((value != null))
					{
						value.PROFORMA.Add(this);
						this._IdBL = value.IdBL;
					}
					else
					{
						this._IdBL = default(Nullable<int>);
					}
					this.SendPropertyChanged("CONNAISSEMENT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CLIENT_PROFORMA", Storage="_CLIENT", ThisKey="IdClient", OtherKey="IdClient", IsForeignKey=true)]
		public CLIENT CLIENT
		{
			get
			{
				return this._CLIENT.Entity;
			}
			set
			{
				CLIENT previousValue = this._CLIENT.Entity;
				if (((previousValue != value) 
							|| (this._CLIENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CLIENT.Entity = null;
						previousValue.PROFORMA.Remove(this);
					}
					this._CLIENT.Entity = value;
					if ((value != null))
					{
						value.PROFORMA.Add(this);
						this._IdClient = value.IdClient;
					}
					else
					{
						this._IdClient = default(Nullable<int>);
					}
					this.SendPropertyChanged("CLIENT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LIGNE_PROFORMA(LIGNE_PROFORMA entity)
		{
			this.SendPropertyChanging();
			entity.PROFORMA = this;
		}
		
		private void detach_LIGNE_PROFORMA(LIGNE_PROFORMA entity)
		{
			this.SendPropertyChanging();
			entity.PROFORMA = null;
		}
		
		private void attach_FACTURE(FACTURE entity)
		{
			this.SendPropertyChanging();
			entity.PROFORMA = this;
		}
		
		private void detach_FACTURE(FACTURE entity)
		{
			this.SendPropertyChanging();
			entity.PROFORMA = null;
		}
		
		private void attach_NOTE(NOTE entity)
		{
			this.SendPropertyChanging();
			entity.PROFORMA = this;
		}
		
		private void detach_NOTE(NOTE entity)
		{
			this.SendPropertyChanging();
			entity.PROFORMA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FACTURE")]
	public partial class FACTURE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdFD;
		
		private string _RefAS400;
		
		private System.Nullable<System.DateTime> _DCFD;
		
		private System.Nullable<System.DateTime> _DEFD;
		
		private string _StatutFD;
		
		private System.Nullable<int> _MHT;
		
		private System.Nullable<int> _MTVA;
		
		private System.Nullable<int> _MTTC;
		
		private System.Nullable<int> _IdFP;
		
		private System.Nullable<int> _IdU;
		
		private System.Nullable<int> _IdClient;
		
		private string _AIFD;
		
		private System.Nullable<int> _IdPay;
		
		private System.Nullable<System.DateTime> _DateComptable;
		
		private System.Nullable<int> _IdDocSAP;
		
		private EntitySet<AVOIR> _AVOIR;
		
		private EntitySet<NOTE> _NOTE;
		
		private EntitySet<LIGNE_PAYEMENT> _LIGNE_PAYEMENT;
		
		private EntityRef<PROFORMA> _PROFORMA;
		
		private EntityRef<CLIENT> _CLIENT;
		
		private EntityRef<PAYEMENT> _PAYEMENT;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdFDChanging(int value);
    partial void OnIdFDChanged();
    partial void OnRefAS400Changing(string value);
    partial void OnRefAS400Changed();
    partial void OnDCFDChanging(System.Nullable<System.DateTime> value);
    partial void OnDCFDChanged();
    partial void OnDEFDChanging(System.Nullable<System.DateTime> value);
    partial void OnDEFDChanged();
    partial void OnStatutFDChanging(string value);
    partial void OnStatutFDChanged();
    partial void OnMHTChanging(System.Nullable<int> value);
    partial void OnMHTChanged();
    partial void OnMTVAChanging(System.Nullable<int> value);
    partial void OnMTVAChanged();
    partial void OnMTTCChanging(System.Nullable<int> value);
    partial void OnMTTCChanged();
    partial void OnIdFPChanging(System.Nullable<int> value);
    partial void OnIdFPChanged();
    partial void OnIdUChanging(System.Nullable<int> value);
    partial void OnIdUChanged();
    partial void OnIdClientChanging(System.Nullable<int> value);
    partial void OnIdClientChanged();
    partial void OnAIFDChanging(string value);
    partial void OnAIFDChanged();
    partial void OnIdPayChanging(System.Nullable<int> value);
    partial void OnIdPayChanged();
    partial void OnDateComptableChanging(System.Nullable<System.DateTime> value);
    partial void OnDateComptableChanged();
    partial void OnIdDocSAPChanging(System.Nullable<int> value);
    partial void OnIdDocSAPChanged();
    #endregion
		
		public FACTURE()
		{
			this._AVOIR = new EntitySet<AVOIR>(new Action<AVOIR>(this.attach_AVOIR), new Action<AVOIR>(this.detach_AVOIR));
			this._NOTE = new EntitySet<NOTE>(new Action<NOTE>(this.attach_NOTE), new Action<NOTE>(this.detach_NOTE));
			this._LIGNE_PAYEMENT = new EntitySet<LIGNE_PAYEMENT>(new Action<LIGNE_PAYEMENT>(this.attach_LIGNE_PAYEMENT), new Action<LIGNE_PAYEMENT>(this.detach_LIGNE_PAYEMENT));
			this._PROFORMA = default(EntityRef<PROFORMA>);
			this._CLIENT = default(EntityRef<CLIENT>);
			this._PAYEMENT = default(EntityRef<PAYEMENT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFD", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdFD
		{
			get
			{
				return this._IdFD;
			}
			set
			{
				if ((this._IdFD != value))
				{
					this.OnIdFDChanging(value);
					this.SendPropertyChanging();
					this._IdFD = value;
					this.SendPropertyChanged("IdFD");
					this.OnIdFDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefAS400", DbType="NVarChar(20)")]
		public string RefAS400
		{
			get
			{
				return this._RefAS400;
			}
			set
			{
				if ((this._RefAS400 != value))
				{
					this.OnRefAS400Changing(value);
					this.SendPropertyChanging();
					this._RefAS400 = value;
					this.SendPropertyChanged("RefAS400");
					this.OnRefAS400Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DCFD", DbType="DateTime")]
		public System.Nullable<System.DateTime> DCFD
		{
			get
			{
				return this._DCFD;
			}
			set
			{
				if ((this._DCFD != value))
				{
					this.OnDCFDChanging(value);
					this.SendPropertyChanging();
					this._DCFD = value;
					this.SendPropertyChanged("DCFD");
					this.OnDCFDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DEFD", DbType="DateTime")]
		public System.Nullable<System.DateTime> DEFD
		{
			get
			{
				return this._DEFD;
			}
			set
			{
				if ((this._DEFD != value))
				{
					this.OnDEFDChanging(value);
					this.SendPropertyChanging();
					this._DEFD = value;
					this.SendPropertyChanged("DEFD");
					this.OnDEFDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatutFD", DbType="NVarChar(1)")]
		public string StatutFD
		{
			get
			{
				return this._StatutFD;
			}
			set
			{
				if ((this._StatutFD != value))
				{
					this.OnStatutFDChanging(value);
					this.SendPropertyChanging();
					this._StatutFD = value;
					this.SendPropertyChanged("StatutFD");
					this.OnStatutFDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MHT", DbType="Int")]
		public System.Nullable<int> MHT
		{
			get
			{
				return this._MHT;
			}
			set
			{
				if ((this._MHT != value))
				{
					this.OnMHTChanging(value);
					this.SendPropertyChanging();
					this._MHT = value;
					this.SendPropertyChanged("MHT");
					this.OnMHTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MTVA", DbType="Int")]
		public System.Nullable<int> MTVA
		{
			get
			{
				return this._MTVA;
			}
			set
			{
				if ((this._MTVA != value))
				{
					this.OnMTVAChanging(value);
					this.SendPropertyChanging();
					this._MTVA = value;
					this.SendPropertyChanged("MTVA");
					this.OnMTVAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MTTC", DbType="Int")]
		public System.Nullable<int> MTTC
		{
			get
			{
				return this._MTTC;
			}
			set
			{
				if ((this._MTTC != value))
				{
					this.OnMTTCChanging(value);
					this.SendPropertyChanging();
					this._MTTC = value;
					this.SendPropertyChanged("MTTC");
					this.OnMTTCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFP", DbType="Int")]
		public System.Nullable<int> IdFP
		{
			get
			{
				return this._IdFP;
			}
			set
			{
				if ((this._IdFP != value))
				{
					if (this._PROFORMA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdFPChanging(value);
					this.SendPropertyChanging();
					this._IdFP = value;
					this.SendPropertyChanged("IdFP");
					this.OnIdFPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdU", DbType="Int")]
		public System.Nullable<int> IdU
		{
			get
			{
				return this._IdU;
			}
			set
			{
				if ((this._IdU != value))
				{
					this.OnIdUChanging(value);
					this.SendPropertyChanging();
					this._IdU = value;
					this.SendPropertyChanged("IdU");
					this.OnIdUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdClient", DbType="Int")]
		public System.Nullable<int> IdClient
		{
			get
			{
				return this._IdClient;
			}
			set
			{
				if ((this._IdClient != value))
				{
					if (this._CLIENT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdClientChanging(value);
					this.SendPropertyChanging();
					this._IdClient = value;
					this.SendPropertyChanged("IdClient");
					this.OnIdClientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AIFD", DbType="NVarChar(255)")]
		public string AIFD
		{
			get
			{
				return this._AIFD;
			}
			set
			{
				if ((this._AIFD != value))
				{
					this.OnAIFDChanging(value);
					this.SendPropertyChanging();
					this._AIFD = value;
					this.SendPropertyChanged("AIFD");
					this.OnAIFDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPay", DbType="Int")]
		public System.Nullable<int> IdPay
		{
			get
			{
				return this._IdPay;
			}
			set
			{
				if ((this._IdPay != value))
				{
					if (this._PAYEMENT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdPayChanging(value);
					this.SendPropertyChanging();
					this._IdPay = value;
					this.SendPropertyChanged("IdPay");
					this.OnIdPayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateComptable", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateComptable
		{
			get
			{
				return this._DateComptable;
			}
			set
			{
				if ((this._DateComptable != value))
				{
					this.OnDateComptableChanging(value);
					this.SendPropertyChanging();
					this._DateComptable = value;
					this.SendPropertyChanged("DateComptable");
					this.OnDateComptableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDocSAP", DbType="Int")]
		public System.Nullable<int> IdDocSAP
		{
			get
			{
				return this._IdDocSAP;
			}
			set
			{
				if ((this._IdDocSAP != value))
				{
					this.OnIdDocSAPChanging(value);
					this.SendPropertyChanging();
					this._IdDocSAP = value;
					this.SendPropertyChanged("IdDocSAP");
					this.OnIdDocSAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FACTURE_AVOIR", Storage="_AVOIR", ThisKey="IdFD", OtherKey="IdFD")]
		public EntitySet<AVOIR> AVOIR
		{
			get
			{
				return this._AVOIR;
			}
			set
			{
				this._AVOIR.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FACTURE_NOTE", Storage="_NOTE", ThisKey="IdFD", OtherKey="IdFD")]
		public EntitySet<NOTE> NOTE
		{
			get
			{
				return this._NOTE;
			}
			set
			{
				this._NOTE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FACTURE_LIGNE_PAYEMENT", Storage="_LIGNE_PAYEMENT", ThisKey="IdFD", OtherKey="IdFD")]
		public EntitySet<LIGNE_PAYEMENT> LIGNE_PAYEMENT
		{
			get
			{
				return this._LIGNE_PAYEMENT;
			}
			set
			{
				this._LIGNE_PAYEMENT.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PROFORMA_FACTURE", Storage="_PROFORMA", ThisKey="IdFP", OtherKey="IdFP", IsForeignKey=true, DeleteRule="CASCADE")]
		public PROFORMA PROFORMA
		{
			get
			{
				return this._PROFORMA.Entity;
			}
			set
			{
				PROFORMA previousValue = this._PROFORMA.Entity;
				if (((previousValue != value) 
							|| (this._PROFORMA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PROFORMA.Entity = null;
						previousValue.FACTURE.Remove(this);
					}
					this._PROFORMA.Entity = value;
					if ((value != null))
					{
						value.FACTURE.Add(this);
						this._IdFP = value.IdFP;
					}
					else
					{
						this._IdFP = default(Nullable<int>);
					}
					this.SendPropertyChanged("PROFORMA");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CLIENT_FACTURE", Storage="_CLIENT", ThisKey="IdClient", OtherKey="IdClient", IsForeignKey=true)]
		public CLIENT CLIENT
		{
			get
			{
				return this._CLIENT.Entity;
			}
			set
			{
				CLIENT previousValue = this._CLIENT.Entity;
				if (((previousValue != value) 
							|| (this._CLIENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CLIENT.Entity = null;
						previousValue.FACTURE.Remove(this);
					}
					this._CLIENT.Entity = value;
					if ((value != null))
					{
						value.FACTURE.Add(this);
						this._IdClient = value.IdClient;
					}
					else
					{
						this._IdClient = default(Nullable<int>);
					}
					this.SendPropertyChanged("CLIENT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PAYEMENT_FACTURE", Storage="_PAYEMENT", ThisKey="IdPay", OtherKey="IdPay", IsForeignKey=true)]
		public PAYEMENT PAYEMENT
		{
			get
			{
				return this._PAYEMENT.Entity;
			}
			set
			{
				PAYEMENT previousValue = this._PAYEMENT.Entity;
				if (((previousValue != value) 
							|| (this._PAYEMENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PAYEMENT.Entity = null;
						previousValue.FACTURE.Remove(this);
					}
					this._PAYEMENT.Entity = value;
					if ((value != null))
					{
						value.FACTURE.Add(this);
						this._IdPay = value.IdPay;
					}
					else
					{
						this._IdPay = default(Nullable<int>);
					}
					this.SendPropertyChanged("PAYEMENT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AVOIR(AVOIR entity)
		{
			this.SendPropertyChanging();
			entity.FACTURE = this;
		}
		
		private void detach_AVOIR(AVOIR entity)
		{
			this.SendPropertyChanging();
			entity.FACTURE = null;
		}
		
		private void attach_NOTE(NOTE entity)
		{
			this.SendPropertyChanging();
			entity.FACTURE = this;
		}
		
		private void detach_NOTE(NOTE entity)
		{
			this.SendPropertyChanging();
			entity.FACTURE = null;
		}
		
		private void attach_LIGNE_PAYEMENT(LIGNE_PAYEMENT entity)
		{
			this.SendPropertyChanging();
			entity.FACTURE = this;
		}
		
		private void detach_LIGNE_PAYEMENT(LIGNE_PAYEMENT entity)
		{
			this.SendPropertyChanging();
			entity.FACTURE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VEHICULE")]
	public partial class VEHICULE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdVeh;
		
		private string _NumChassis;
		
		private string _BarCode;
		
		private System.Nullable<System.DateTime> _DCVeh;
		
		private string _DescVeh;
		
		private string _TypeMVeh;
		
		private string _StatutVeh;
		
		private System.Nullable<int> _PoidsMVeh;
		
		private System.Nullable<double> _VolMVeh;
		
		private System.Nullable<float> _LongMVeh;
		
		private System.Nullable<float> _LargMVeh;
		
		private System.Nullable<float> _HautMVeh;
		
		private System.Nullable<short> _NumItem;
		
		private string _InfoMan;
		
		private string _TypeCVeh;
		
		private System.Nullable<int> _PoidsCVeh;
		
		private System.Nullable<double> _VolCVeh;
		
		private System.Nullable<float> _LongCVeh;
		
		private System.Nullable<float> _LargCVeh;
		
		private System.Nullable<float> _HautCVeh;
		
		private string _StatutCVeh;
		
		private string _VehPorte;
		
		private string _VehAttelle;
		
		private string _VehCle;
		
		private string _VehStart;
		
		private string _VehChargé;
		
		private System.Nullable<int> _IdVehAP;
		
		private string _StatVeh;
		
		private System.Nullable<System.DateTime> _FFVeh;
		
		private System.Nullable<System.DateTime> _FSVeh;
		
		private System.Nullable<System.DateTime> _DSRVeh;
		
		private System.Nullable<int> _IdBL;
		
		private System.Nullable<int> _IdMan;
		
		private System.Nullable<int> _IdEsc;
		
		private System.Nullable<int> _IdAcc;
		
		private System.Nullable<int> _IdBAE;
		
		private System.Nullable<int> _IdDBL;
		
		private System.Nullable<int> _IdBS;
		
		private string _NomEnVeh;
		
		private string _CNIEnVeh;
		
		private string _TelenVeh;
		
		private string _NumADDVeh;
		
		private string _NumCIVIOveh;
		
		private string _NumDDVeh;
		
		private string _NumQDVeh;
		
		private string _NumFPADVeh;
		
		private string _NumQPADVeh;
		
		private string _NumAEPADVeh;
		
		private string _NumBESCVeh;
		
		private string _NumSydoniaVeh;
		
		private string _SensVeh;
		
		private System.Nullable<System.DateTime> _DSPVeh;
		
		private string _NumChassisSGS;
		
		private string _CouleurVeh;
		
		private System.Nullable<System.DateTime> _DateVAE;
		
		private EntitySet<OCCUPATION> _OCCUPATION;
		
		private EntitySet<OPERATION_VEHICULE> _OPERATION_VEHICULE;
		
		private EntitySet<ORDRE_SERVICE> _ORDRE_SERVICE;
		
		private EntityRef<VISITE_VEHICULE> _VISITE_VEHICULE;
		
		private EntitySet<DEMANDE_VISITE> _DEMANDE_VISITE;
		
		private EntitySet<CUBAGE_VEHICULE> _CUBAGE_VEHICULE;
		
		private EntitySet<ELEMENT_FACTURATION> _ELEMENT_FACTURATION;
		
		private EntitySet<OPERATION_SINISTRE> _OPERATION_SINISTRE;
		
		private EntitySet<VEHICULE> _VEHICULE2;
		
		private EntitySet<NOTE> _NOTE;
		
		private EntityRef<ESCALE> _ESCALE;
		
		private EntityRef<MANIFESTE> _MANIFESTE;
		
		private EntityRef<CONNAISSEMENT> _CONNAISSEMENT;
		
		private EntityRef<BON_ENLEVEMENT> _BON_ENLEVEMENT;
		
		private EntityRef<DEMANDE_LIVRAISON> _DEMANDE_LIVRAISON;
		
		private EntityRef<BON_SORTIE> _BON_SORTIE;
		
		private EntityRef<VEHICULE> _VEHICULE1;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdVehChanging(int value);
    partial void OnIdVehChanged();
    partial void OnNumChassisChanging(string value);
    partial void OnNumChassisChanged();
    partial void OnBarCodeChanging(string value);
    partial void OnBarCodeChanged();
    partial void OnDCVehChanging(System.Nullable<System.DateTime> value);
    partial void OnDCVehChanged();
    partial void OnDescVehChanging(string value);
    partial void OnDescVehChanged();
    partial void OnTypeMVehChanging(string value);
    partial void OnTypeMVehChanged();
    partial void OnStatutVehChanging(string value);
    partial void OnStatutVehChanged();
    partial void OnPoidsMVehChanging(System.Nullable<int> value);
    partial void OnPoidsMVehChanged();
    partial void OnVolMVehChanging(System.Nullable<double> value);
    partial void OnVolMVehChanged();
    partial void OnLongMVehChanging(System.Nullable<float> value);
    partial void OnLongMVehChanged();
    partial void OnLargMVehChanging(System.Nullable<float> value);
    partial void OnLargMVehChanged();
    partial void OnHautMVehChanging(System.Nullable<float> value);
    partial void OnHautMVehChanged();
    partial void OnNumItemChanging(System.Nullable<short> value);
    partial void OnNumItemChanged();
    partial void OnInfoManChanging(string value);
    partial void OnInfoManChanged();
    partial void OnTypeCVehChanging(string value);
    partial void OnTypeCVehChanged();
    partial void OnPoidsCVehChanging(System.Nullable<int> value);
    partial void OnPoidsCVehChanged();
    partial void OnVolCVehChanging(System.Nullable<double> value);
    partial void OnVolCVehChanged();
    partial void OnLongCVehChanging(System.Nullable<float> value);
    partial void OnLongCVehChanged();
    partial void OnLargCVehChanging(System.Nullable<float> value);
    partial void OnLargCVehChanged();
    partial void OnHautCVehChanging(System.Nullable<float> value);
    partial void OnHautCVehChanged();
    partial void OnStatutCVehChanging(string value);
    partial void OnStatutCVehChanged();
    partial void OnVehPorteChanging(string value);
    partial void OnVehPorteChanged();
    partial void OnVehAttelleChanging(string value);
    partial void OnVehAttelleChanged();
    partial void OnVehCleChanging(string value);
    partial void OnVehCleChanged();
    partial void OnVehStartChanging(string value);
    partial void OnVehStartChanged();
    partial void OnVehChargéChanging(string value);
    partial void OnVehChargéChanged();
    partial void OnIdVehAPChanging(System.Nullable<int> value);
    partial void OnIdVehAPChanged();
    partial void OnStatVehChanging(string value);
    partial void OnStatVehChanged();
    partial void OnFFVehChanging(System.Nullable<System.DateTime> value);
    partial void OnFFVehChanged();
    partial void OnFSVehChanging(System.Nullable<System.DateTime> value);
    partial void OnFSVehChanged();
    partial void OnDSRVehChanging(System.Nullable<System.DateTime> value);
    partial void OnDSRVehChanged();
    partial void OnIdBLChanging(System.Nullable<int> value);
    partial void OnIdBLChanged();
    partial void OnIdManChanging(System.Nullable<int> value);
    partial void OnIdManChanged();
    partial void OnIdEscChanging(System.Nullable<int> value);
    partial void OnIdEscChanged();
    partial void OnIdAccChanging(System.Nullable<int> value);
    partial void OnIdAccChanged();
    partial void OnIdBAEChanging(System.Nullable<int> value);
    partial void OnIdBAEChanged();
    partial void OnIdDBLChanging(System.Nullable<int> value);
    partial void OnIdDBLChanged();
    partial void OnIdBSChanging(System.Nullable<int> value);
    partial void OnIdBSChanged();
    partial void OnNomEnVehChanging(string value);
    partial void OnNomEnVehChanged();
    partial void OnCNIEnVehChanging(string value);
    partial void OnCNIEnVehChanged();
    partial void OnTelenVehChanging(string value);
    partial void OnTelenVehChanged();
    partial void OnNumADDVehChanging(string value);
    partial void OnNumADDVehChanged();
    partial void OnNumCIVIOvehChanging(string value);
    partial void OnNumCIVIOvehChanged();
    partial void OnNumDDVehChanging(string value);
    partial void OnNumDDVehChanged();
    partial void OnNumQDVehChanging(string value);
    partial void OnNumQDVehChanged();
    partial void OnNumFPADVehChanging(string value);
    partial void OnNumFPADVehChanged();
    partial void OnNumQPADVehChanging(string value);
    partial void OnNumQPADVehChanged();
    partial void OnNumAEPADVehChanging(string value);
    partial void OnNumAEPADVehChanged();
    partial void OnNumBESCVehChanging(string value);
    partial void OnNumBESCVehChanged();
    partial void OnNumSydoniaVehChanging(string value);
    partial void OnNumSydoniaVehChanged();
    partial void OnSensVehChanging(string value);
    partial void OnSensVehChanged();
    partial void OnDSPVehChanging(System.Nullable<System.DateTime> value);
    partial void OnDSPVehChanged();
    partial void OnNumChassisSGSChanging(string value);
    partial void OnNumChassisSGSChanged();
    partial void OnCouleurVehChanging(string value);
    partial void OnCouleurVehChanged();
    partial void OnDateVAEChanging(System.Nullable<System.DateTime> value);
    partial void OnDateVAEChanged();
    #endregion
		
		public VEHICULE()
		{
			this._OCCUPATION = new EntitySet<OCCUPATION>(new Action<OCCUPATION>(this.attach_OCCUPATION), new Action<OCCUPATION>(this.detach_OCCUPATION));
			this._OPERATION_VEHICULE = new EntitySet<OPERATION_VEHICULE>(new Action<OPERATION_VEHICULE>(this.attach_OPERATION_VEHICULE), new Action<OPERATION_VEHICULE>(this.detach_OPERATION_VEHICULE));
			this._ORDRE_SERVICE = new EntitySet<ORDRE_SERVICE>(new Action<ORDRE_SERVICE>(this.attach_ORDRE_SERVICE), new Action<ORDRE_SERVICE>(this.detach_ORDRE_SERVICE));
			this._VISITE_VEHICULE = default(EntityRef<VISITE_VEHICULE>);
			this._DEMANDE_VISITE = new EntitySet<DEMANDE_VISITE>(new Action<DEMANDE_VISITE>(this.attach_DEMANDE_VISITE), new Action<DEMANDE_VISITE>(this.detach_DEMANDE_VISITE));
			this._CUBAGE_VEHICULE = new EntitySet<CUBAGE_VEHICULE>(new Action<CUBAGE_VEHICULE>(this.attach_CUBAGE_VEHICULE), new Action<CUBAGE_VEHICULE>(this.detach_CUBAGE_VEHICULE));
			this._ELEMENT_FACTURATION = new EntitySet<ELEMENT_FACTURATION>(new Action<ELEMENT_FACTURATION>(this.attach_ELEMENT_FACTURATION), new Action<ELEMENT_FACTURATION>(this.detach_ELEMENT_FACTURATION));
			this._OPERATION_SINISTRE = new EntitySet<OPERATION_SINISTRE>(new Action<OPERATION_SINISTRE>(this.attach_OPERATION_SINISTRE), new Action<OPERATION_SINISTRE>(this.detach_OPERATION_SINISTRE));
			this._VEHICULE2 = new EntitySet<VEHICULE>(new Action<VEHICULE>(this.attach_VEHICULE2), new Action<VEHICULE>(this.detach_VEHICULE2));
			this._NOTE = new EntitySet<NOTE>(new Action<NOTE>(this.attach_NOTE), new Action<NOTE>(this.detach_NOTE));
			this._ESCALE = default(EntityRef<ESCALE>);
			this._MANIFESTE = default(EntityRef<MANIFESTE>);
			this._CONNAISSEMENT = default(EntityRef<CONNAISSEMENT>);
			this._BON_ENLEVEMENT = default(EntityRef<BON_ENLEVEMENT>);
			this._DEMANDE_LIVRAISON = default(EntityRef<DEMANDE_LIVRAISON>);
			this._BON_SORTIE = default(EntityRef<BON_SORTIE>);
			this._VEHICULE1 = default(EntityRef<VEHICULE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdVeh", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdVeh
		{
			get
			{
				return this._IdVeh;
			}
			set
			{
				if ((this._IdVeh != value))
				{
					this.OnIdVehChanging(value);
					this.SendPropertyChanging();
					this._IdVeh = value;
					this.SendPropertyChanged("IdVeh");
					this.OnIdVehChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumChassis", DbType="NVarChar(20)")]
		public string NumChassis
		{
			get
			{
				return this._NumChassis;
			}
			set
			{
				if ((this._NumChassis != value))
				{
					this.OnNumChassisChanging(value);
					this.SendPropertyChanging();
					this._NumChassis = value;
					this.SendPropertyChanged("NumChassis");
					this.OnNumChassisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BarCode", DbType="NVarChar(30)")]
		public string BarCode
		{
			get
			{
				return this._BarCode;
			}
			set
			{
				if ((this._BarCode != value))
				{
					this.OnBarCodeChanging(value);
					this.SendPropertyChanging();
					this._BarCode = value;
					this.SendPropertyChanged("BarCode");
					this.OnBarCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DCVeh", DbType="DateTime")]
		public System.Nullable<System.DateTime> DCVeh
		{
			get
			{
				return this._DCVeh;
			}
			set
			{
				if ((this._DCVeh != value))
				{
					this.OnDCVehChanging(value);
					this.SendPropertyChanging();
					this._DCVeh = value;
					this.SendPropertyChanged("DCVeh");
					this.OnDCVehChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescVeh", DbType="NVarChar(255)")]
		public string DescVeh
		{
			get
			{
				return this._DescVeh;
			}
			set
			{
				if ((this._DescVeh != value))
				{
					this.OnDescVehChanging(value);
					this.SendPropertyChanging();
					this._DescVeh = value;
					this.SendPropertyChanged("DescVeh");
					this.OnDescVehChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeMVeh", DbType="NVarChar(1)")]
		public string TypeMVeh
		{
			get
			{
				return this._TypeMVeh;
			}
			set
			{
				if ((this._TypeMVeh != value))
				{
					this.OnTypeMVehChanging(value);
					this.SendPropertyChanging();
					this._TypeMVeh = value;
					this.SendPropertyChanged("TypeMVeh");
					this.OnTypeMVehChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatutVeh", DbType="NVarChar(1)")]
		public string StatutVeh
		{
			get
			{
				return this._StatutVeh;
			}
			set
			{
				if ((this._StatutVeh != value))
				{
					this.OnStatutVehChanging(value);
					this.SendPropertyChanging();
					this._StatutVeh = value;
					this.SendPropertyChanged("StatutVeh");
					this.OnStatutVehChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PoidsMVeh", DbType="Int")]
		public System.Nullable<int> PoidsMVeh
		{
			get
			{
				return this._PoidsMVeh;
			}
			set
			{
				if ((this._PoidsMVeh != value))
				{
					this.OnPoidsMVehChanging(value);
					this.SendPropertyChanging();
					this._PoidsMVeh = value;
					this.SendPropertyChanged("PoidsMVeh");
					this.OnPoidsMVehChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VolMVeh", DbType="Float")]
		public System.Nullable<double> VolMVeh
		{
			get
			{
				return this._VolMVeh;
			}
			set
			{
				if ((this._VolMVeh != value))
				{
					this.OnVolMVehChanging(value);
					this.SendPropertyChanging();
					this._VolMVeh = value;
					this.SendPropertyChanged("VolMVeh");
					this.OnVolMVehChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LongMVeh", DbType="Real")]
		public System.Nullable<float> LongMVeh
		{
			get
			{
				return this._LongMVeh;
			}
			set
			{
				if ((this._LongMVeh != value))
				{
					this.OnLongMVehChanging(value);
					this.SendPropertyChanging();
					this._LongMVeh = value;
					this.SendPropertyChanged("LongMVeh");
					this.OnLongMVehChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LargMVeh", DbType="Real")]
		public System.Nullable<float> LargMVeh
		{
			get
			{
				return this._LargMVeh;
			}
			set
			{
				if ((this._LargMVeh != value))
				{
					this.OnLargMVehChanging(value);
					this.SendPropertyChanging();
					this._LargMVeh = value;
					this.SendPropertyChanged("LargMVeh");
					this.OnLargMVehChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HautMVeh", DbType="Real")]
		public System.Nullable<float> HautMVeh
		{
			get
			{
				return this._HautMVeh;
			}
			set
			{
				if ((this._HautMVeh != value))
				{
					this.OnHautMVehChanging(value);
					this.SendPropertyChanging();
					this._HautMVeh = value;
					this.SendPropertyChanged("HautMVeh");
					this.OnHautMVehChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumItem", DbType="SmallInt")]
		public System.Nullable<short> NumItem
		{
			get
			{
				return this._NumItem;
			}
			set
			{
				if ((this._NumItem != value))
				{
					this.OnNumItemChanging(value);
					this.SendPropertyChanging();
					this._NumItem = value;
					this.SendPropertyChanged("NumItem");
					this.OnNumItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InfoMan", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string InfoMan
		{
			get
			{
				return this._InfoMan;
			}
			set
			{
				if ((this._InfoMan != value))
				{
					this.OnInfoManChanging(value);
					this.SendPropertyChanging();
					this._InfoMan = value;
					this.SendPropertyChanged("InfoMan");
					this.OnInfoManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeCVeh", DbType="NVarChar(1)")]
		public string TypeCVeh
		{
			get
			{
				return this._TypeCVeh;
			}
			set
			{
				if ((this._TypeCVeh != value))
				{
					this.OnTypeCVehChanging(value);
					this.SendPropertyChanging();
					this._TypeCVeh = value;
					this.SendPropertyChanged("TypeCVeh");
					this.OnTypeCVehChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PoidsCVeh", DbType="Int")]
		public System.Nullable<int> PoidsCVeh
		{
			get
			{
				return this._PoidsCVeh;
			}
			set
			{
				if ((this._PoidsCVeh != value))
				{
					this.OnPoidsCVehChanging(value);
					this.SendPropertyChanging();
					this._PoidsCVeh = value;
					this.SendPropertyChanged("PoidsCVeh");
					this.OnPoidsCVehChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VolCVeh", DbType="Float")]
		public System.Nullable<double> VolCVeh
		{
			get
			{
				return this._VolCVeh;
			}
			set
			{
				if ((this._VolCVeh != value))
				{
					this.OnVolCVehChanging(value);
					this.SendPropertyChanging();
					this._VolCVeh = value;
					this.SendPropertyChanged("VolCVeh");
					this.OnVolCVehChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LongCVeh", DbType="Real")]
		public System.Nullable<float> LongCVeh
		{
			get
			{
				return this._LongCVeh;
			}
			set
			{
				if ((this._LongCVeh != value))
				{
					this.OnLongCVehChanging(value);
					this.SendPropertyChanging();
					this._LongCVeh = value;
					this.SendPropertyChanged("LongCVeh");
					this.OnLongCVehChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LargCVeh", DbType="Real")]
		public System.Nullable<float> LargCVeh
		{
			get
			{
				return this._LargCVeh;
			}
			set
			{
				if ((this._LargCVeh != value))
				{
					this.OnLargCVehChanging(value);
					this.SendPropertyChanging();
					this._LargCVeh = value;
					this.SendPropertyChanged("LargCVeh");
					this.OnLargCVehChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HautCVeh", DbType="Real")]
		public System.Nullable<float> HautCVeh
		{
			get
			{
				return this._HautCVeh;
			}
			set
			{
				if ((this._HautCVeh != value))
				{
					this.OnHautCVehChanging(value);
					this.SendPropertyChanging();
					this._HautCVeh = value;
					this.SendPropertyChanged("HautCVeh");
					this.OnHautCVehChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatutCVeh", DbType="NVarChar(1)")]
		public string StatutCVeh
		{
			get
			{
				return this._StatutCVeh;
			}
			set
			{
				if ((this._StatutCVeh != value))
				{
					this.OnStatutCVehChanging(value);
					this.SendPropertyChanging();
					this._StatutCVeh = value;
					this.SendPropertyChanged("StatutCVeh");
					this.OnStatutCVehChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehPorte", DbType="NVarChar(1)")]
		public string VehPorte
		{
			get
			{
				return this._VehPorte;
			}
			set
			{
				if ((this._VehPorte != value))
				{
					this.OnVehPorteChanging(value);
					this.SendPropertyChanging();
					this._VehPorte = value;
					this.SendPropertyChanged("VehPorte");
					this.OnVehPorteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehAttelle", DbType="NVarChar(1)")]
		public string VehAttelle
		{
			get
			{
				return this._VehAttelle;
			}
			set
			{
				if ((this._VehAttelle != value))
				{
					this.OnVehAttelleChanging(value);
					this.SendPropertyChanging();
					this._VehAttelle = value;
					this.SendPropertyChanged("VehAttelle");
					this.OnVehAttelleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehCle", DbType="NVarChar(1)")]
		public string VehCle
		{
			get
			{
				return this._VehCle;
			}
			set
			{
				if ((this._VehCle != value))
				{
					this.OnVehCleChanging(value);
					this.SendPropertyChanging();
					this._VehCle = value;
					this.SendPropertyChanged("VehCle");
					this.OnVehCleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehStart", DbType="NVarChar(1)")]
		public string VehStart
		{
			get
			{
				return this._VehStart;
			}
			set
			{
				if ((this._VehStart != value))
				{
					this.OnVehStartChanging(value);
					this.SendPropertyChanging();
					this._VehStart = value;
					this.SendPropertyChanged("VehStart");
					this.OnVehStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehChargé", DbType="NVarChar(1)")]
		public string VehChargé
		{
			get
			{
				return this._VehChargé;
			}
			set
			{
				if ((this._VehChargé != value))
				{
					this.OnVehChargéChanging(value);
					this.SendPropertyChanging();
					this._VehChargé = value;
					this.SendPropertyChanged("VehChargé");
					this.OnVehChargéChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdVehAP", DbType="Int")]
		public System.Nullable<int> IdVehAP
		{
			get
			{
				return this._IdVehAP;
			}
			set
			{
				if ((this._IdVehAP != value))
				{
					if (this._VEHICULE1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdVehAPChanging(value);
					this.SendPropertyChanging();
					this._IdVehAP = value;
					this.SendPropertyChanged("IdVehAP");
					this.OnIdVehAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatVeh", DbType="NVarChar(25)")]
		public string StatVeh
		{
			get
			{
				return this._StatVeh;
			}
			set
			{
				if ((this._StatVeh != value))
				{
					this.OnStatVehChanging(value);
					this.SendPropertyChanging();
					this._StatVeh = value;
					this.SendPropertyChanged("StatVeh");
					this.OnStatVehChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FFVeh", DbType="DateTime")]
		public System.Nullable<System.DateTime> FFVeh
		{
			get
			{
				return this._FFVeh;
			}
			set
			{
				if ((this._FFVeh != value))
				{
					this.OnFFVehChanging(value);
					this.SendPropertyChanging();
					this._FFVeh = value;
					this.SendPropertyChanged("FFVeh");
					this.OnFFVehChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FSVeh", DbType="DateTime")]
		public System.Nullable<System.DateTime> FSVeh
		{
			get
			{
				return this._FSVeh;
			}
			set
			{
				if ((this._FSVeh != value))
				{
					this.OnFSVehChanging(value);
					this.SendPropertyChanging();
					this._FSVeh = value;
					this.SendPropertyChanged("FSVeh");
					this.OnFSVehChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DSRVeh", DbType="DateTime")]
		public System.Nullable<System.DateTime> DSRVeh
		{
			get
			{
				return this._DSRVeh;
			}
			set
			{
				if ((this._DSRVeh != value))
				{
					this.OnDSRVehChanging(value);
					this.SendPropertyChanging();
					this._DSRVeh = value;
					this.SendPropertyChanged("DSRVeh");
					this.OnDSRVehChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdBL", DbType="Int")]
		public System.Nullable<int> IdBL
		{
			get
			{
				return this._IdBL;
			}
			set
			{
				if ((this._IdBL != value))
				{
					if (this._CONNAISSEMENT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdBLChanging(value);
					this.SendPropertyChanging();
					this._IdBL = value;
					this.SendPropertyChanged("IdBL");
					this.OnIdBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdMan", DbType="Int")]
		public System.Nullable<int> IdMan
		{
			get
			{
				return this._IdMan;
			}
			set
			{
				if ((this._IdMan != value))
				{
					if (this._MANIFESTE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdManChanging(value);
					this.SendPropertyChanging();
					this._IdMan = value;
					this.SendPropertyChanged("IdMan");
					this.OnIdManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEsc", DbType="Int")]
		public System.Nullable<int> IdEsc
		{
			get
			{
				return this._IdEsc;
			}
			set
			{
				if ((this._IdEsc != value))
				{
					if (this._ESCALE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdEscChanging(value);
					this.SendPropertyChanging();
					this._IdEsc = value;
					this.SendPropertyChanged("IdEsc");
					this.OnIdEscChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdAcc", DbType="Int")]
		public System.Nullable<int> IdAcc
		{
			get
			{
				return this._IdAcc;
			}
			set
			{
				if ((this._IdAcc != value))
				{
					this.OnIdAccChanging(value);
					this.SendPropertyChanging();
					this._IdAcc = value;
					this.SendPropertyChanged("IdAcc");
					this.OnIdAccChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdBAE", DbType="Int")]
		public System.Nullable<int> IdBAE
		{
			get
			{
				return this._IdBAE;
			}
			set
			{
				if ((this._IdBAE != value))
				{
					if (this._BON_ENLEVEMENT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdBAEChanging(value);
					this.SendPropertyChanging();
					this._IdBAE = value;
					this.SendPropertyChanged("IdBAE");
					this.OnIdBAEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDBL", DbType="Int")]
		public System.Nullable<int> IdDBL
		{
			get
			{
				return this._IdDBL;
			}
			set
			{
				if ((this._IdDBL != value))
				{
					if (this._DEMANDE_LIVRAISON.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdDBLChanging(value);
					this.SendPropertyChanging();
					this._IdDBL = value;
					this.SendPropertyChanged("IdDBL");
					this.OnIdDBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdBS", DbType="Int")]
		public System.Nullable<int> IdBS
		{
			get
			{
				return this._IdBS;
			}
			set
			{
				if ((this._IdBS != value))
				{
					if (this._BON_SORTIE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdBSChanging(value);
					this.SendPropertyChanging();
					this._IdBS = value;
					this.SendPropertyChanged("IdBS");
					this.OnIdBSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NomEnVeh", DbType="NVarChar(50)")]
		public string NomEnVeh
		{
			get
			{
				return this._NomEnVeh;
			}
			set
			{
				if ((this._NomEnVeh != value))
				{
					this.OnNomEnVehChanging(value);
					this.SendPropertyChanging();
					this._NomEnVeh = value;
					this.SendPropertyChanged("NomEnVeh");
					this.OnNomEnVehChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CNIEnVeh", DbType="NVarChar(20)")]
		public string CNIEnVeh
		{
			get
			{
				return this._CNIEnVeh;
			}
			set
			{
				if ((this._CNIEnVeh != value))
				{
					this.OnCNIEnVehChanging(value);
					this.SendPropertyChanging();
					this._CNIEnVeh = value;
					this.SendPropertyChanged("CNIEnVeh");
					this.OnCNIEnVehChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelenVeh", DbType="NVarChar(20)")]
		public string TelenVeh
		{
			get
			{
				return this._TelenVeh;
			}
			set
			{
				if ((this._TelenVeh != value))
				{
					this.OnTelenVehChanging(value);
					this.SendPropertyChanging();
					this._TelenVeh = value;
					this.SendPropertyChanged("TelenVeh");
					this.OnTelenVehChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumADDVeh", DbType="NVarChar(20)")]
		public string NumADDVeh
		{
			get
			{
				return this._NumADDVeh;
			}
			set
			{
				if ((this._NumADDVeh != value))
				{
					this.OnNumADDVehChanging(value);
					this.SendPropertyChanging();
					this._NumADDVeh = value;
					this.SendPropertyChanged("NumADDVeh");
					this.OnNumADDVehChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumCIVIOveh", DbType="NVarChar(20)")]
		public string NumCIVIOveh
		{
			get
			{
				return this._NumCIVIOveh;
			}
			set
			{
				if ((this._NumCIVIOveh != value))
				{
					this.OnNumCIVIOvehChanging(value);
					this.SendPropertyChanging();
					this._NumCIVIOveh = value;
					this.SendPropertyChanged("NumCIVIOveh");
					this.OnNumCIVIOvehChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumDDVeh", DbType="NVarChar(20)")]
		public string NumDDVeh
		{
			get
			{
				return this._NumDDVeh;
			}
			set
			{
				if ((this._NumDDVeh != value))
				{
					this.OnNumDDVehChanging(value);
					this.SendPropertyChanging();
					this._NumDDVeh = value;
					this.SendPropertyChanged("NumDDVeh");
					this.OnNumDDVehChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumQDVeh", DbType="NVarChar(20)")]
		public string NumQDVeh
		{
			get
			{
				return this._NumQDVeh;
			}
			set
			{
				if ((this._NumQDVeh != value))
				{
					this.OnNumQDVehChanging(value);
					this.SendPropertyChanging();
					this._NumQDVeh = value;
					this.SendPropertyChanged("NumQDVeh");
					this.OnNumQDVehChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumFPADVeh", DbType="NVarChar(20)")]
		public string NumFPADVeh
		{
			get
			{
				return this._NumFPADVeh;
			}
			set
			{
				if ((this._NumFPADVeh != value))
				{
					this.OnNumFPADVehChanging(value);
					this.SendPropertyChanging();
					this._NumFPADVeh = value;
					this.SendPropertyChanged("NumFPADVeh");
					this.OnNumFPADVehChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumQPADVeh", DbType="NVarChar(20)")]
		public string NumQPADVeh
		{
			get
			{
				return this._NumQPADVeh;
			}
			set
			{
				if ((this._NumQPADVeh != value))
				{
					this.OnNumQPADVehChanging(value);
					this.SendPropertyChanging();
					this._NumQPADVeh = value;
					this.SendPropertyChanged("NumQPADVeh");
					this.OnNumQPADVehChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumAEPADVeh", DbType="NVarChar(20)")]
		public string NumAEPADVeh
		{
			get
			{
				return this._NumAEPADVeh;
			}
			set
			{
				if ((this._NumAEPADVeh != value))
				{
					this.OnNumAEPADVehChanging(value);
					this.SendPropertyChanging();
					this._NumAEPADVeh = value;
					this.SendPropertyChanged("NumAEPADVeh");
					this.OnNumAEPADVehChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumBESCVeh", DbType="NVarChar(20)")]
		public string NumBESCVeh
		{
			get
			{
				return this._NumBESCVeh;
			}
			set
			{
				if ((this._NumBESCVeh != value))
				{
					this.OnNumBESCVehChanging(value);
					this.SendPropertyChanging();
					this._NumBESCVeh = value;
					this.SendPropertyChanged("NumBESCVeh");
					this.OnNumBESCVehChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumSydoniaVeh", DbType="NVarChar(20)")]
		public string NumSydoniaVeh
		{
			get
			{
				return this._NumSydoniaVeh;
			}
			set
			{
				if ((this._NumSydoniaVeh != value))
				{
					this.OnNumSydoniaVehChanging(value);
					this.SendPropertyChanging();
					this._NumSydoniaVeh = value;
					this.SendPropertyChanged("NumSydoniaVeh");
					this.OnNumSydoniaVehChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SensVeh", DbType="NVarChar(1)")]
		public string SensVeh
		{
			get
			{
				return this._SensVeh;
			}
			set
			{
				if ((this._SensVeh != value))
				{
					this.OnSensVehChanging(value);
					this.SendPropertyChanging();
					this._SensVeh = value;
					this.SendPropertyChanged("SensVeh");
					this.OnSensVehChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DSPVeh", DbType="DateTime")]
		public System.Nullable<System.DateTime> DSPVeh
		{
			get
			{
				return this._DSPVeh;
			}
			set
			{
				if ((this._DSPVeh != value))
				{
					this.OnDSPVehChanging(value);
					this.SendPropertyChanging();
					this._DSPVeh = value;
					this.SendPropertyChanged("DSPVeh");
					this.OnDSPVehChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumChassisSGS", DbType="NVarChar(20)")]
		public string NumChassisSGS
		{
			get
			{
				return this._NumChassisSGS;
			}
			set
			{
				if ((this._NumChassisSGS != value))
				{
					this.OnNumChassisSGSChanging(value);
					this.SendPropertyChanging();
					this._NumChassisSGS = value;
					this.SendPropertyChanged("NumChassisSGS");
					this.OnNumChassisSGSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CouleurVeh", DbType="NVarChar(20)")]
		public string CouleurVeh
		{
			get
			{
				return this._CouleurVeh;
			}
			set
			{
				if ((this._CouleurVeh != value))
				{
					this.OnCouleurVehChanging(value);
					this.SendPropertyChanging();
					this._CouleurVeh = value;
					this.SendPropertyChanged("CouleurVeh");
					this.OnCouleurVehChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateVAE", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateVAE
		{
			get
			{
				return this._DateVAE;
			}
			set
			{
				if ((this._DateVAE != value))
				{
					this.OnDateVAEChanging(value);
					this.SendPropertyChanging();
					this._DateVAE = value;
					this.SendPropertyChanged("DateVAE");
					this.OnDateVAEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VEHICULE_OCCUPATION", Storage="_OCCUPATION", ThisKey="IdVeh", OtherKey="IdVeh")]
		public EntitySet<OCCUPATION> OCCUPATION
		{
			get
			{
				return this._OCCUPATION;
			}
			set
			{
				this._OCCUPATION.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VEHICULE_OPERATION_VEHICULE", Storage="_OPERATION_VEHICULE", ThisKey="IdVeh", OtherKey="IdVeh")]
		public EntitySet<OPERATION_VEHICULE> OPERATION_VEHICULE
		{
			get
			{
				return this._OPERATION_VEHICULE;
			}
			set
			{
				this._OPERATION_VEHICULE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VEHICULE_ORDRE_SERVICE", Storage="_ORDRE_SERVICE", ThisKey="IdVeh", OtherKey="IdVeh")]
		public EntitySet<ORDRE_SERVICE> ORDRE_SERVICE
		{
			get
			{
				return this._ORDRE_SERVICE;
			}
			set
			{
				this._ORDRE_SERVICE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VEHICULE_VISITE_VEHICULE", Storage="_VISITE_VEHICULE", ThisKey="IdVeh", OtherKey="IdVeh", IsUnique=true, IsForeignKey=false)]
		public VISITE_VEHICULE VISITE_VEHICULE
		{
			get
			{
				return this._VISITE_VEHICULE.Entity;
			}
			set
			{
				VISITE_VEHICULE previousValue = this._VISITE_VEHICULE.Entity;
				if (((previousValue != value) 
							|| (this._VISITE_VEHICULE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VISITE_VEHICULE.Entity = null;
						previousValue.VEHICULE = null;
					}
					this._VISITE_VEHICULE.Entity = value;
					if ((value != null))
					{
						value.VEHICULE = this;
					}
					this.SendPropertyChanged("VISITE_VEHICULE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VEHICULE_DEMANDE_VISITE", Storage="_DEMANDE_VISITE", ThisKey="IdVeh", OtherKey="IdVeh")]
		public EntitySet<DEMANDE_VISITE> DEMANDE_VISITE
		{
			get
			{
				return this._DEMANDE_VISITE;
			}
			set
			{
				this._DEMANDE_VISITE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VEHICULE_CUBAGE_VEHICULE", Storage="_CUBAGE_VEHICULE", ThisKey="IdVeh", OtherKey="IdVeh")]
		public EntitySet<CUBAGE_VEHICULE> CUBAGE_VEHICULE
		{
			get
			{
				return this._CUBAGE_VEHICULE;
			}
			set
			{
				this._CUBAGE_VEHICULE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VEHICULE_ELEMENT_FACTURATION", Storage="_ELEMENT_FACTURATION", ThisKey="IdVeh", OtherKey="IdVeh")]
		public EntitySet<ELEMENT_FACTURATION> ELEMENT_FACTURATION
		{
			get
			{
				return this._ELEMENT_FACTURATION;
			}
			set
			{
				this._ELEMENT_FACTURATION.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VEHICULE_OPERATION_SINISTRE", Storage="_OPERATION_SINISTRE", ThisKey="IdVeh", OtherKey="IdVeh")]
		public EntitySet<OPERATION_SINISTRE> OPERATION_SINISTRE
		{
			get
			{
				return this._OPERATION_SINISTRE;
			}
			set
			{
				this._OPERATION_SINISTRE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VEHICULE_VEHICULE", Storage="_VEHICULE2", ThisKey="IdVeh", OtherKey="IdVehAP")]
		public EntitySet<VEHICULE> VEHICULE2
		{
			get
			{
				return this._VEHICULE2;
			}
			set
			{
				this._VEHICULE2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VEHICULE_NOTE", Storage="_NOTE", ThisKey="IdVeh", OtherKey="IdVeh")]
		public EntitySet<NOTE> NOTE
		{
			get
			{
				return this._NOTE;
			}
			set
			{
				this._NOTE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ESCALE_VEHICULE", Storage="_ESCALE", ThisKey="IdEsc", OtherKey="IdEsc", IsForeignKey=true)]
		public ESCALE ESCALE
		{
			get
			{
				return this._ESCALE.Entity;
			}
			set
			{
				ESCALE previousValue = this._ESCALE.Entity;
				if (((previousValue != value) 
							|| (this._ESCALE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ESCALE.Entity = null;
						previousValue.VEHICULE.Remove(this);
					}
					this._ESCALE.Entity = value;
					if ((value != null))
					{
						value.VEHICULE.Add(this);
						this._IdEsc = value.IdEsc;
					}
					else
					{
						this._IdEsc = default(Nullable<int>);
					}
					this.SendPropertyChanged("ESCALE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MANIFESTE_VEHICULE", Storage="_MANIFESTE", ThisKey="IdMan", OtherKey="IdMan", IsForeignKey=true)]
		public MANIFESTE MANIFESTE
		{
			get
			{
				return this._MANIFESTE.Entity;
			}
			set
			{
				MANIFESTE previousValue = this._MANIFESTE.Entity;
				if (((previousValue != value) 
							|| (this._MANIFESTE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MANIFESTE.Entity = null;
						previousValue.VEHICULE.Remove(this);
					}
					this._MANIFESTE.Entity = value;
					if ((value != null))
					{
						value.VEHICULE.Add(this);
						this._IdMan = value.IdMan;
					}
					else
					{
						this._IdMan = default(Nullable<int>);
					}
					this.SendPropertyChanged("MANIFESTE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONNAISSEMENT_VEHICULE", Storage="_CONNAISSEMENT", ThisKey="IdBL", OtherKey="IdBL", IsForeignKey=true)]
		public CONNAISSEMENT CONNAISSEMENT
		{
			get
			{
				return this._CONNAISSEMENT.Entity;
			}
			set
			{
				CONNAISSEMENT previousValue = this._CONNAISSEMENT.Entity;
				if (((previousValue != value) 
							|| (this._CONNAISSEMENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CONNAISSEMENT.Entity = null;
						previousValue.VEHICULE.Remove(this);
					}
					this._CONNAISSEMENT.Entity = value;
					if ((value != null))
					{
						value.VEHICULE.Add(this);
						this._IdBL = value.IdBL;
					}
					else
					{
						this._IdBL = default(Nullable<int>);
					}
					this.SendPropertyChanged("CONNAISSEMENT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BON_ENLEVEMENT_VEHICULE", Storage="_BON_ENLEVEMENT", ThisKey="IdBAE", OtherKey="IdBAE", IsForeignKey=true)]
		public BON_ENLEVEMENT BON_ENLEVEMENT
		{
			get
			{
				return this._BON_ENLEVEMENT.Entity;
			}
			set
			{
				BON_ENLEVEMENT previousValue = this._BON_ENLEVEMENT.Entity;
				if (((previousValue != value) 
							|| (this._BON_ENLEVEMENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BON_ENLEVEMENT.Entity = null;
						previousValue.VEHICULE.Remove(this);
					}
					this._BON_ENLEVEMENT.Entity = value;
					if ((value != null))
					{
						value.VEHICULE.Add(this);
						this._IdBAE = value.IdBAE;
					}
					else
					{
						this._IdBAE = default(Nullable<int>);
					}
					this.SendPropertyChanged("BON_ENLEVEMENT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DEMANDE_LIVRAISON_VEHICULE", Storage="_DEMANDE_LIVRAISON", ThisKey="IdDBL", OtherKey="IdDBL", IsForeignKey=true)]
		public DEMANDE_LIVRAISON DEMANDE_LIVRAISON
		{
			get
			{
				return this._DEMANDE_LIVRAISON.Entity;
			}
			set
			{
				DEMANDE_LIVRAISON previousValue = this._DEMANDE_LIVRAISON.Entity;
				if (((previousValue != value) 
							|| (this._DEMANDE_LIVRAISON.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DEMANDE_LIVRAISON.Entity = null;
						previousValue.VEHICULE.Remove(this);
					}
					this._DEMANDE_LIVRAISON.Entity = value;
					if ((value != null))
					{
						value.VEHICULE.Add(this);
						this._IdDBL = value.IdDBL;
					}
					else
					{
						this._IdDBL = default(Nullable<int>);
					}
					this.SendPropertyChanged("DEMANDE_LIVRAISON");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BON_SORTIE_VEHICULE", Storage="_BON_SORTIE", ThisKey="IdBS", OtherKey="IdBS", IsForeignKey=true)]
		public BON_SORTIE BON_SORTIE
		{
			get
			{
				return this._BON_SORTIE.Entity;
			}
			set
			{
				BON_SORTIE previousValue = this._BON_SORTIE.Entity;
				if (((previousValue != value) 
							|| (this._BON_SORTIE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BON_SORTIE.Entity = null;
						previousValue.VEHICULE.Remove(this);
					}
					this._BON_SORTIE.Entity = value;
					if ((value != null))
					{
						value.VEHICULE.Add(this);
						this._IdBS = value.IdBS;
					}
					else
					{
						this._IdBS = default(Nullable<int>);
					}
					this.SendPropertyChanged("BON_SORTIE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VEHICULE_VEHICULE", Storage="_VEHICULE1", ThisKey="IdVehAP", OtherKey="IdVeh", IsForeignKey=true)]
		public VEHICULE VEHICULE1
		{
			get
			{
				return this._VEHICULE1.Entity;
			}
			set
			{
				VEHICULE previousValue = this._VEHICULE1.Entity;
				if (((previousValue != value) 
							|| (this._VEHICULE1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VEHICULE1.Entity = null;
						previousValue.VEHICULE2.Remove(this);
					}
					this._VEHICULE1.Entity = value;
					if ((value != null))
					{
						value.VEHICULE2.Add(this);
						this._IdVehAP = value.IdVeh;
					}
					else
					{
						this._IdVehAP = default(Nullable<int>);
					}
					this.SendPropertyChanged("VEHICULE1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OCCUPATION(OCCUPATION entity)
		{
			this.SendPropertyChanging();
			entity.VEHICULE = this;
		}
		
		private void detach_OCCUPATION(OCCUPATION entity)
		{
			this.SendPropertyChanging();
			entity.VEHICULE = null;
		}
		
		private void attach_OPERATION_VEHICULE(OPERATION_VEHICULE entity)
		{
			this.SendPropertyChanging();
			entity.VEHICULE = this;
		}
		
		private void detach_OPERATION_VEHICULE(OPERATION_VEHICULE entity)
		{
			this.SendPropertyChanging();
			entity.VEHICULE = null;
		}
		
		private void attach_ORDRE_SERVICE(ORDRE_SERVICE entity)
		{
			this.SendPropertyChanging();
			entity.VEHICULE = this;
		}
		
		private void detach_ORDRE_SERVICE(ORDRE_SERVICE entity)
		{
			this.SendPropertyChanging();
			entity.VEHICULE = null;
		}
		
		private void attach_DEMANDE_VISITE(DEMANDE_VISITE entity)
		{
			this.SendPropertyChanging();
			entity.VEHICULE = this;
		}
		
		private void detach_DEMANDE_VISITE(DEMANDE_VISITE entity)
		{
			this.SendPropertyChanging();
			entity.VEHICULE = null;
		}
		
		private void attach_CUBAGE_VEHICULE(CUBAGE_VEHICULE entity)
		{
			this.SendPropertyChanging();
			entity.VEHICULE = this;
		}
		
		private void detach_CUBAGE_VEHICULE(CUBAGE_VEHICULE entity)
		{
			this.SendPropertyChanging();
			entity.VEHICULE = null;
		}
		
		private void attach_ELEMENT_FACTURATION(ELEMENT_FACTURATION entity)
		{
			this.SendPropertyChanging();
			entity.VEHICULE = this;
		}
		
		private void detach_ELEMENT_FACTURATION(ELEMENT_FACTURATION entity)
		{
			this.SendPropertyChanging();
			entity.VEHICULE = null;
		}
		
		private void attach_OPERATION_SINISTRE(OPERATION_SINISTRE entity)
		{
			this.SendPropertyChanging();
			entity.VEHICULE = this;
		}
		
		private void detach_OPERATION_SINISTRE(OPERATION_SINISTRE entity)
		{
			this.SendPropertyChanging();
			entity.VEHICULE = null;
		}
		
		private void attach_VEHICULE2(VEHICULE entity)
		{
			this.SendPropertyChanging();
			entity.VEHICULE1 = this;
		}
		
		private void detach_VEHICULE2(VEHICULE entity)
		{
			this.SendPropertyChanging();
			entity.VEHICULE1 = null;
		}
		
		private void attach_NOTE(NOTE entity)
		{
			this.SendPropertyChanging();
			entity.VEHICULE = this;
		}
		
		private void detach_NOTE(NOTE entity)
		{
			this.SendPropertyChanging();
			entity.VEHICULE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CONTENEUR")]
	public partial class CONTENEUR : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdCtr;
		
		private string _NumCtr;
		
		private System.Nullable<short> _PropCtr;
		
		private System.Nullable<int> _MCCtr;
		
		private System.Nullable<System.DateTime> _DCCtr;
		
		private string _DescCtr;
		
		private string _TypeMCtr;
		
		private string _StatutCtr;
		
		private System.Nullable<float> _VolMCtr;
		
		private System.Nullable<int> _PoidsMCtr;
		
		private string _CatMseCtr;
		
		private string _TypeMses;
		
		private string _IMDGCode;
		
		private string _DescMses;
		
		private string _Seal1Ctr;
		
		private string _Seal2Ctr;
		
		private System.Nullable<short> _NumItem;
		
		private string _InfoMan;
		
		private string _TypeCCtr;
		
		private System.Nullable<int> _PoidsCCtr;
		
		private string _StatCtr;
		
		private System.Nullable<System.DateTime> _FFCtr;
		
		private System.Nullable<System.DateTime> _FFSCtr;
		
		private System.Nullable<System.DateTime> _FSCtr;
		
		private System.Nullable<System.DateTime> _DRCtr;
		
		private System.Nullable<System.DateTime> _DVD;
		
		private System.Nullable<System.DateTime> _DDR;
		
		private System.Nullable<int> _IdBL;
		
		private System.Nullable<int> _IdMan;
		
		private System.Nullable<int> _IdEsc;
		
		private System.Nullable<int> _IdPay;
		
		private System.Nullable<int> _IdBAE;
		
		private System.Nullable<int> _IdDBL;
		
		private System.Nullable<int> _IdBS;
		
		private string _NomEnCtr;
		
		private string _CNIEnCtr;
		
		private string _TelenCtr;
		
		private string _NumADDCtr;
		
		private string _NumAVICtr;
		
		private string _NumDDCtr;
		
		private string _NumQDCtr;
		
		private string _NumFPADCtr;
		
		private string _NumQPADCtr;
		
		private string _NumAEPADCtr;
		
		private string _NumBESCCtr;
		
		private string _NumSydoniaCtr;
		
		private string _SensCtr;
		
		private System.Nullable<int> _IdDRC;
		
		private System.Nullable<System.DateTime> _DSCtr;
		
		private System.Nullable<System.DateTime> _DSPCtr;
		
		private System.Nullable<int> _NbDet;
		
		private System.Nullable<int> _VGM;
		
		private EntitySet<OCCUPATION> _OCCUPATION;
		
		private EntitySet<OPERATION_CONTENEUR> _OPERATION_CONTENEUR;
		
		private EntitySet<ORDRE_SERVICE> _ORDRE_SERVICE;
		
		private EntitySet<ELEMENT_FACTURATION> _ELEMENT_FACTURATION;
		
		private EntitySet<NOTE> _NOTE;
		
		private EntitySet<CONTENEUR_TC> _CONTENEUR_TC;
		
		private EntityRef<CONNAISSEMENT> _CONNAISSEMENT;
		
		private EntityRef<ESCALE> _ESCALE;
		
		private EntityRef<MANIFESTE> _MANIFESTE;
		
		private EntityRef<BON_ENLEVEMENT> _BON_ENLEVEMENT;
		
		private EntityRef<TYPE_CONTENEUR> _TYPE_CONTENEUR;
		
		private EntityRef<PAYEMENT> _PAYEMENT;
		
		private EntityRef<DEMANDE_LIVRAISON> _DEMANDE_LIVRAISON;
		
		private EntityRef<BON_SORTIE> _BON_SORTIE;
		
		private EntityRef<DEMANDE_CAUTION> _DEMANDE_CAUTION;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdCtrChanging(int value);
    partial void OnIdCtrChanged();
    partial void OnNumCtrChanging(string value);
    partial void OnNumCtrChanged();
    partial void OnPropCtrChanging(System.Nullable<short> value);
    partial void OnPropCtrChanged();
    partial void OnMCCtrChanging(System.Nullable<int> value);
    partial void OnMCCtrChanged();
    partial void OnDCCtrChanging(System.Nullable<System.DateTime> value);
    partial void OnDCCtrChanged();
    partial void OnDescCtrChanging(string value);
    partial void OnDescCtrChanged();
    partial void OnTypeMCtrChanging(string value);
    partial void OnTypeMCtrChanged();
    partial void OnStatutCtrChanging(string value);
    partial void OnStatutCtrChanged();
    partial void OnVolMCtrChanging(System.Nullable<float> value);
    partial void OnVolMCtrChanged();
    partial void OnPoidsMCtrChanging(System.Nullable<int> value);
    partial void OnPoidsMCtrChanged();
    partial void OnCatMseCtrChanging(string value);
    partial void OnCatMseCtrChanged();
    partial void OnTypeMsesChanging(string value);
    partial void OnTypeMsesChanged();
    partial void OnIMDGCodeChanging(string value);
    partial void OnIMDGCodeChanged();
    partial void OnDescMsesChanging(string value);
    partial void OnDescMsesChanged();
    partial void OnSeal1CtrChanging(string value);
    partial void OnSeal1CtrChanged();
    partial void OnSeal2CtrChanging(string value);
    partial void OnSeal2CtrChanged();
    partial void OnNumItemChanging(System.Nullable<short> value);
    partial void OnNumItemChanged();
    partial void OnInfoManChanging(string value);
    partial void OnInfoManChanged();
    partial void OnTypeCCtrChanging(string value);
    partial void OnTypeCCtrChanged();
    partial void OnPoidsCCtrChanging(System.Nullable<int> value);
    partial void OnPoidsCCtrChanged();
    partial void OnStatCtrChanging(string value);
    partial void OnStatCtrChanged();
    partial void OnFFCtrChanging(System.Nullable<System.DateTime> value);
    partial void OnFFCtrChanged();
    partial void OnFFSCtrChanging(System.Nullable<System.DateTime> value);
    partial void OnFFSCtrChanged();
    partial void OnFSCtrChanging(System.Nullable<System.DateTime> value);
    partial void OnFSCtrChanged();
    partial void OnDRCtrChanging(System.Nullable<System.DateTime> value);
    partial void OnDRCtrChanged();
    partial void OnDVDChanging(System.Nullable<System.DateTime> value);
    partial void OnDVDChanged();
    partial void OnDDRChanging(System.Nullable<System.DateTime> value);
    partial void OnDDRChanged();
    partial void OnIdBLChanging(System.Nullable<int> value);
    partial void OnIdBLChanged();
    partial void OnIdManChanging(System.Nullable<int> value);
    partial void OnIdManChanged();
    partial void OnIdEscChanging(System.Nullable<int> value);
    partial void OnIdEscChanged();
    partial void OnIdPayChanging(System.Nullable<int> value);
    partial void OnIdPayChanged();
    partial void OnIdBAEChanging(System.Nullable<int> value);
    partial void OnIdBAEChanged();
    partial void OnIdDBLChanging(System.Nullable<int> value);
    partial void OnIdDBLChanged();
    partial void OnIdBSChanging(System.Nullable<int> value);
    partial void OnIdBSChanged();
    partial void OnNomEnCtrChanging(string value);
    partial void OnNomEnCtrChanged();
    partial void OnCNIEnCtrChanging(string value);
    partial void OnCNIEnCtrChanged();
    partial void OnTelenCtrChanging(string value);
    partial void OnTelenCtrChanged();
    partial void OnNumADDCtrChanging(string value);
    partial void OnNumADDCtrChanged();
    partial void OnNumAVICtrChanging(string value);
    partial void OnNumAVICtrChanged();
    partial void OnNumDDCtrChanging(string value);
    partial void OnNumDDCtrChanged();
    partial void OnNumQDCtrChanging(string value);
    partial void OnNumQDCtrChanged();
    partial void OnNumFPADCtrChanging(string value);
    partial void OnNumFPADCtrChanged();
    partial void OnNumQPADCtrChanging(string value);
    partial void OnNumQPADCtrChanged();
    partial void OnNumAEPADCtrChanging(string value);
    partial void OnNumAEPADCtrChanged();
    partial void OnNumBESCCtrChanging(string value);
    partial void OnNumBESCCtrChanged();
    partial void OnNumSydoniaCtrChanging(string value);
    partial void OnNumSydoniaCtrChanged();
    partial void OnSensCtrChanging(string value);
    partial void OnSensCtrChanged();
    partial void OnIdDRCChanging(System.Nullable<int> value);
    partial void OnIdDRCChanged();
    partial void OnDSCtrChanging(System.Nullable<System.DateTime> value);
    partial void OnDSCtrChanged();
    partial void OnDSPCtrChanging(System.Nullable<System.DateTime> value);
    partial void OnDSPCtrChanged();
    partial void OnNbDetChanging(System.Nullable<int> value);
    partial void OnNbDetChanged();
    partial void OnVGMChanging(System.Nullable<int> value);
    partial void OnVGMChanged();
    #endregion
		
		public CONTENEUR()
		{
			this._OCCUPATION = new EntitySet<OCCUPATION>(new Action<OCCUPATION>(this.attach_OCCUPATION), new Action<OCCUPATION>(this.detach_OCCUPATION));
			this._OPERATION_CONTENEUR = new EntitySet<OPERATION_CONTENEUR>(new Action<OPERATION_CONTENEUR>(this.attach_OPERATION_CONTENEUR), new Action<OPERATION_CONTENEUR>(this.detach_OPERATION_CONTENEUR));
			this._ORDRE_SERVICE = new EntitySet<ORDRE_SERVICE>(new Action<ORDRE_SERVICE>(this.attach_ORDRE_SERVICE), new Action<ORDRE_SERVICE>(this.detach_ORDRE_SERVICE));
			this._ELEMENT_FACTURATION = new EntitySet<ELEMENT_FACTURATION>(new Action<ELEMENT_FACTURATION>(this.attach_ELEMENT_FACTURATION), new Action<ELEMENT_FACTURATION>(this.detach_ELEMENT_FACTURATION));
			this._NOTE = new EntitySet<NOTE>(new Action<NOTE>(this.attach_NOTE), new Action<NOTE>(this.detach_NOTE));
			this._CONTENEUR_TC = new EntitySet<CONTENEUR_TC>(new Action<CONTENEUR_TC>(this.attach_CONTENEUR_TC), new Action<CONTENEUR_TC>(this.detach_CONTENEUR_TC));
			this._CONNAISSEMENT = default(EntityRef<CONNAISSEMENT>);
			this._ESCALE = default(EntityRef<ESCALE>);
			this._MANIFESTE = default(EntityRef<MANIFESTE>);
			this._BON_ENLEVEMENT = default(EntityRef<BON_ENLEVEMENT>);
			this._TYPE_CONTENEUR = default(EntityRef<TYPE_CONTENEUR>);
			this._PAYEMENT = default(EntityRef<PAYEMENT>);
			this._DEMANDE_LIVRAISON = default(EntityRef<DEMANDE_LIVRAISON>);
			this._BON_SORTIE = default(EntityRef<BON_SORTIE>);
			this._DEMANDE_CAUTION = default(EntityRef<DEMANDE_CAUTION>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCtr", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdCtr
		{
			get
			{
				return this._IdCtr;
			}
			set
			{
				if ((this._IdCtr != value))
				{
					this.OnIdCtrChanging(value);
					this.SendPropertyChanging();
					this._IdCtr = value;
					this.SendPropertyChanged("IdCtr");
					this.OnIdCtrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumCtr", DbType="NVarChar(20)")]
		public string NumCtr
		{
			get
			{
				return this._NumCtr;
			}
			set
			{
				if ((this._NumCtr != value))
				{
					this.OnNumCtrChanging(value);
					this.SendPropertyChanging();
					this._NumCtr = value;
					this.SendPropertyChanged("NumCtr");
					this.OnNumCtrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropCtr", DbType="SmallInt")]
		public System.Nullable<short> PropCtr
		{
			get
			{
				return this._PropCtr;
			}
			set
			{
				if ((this._PropCtr != value))
				{
					this.OnPropCtrChanging(value);
					this.SendPropertyChanging();
					this._PropCtr = value;
					this.SendPropertyChanged("PropCtr");
					this.OnPropCtrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MCCtr", DbType="Int")]
		public System.Nullable<int> MCCtr
		{
			get
			{
				return this._MCCtr;
			}
			set
			{
				if ((this._MCCtr != value))
				{
					this.OnMCCtrChanging(value);
					this.SendPropertyChanging();
					this._MCCtr = value;
					this.SendPropertyChanged("MCCtr");
					this.OnMCCtrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DCCtr", DbType="DateTime")]
		public System.Nullable<System.DateTime> DCCtr
		{
			get
			{
				return this._DCCtr;
			}
			set
			{
				if ((this._DCCtr != value))
				{
					this.OnDCCtrChanging(value);
					this.SendPropertyChanging();
					this._DCCtr = value;
					this.SendPropertyChanged("DCCtr");
					this.OnDCCtrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescCtr", DbType="NVarChar(255)")]
		public string DescCtr
		{
			get
			{
				return this._DescCtr;
			}
			set
			{
				if ((this._DescCtr != value))
				{
					this.OnDescCtrChanging(value);
					this.SendPropertyChanging();
					this._DescCtr = value;
					this.SendPropertyChanged("DescCtr");
					this.OnDescCtrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeMCtr", DbType="NVarChar(20)")]
		public string TypeMCtr
		{
			get
			{
				return this._TypeMCtr;
			}
			set
			{
				if ((this._TypeMCtr != value))
				{
					if (this._TYPE_CONTENEUR.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeMCtrChanging(value);
					this.SendPropertyChanging();
					this._TypeMCtr = value;
					this.SendPropertyChanged("TypeMCtr");
					this.OnTypeMCtrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatutCtr", DbType="NVarChar(10)")]
		public string StatutCtr
		{
			get
			{
				return this._StatutCtr;
			}
			set
			{
				if ((this._StatutCtr != value))
				{
					this.OnStatutCtrChanging(value);
					this.SendPropertyChanging();
					this._StatutCtr = value;
					this.SendPropertyChanged("StatutCtr");
					this.OnStatutCtrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VolMCtr", DbType="Real")]
		public System.Nullable<float> VolMCtr
		{
			get
			{
				return this._VolMCtr;
			}
			set
			{
				if ((this._VolMCtr != value))
				{
					this.OnVolMCtrChanging(value);
					this.SendPropertyChanging();
					this._VolMCtr = value;
					this.SendPropertyChanged("VolMCtr");
					this.OnVolMCtrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PoidsMCtr", DbType="Int")]
		public System.Nullable<int> PoidsMCtr
		{
			get
			{
				return this._PoidsMCtr;
			}
			set
			{
				if ((this._PoidsMCtr != value))
				{
					this.OnPoidsMCtrChanging(value);
					this.SendPropertyChanging();
					this._PoidsMCtr = value;
					this.SendPropertyChanged("PoidsMCtr");
					this.OnPoidsMCtrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatMseCtr", DbType="NVarChar(2)")]
		public string CatMseCtr
		{
			get
			{
				return this._CatMseCtr;
			}
			set
			{
				if ((this._CatMseCtr != value))
				{
					this.OnCatMseCtrChanging(value);
					this.SendPropertyChanging();
					this._CatMseCtr = value;
					this.SendPropertyChanged("CatMseCtr");
					this.OnCatMseCtrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeMses", DbType="NVarChar(20)")]
		public string TypeMses
		{
			get
			{
				return this._TypeMses;
			}
			set
			{
				if ((this._TypeMses != value))
				{
					this.OnTypeMsesChanging(value);
					this.SendPropertyChanging();
					this._TypeMses = value;
					this.SendPropertyChanged("TypeMses");
					this.OnTypeMsesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IMDGCode", DbType="NVarChar(5)")]
		public string IMDGCode
		{
			get
			{
				return this._IMDGCode;
			}
			set
			{
				if ((this._IMDGCode != value))
				{
					this.OnIMDGCodeChanging(value);
					this.SendPropertyChanging();
					this._IMDGCode = value;
					this.SendPropertyChanged("IMDGCode");
					this.OnIMDGCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescMses", DbType="NVarChar(255)")]
		public string DescMses
		{
			get
			{
				return this._DescMses;
			}
			set
			{
				if ((this._DescMses != value))
				{
					this.OnDescMsesChanging(value);
					this.SendPropertyChanging();
					this._DescMses = value;
					this.SendPropertyChanged("DescMses");
					this.OnDescMsesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Seal1Ctr", DbType="NVarChar(20)")]
		public string Seal1Ctr
		{
			get
			{
				return this._Seal1Ctr;
			}
			set
			{
				if ((this._Seal1Ctr != value))
				{
					this.OnSeal1CtrChanging(value);
					this.SendPropertyChanging();
					this._Seal1Ctr = value;
					this.SendPropertyChanged("Seal1Ctr");
					this.OnSeal1CtrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Seal2Ctr", DbType="NVarChar(20)")]
		public string Seal2Ctr
		{
			get
			{
				return this._Seal2Ctr;
			}
			set
			{
				if ((this._Seal2Ctr != value))
				{
					this.OnSeal2CtrChanging(value);
					this.SendPropertyChanging();
					this._Seal2Ctr = value;
					this.SendPropertyChanged("Seal2Ctr");
					this.OnSeal2CtrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumItem", DbType="SmallInt")]
		public System.Nullable<short> NumItem
		{
			get
			{
				return this._NumItem;
			}
			set
			{
				if ((this._NumItem != value))
				{
					this.OnNumItemChanging(value);
					this.SendPropertyChanging();
					this._NumItem = value;
					this.SendPropertyChanged("NumItem");
					this.OnNumItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InfoMan", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string InfoMan
		{
			get
			{
				return this._InfoMan;
			}
			set
			{
				if ((this._InfoMan != value))
				{
					this.OnInfoManChanging(value);
					this.SendPropertyChanging();
					this._InfoMan = value;
					this.SendPropertyChanged("InfoMan");
					this.OnInfoManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeCCtr", DbType="NVarChar(20)")]
		public string TypeCCtr
		{
			get
			{
				return this._TypeCCtr;
			}
			set
			{
				if ((this._TypeCCtr != value))
				{
					this.OnTypeCCtrChanging(value);
					this.SendPropertyChanging();
					this._TypeCCtr = value;
					this.SendPropertyChanged("TypeCCtr");
					this.OnTypeCCtrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PoidsCCtr", DbType="Int")]
		public System.Nullable<int> PoidsCCtr
		{
			get
			{
				return this._PoidsCCtr;
			}
			set
			{
				if ((this._PoidsCCtr != value))
				{
					this.OnPoidsCCtrChanging(value);
					this.SendPropertyChanging();
					this._PoidsCCtr = value;
					this.SendPropertyChanged("PoidsCCtr");
					this.OnPoidsCCtrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatCtr", DbType="NVarChar(25)")]
		public string StatCtr
		{
			get
			{
				return this._StatCtr;
			}
			set
			{
				if ((this._StatCtr != value))
				{
					this.OnStatCtrChanging(value);
					this.SendPropertyChanging();
					this._StatCtr = value;
					this.SendPropertyChanged("StatCtr");
					this.OnStatCtrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FFCtr", DbType="DateTime")]
		public System.Nullable<System.DateTime> FFCtr
		{
			get
			{
				return this._FFCtr;
			}
			set
			{
				if ((this._FFCtr != value))
				{
					this.OnFFCtrChanging(value);
					this.SendPropertyChanging();
					this._FFCtr = value;
					this.SendPropertyChanged("FFCtr");
					this.OnFFCtrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FFSCtr", DbType="DateTime")]
		public System.Nullable<System.DateTime> FFSCtr
		{
			get
			{
				return this._FFSCtr;
			}
			set
			{
				if ((this._FFSCtr != value))
				{
					this.OnFFSCtrChanging(value);
					this.SendPropertyChanging();
					this._FFSCtr = value;
					this.SendPropertyChanged("FFSCtr");
					this.OnFFSCtrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FSCtr", DbType="DateTime")]
		public System.Nullable<System.DateTime> FSCtr
		{
			get
			{
				return this._FSCtr;
			}
			set
			{
				if ((this._FSCtr != value))
				{
					this.OnFSCtrChanging(value);
					this.SendPropertyChanging();
					this._FSCtr = value;
					this.SendPropertyChanged("FSCtr");
					this.OnFSCtrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DRCtr", DbType="DateTime")]
		public System.Nullable<System.DateTime> DRCtr
		{
			get
			{
				return this._DRCtr;
			}
			set
			{
				if ((this._DRCtr != value))
				{
					this.OnDRCtrChanging(value);
					this.SendPropertyChanging();
					this._DRCtr = value;
					this.SendPropertyChanged("DRCtr");
					this.OnDRCtrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DVD", DbType="DateTime")]
		public System.Nullable<System.DateTime> DVD
		{
			get
			{
				return this._DVD;
			}
			set
			{
				if ((this._DVD != value))
				{
					this.OnDVDChanging(value);
					this.SendPropertyChanging();
					this._DVD = value;
					this.SendPropertyChanged("DVD");
					this.OnDVDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DDR", DbType="DateTime")]
		public System.Nullable<System.DateTime> DDR
		{
			get
			{
				return this._DDR;
			}
			set
			{
				if ((this._DDR != value))
				{
					this.OnDDRChanging(value);
					this.SendPropertyChanging();
					this._DDR = value;
					this.SendPropertyChanged("DDR");
					this.OnDDRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdBL", DbType="Int")]
		public System.Nullable<int> IdBL
		{
			get
			{
				return this._IdBL;
			}
			set
			{
				if ((this._IdBL != value))
				{
					if (this._CONNAISSEMENT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdBLChanging(value);
					this.SendPropertyChanging();
					this._IdBL = value;
					this.SendPropertyChanged("IdBL");
					this.OnIdBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdMan", DbType="Int")]
		public System.Nullable<int> IdMan
		{
			get
			{
				return this._IdMan;
			}
			set
			{
				if ((this._IdMan != value))
				{
					if (this._MANIFESTE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdManChanging(value);
					this.SendPropertyChanging();
					this._IdMan = value;
					this.SendPropertyChanged("IdMan");
					this.OnIdManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEsc", DbType="Int")]
		public System.Nullable<int> IdEsc
		{
			get
			{
				return this._IdEsc;
			}
			set
			{
				if ((this._IdEsc != value))
				{
					if (this._ESCALE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdEscChanging(value);
					this.SendPropertyChanging();
					this._IdEsc = value;
					this.SendPropertyChanged("IdEsc");
					this.OnIdEscChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPay", DbType="Int")]
		public System.Nullable<int> IdPay
		{
			get
			{
				return this._IdPay;
			}
			set
			{
				if ((this._IdPay != value))
				{
					if (this._PAYEMENT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdPayChanging(value);
					this.SendPropertyChanging();
					this._IdPay = value;
					this.SendPropertyChanged("IdPay");
					this.OnIdPayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdBAE", DbType="Int")]
		public System.Nullable<int> IdBAE
		{
			get
			{
				return this._IdBAE;
			}
			set
			{
				if ((this._IdBAE != value))
				{
					if (this._BON_ENLEVEMENT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdBAEChanging(value);
					this.SendPropertyChanging();
					this._IdBAE = value;
					this.SendPropertyChanged("IdBAE");
					this.OnIdBAEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDBL", DbType="Int")]
		public System.Nullable<int> IdDBL
		{
			get
			{
				return this._IdDBL;
			}
			set
			{
				if ((this._IdDBL != value))
				{
					if (this._DEMANDE_LIVRAISON.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdDBLChanging(value);
					this.SendPropertyChanging();
					this._IdDBL = value;
					this.SendPropertyChanged("IdDBL");
					this.OnIdDBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdBS", DbType="Int")]
		public System.Nullable<int> IdBS
		{
			get
			{
				return this._IdBS;
			}
			set
			{
				if ((this._IdBS != value))
				{
					if (this._BON_SORTIE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdBSChanging(value);
					this.SendPropertyChanging();
					this._IdBS = value;
					this.SendPropertyChanged("IdBS");
					this.OnIdBSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NomEnCtr", DbType="NVarChar(50)")]
		public string NomEnCtr
		{
			get
			{
				return this._NomEnCtr;
			}
			set
			{
				if ((this._NomEnCtr != value))
				{
					this.OnNomEnCtrChanging(value);
					this.SendPropertyChanging();
					this._NomEnCtr = value;
					this.SendPropertyChanged("NomEnCtr");
					this.OnNomEnCtrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CNIEnCtr", DbType="NVarChar(20)")]
		public string CNIEnCtr
		{
			get
			{
				return this._CNIEnCtr;
			}
			set
			{
				if ((this._CNIEnCtr != value))
				{
					this.OnCNIEnCtrChanging(value);
					this.SendPropertyChanging();
					this._CNIEnCtr = value;
					this.SendPropertyChanged("CNIEnCtr");
					this.OnCNIEnCtrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelenCtr", DbType="NVarChar(20)")]
		public string TelenCtr
		{
			get
			{
				return this._TelenCtr;
			}
			set
			{
				if ((this._TelenCtr != value))
				{
					this.OnTelenCtrChanging(value);
					this.SendPropertyChanging();
					this._TelenCtr = value;
					this.SendPropertyChanged("TelenCtr");
					this.OnTelenCtrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumADDCtr", DbType="NVarChar(20)")]
		public string NumADDCtr
		{
			get
			{
				return this._NumADDCtr;
			}
			set
			{
				if ((this._NumADDCtr != value))
				{
					this.OnNumADDCtrChanging(value);
					this.SendPropertyChanging();
					this._NumADDCtr = value;
					this.SendPropertyChanged("NumADDCtr");
					this.OnNumADDCtrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumAVICtr", DbType="NVarChar(20)")]
		public string NumAVICtr
		{
			get
			{
				return this._NumAVICtr;
			}
			set
			{
				if ((this._NumAVICtr != value))
				{
					this.OnNumAVICtrChanging(value);
					this.SendPropertyChanging();
					this._NumAVICtr = value;
					this.SendPropertyChanged("NumAVICtr");
					this.OnNumAVICtrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumDDCtr", DbType="NVarChar(20)")]
		public string NumDDCtr
		{
			get
			{
				return this._NumDDCtr;
			}
			set
			{
				if ((this._NumDDCtr != value))
				{
					this.OnNumDDCtrChanging(value);
					this.SendPropertyChanging();
					this._NumDDCtr = value;
					this.SendPropertyChanged("NumDDCtr");
					this.OnNumDDCtrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumQDCtr", DbType="NVarChar(20)")]
		public string NumQDCtr
		{
			get
			{
				return this._NumQDCtr;
			}
			set
			{
				if ((this._NumQDCtr != value))
				{
					this.OnNumQDCtrChanging(value);
					this.SendPropertyChanging();
					this._NumQDCtr = value;
					this.SendPropertyChanged("NumQDCtr");
					this.OnNumQDCtrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumFPADCtr", DbType="NVarChar(20)")]
		public string NumFPADCtr
		{
			get
			{
				return this._NumFPADCtr;
			}
			set
			{
				if ((this._NumFPADCtr != value))
				{
					this.OnNumFPADCtrChanging(value);
					this.SendPropertyChanging();
					this._NumFPADCtr = value;
					this.SendPropertyChanged("NumFPADCtr");
					this.OnNumFPADCtrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumQPADCtr", DbType="NVarChar(20)")]
		public string NumQPADCtr
		{
			get
			{
				return this._NumQPADCtr;
			}
			set
			{
				if ((this._NumQPADCtr != value))
				{
					this.OnNumQPADCtrChanging(value);
					this.SendPropertyChanging();
					this._NumQPADCtr = value;
					this.SendPropertyChanged("NumQPADCtr");
					this.OnNumQPADCtrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumAEPADCtr", DbType="NVarChar(20)")]
		public string NumAEPADCtr
		{
			get
			{
				return this._NumAEPADCtr;
			}
			set
			{
				if ((this._NumAEPADCtr != value))
				{
					this.OnNumAEPADCtrChanging(value);
					this.SendPropertyChanging();
					this._NumAEPADCtr = value;
					this.SendPropertyChanged("NumAEPADCtr");
					this.OnNumAEPADCtrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumBESCCtr", DbType="NVarChar(20)")]
		public string NumBESCCtr
		{
			get
			{
				return this._NumBESCCtr;
			}
			set
			{
				if ((this._NumBESCCtr != value))
				{
					this.OnNumBESCCtrChanging(value);
					this.SendPropertyChanging();
					this._NumBESCCtr = value;
					this.SendPropertyChanged("NumBESCCtr");
					this.OnNumBESCCtrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumSydoniaCtr", DbType="NVarChar(20)")]
		public string NumSydoniaCtr
		{
			get
			{
				return this._NumSydoniaCtr;
			}
			set
			{
				if ((this._NumSydoniaCtr != value))
				{
					this.OnNumSydoniaCtrChanging(value);
					this.SendPropertyChanging();
					this._NumSydoniaCtr = value;
					this.SendPropertyChanged("NumSydoniaCtr");
					this.OnNumSydoniaCtrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SensCtr", DbType="NVarChar(1)")]
		public string SensCtr
		{
			get
			{
				return this._SensCtr;
			}
			set
			{
				if ((this._SensCtr != value))
				{
					this.OnSensCtrChanging(value);
					this.SendPropertyChanging();
					this._SensCtr = value;
					this.SendPropertyChanged("SensCtr");
					this.OnSensCtrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDRC", DbType="int")]
		public System.Nullable<int> IdDRC
		{
			get
			{
				return this._IdDRC;
			}
			set
			{
				if ((this._IdDRC != value))
				{
					if (this._DEMANDE_CAUTION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdDRCChanging(value);
					this.SendPropertyChanging();
					this._IdDRC = value;
					this.SendPropertyChanged("IdDRC");
					this.OnIdDRCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DSCtr", DbType="DateTime")]
		public System.Nullable<System.DateTime> DSCtr
		{
			get
			{
				return this._DSCtr;
			}
			set
			{
				if ((this._DSCtr != value))
				{
					this.OnDSCtrChanging(value);
					this.SendPropertyChanging();
					this._DSCtr = value;
					this.SendPropertyChanged("DSCtr");
					this.OnDSCtrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DSPCtr", DbType="DateTime")]
		public System.Nullable<System.DateTime> DSPCtr
		{
			get
			{
				return this._DSPCtr;
			}
			set
			{
				if ((this._DSPCtr != value))
				{
					this.OnDSPCtrChanging(value);
					this.SendPropertyChanging();
					this._DSPCtr = value;
					this.SendPropertyChanged("DSPCtr");
					this.OnDSPCtrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NbDet", DbType="Int")]
		public System.Nullable<int> NbDet
		{
			get
			{
				return this._NbDet;
			}
			set
			{
				if ((this._NbDet != value))
				{
					this.OnNbDetChanging(value);
					this.SendPropertyChanging();
					this._NbDet = value;
					this.SendPropertyChanged("NbDet");
					this.OnNbDetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VGM", DbType="Int")]
		public System.Nullable<int> VGM
		{
			get
			{
				return this._VGM;
			}
			set
			{
				if ((this._VGM != value))
				{
					this.OnVGMChanging(value);
					this.SendPropertyChanging();
					this._VGM = value;
					this.SendPropertyChanged("VGM");
					this.OnVGMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONTENEUR_OCCUPATION", Storage="_OCCUPATION", ThisKey="IdCtr", OtherKey="IdCtr")]
		public EntitySet<OCCUPATION> OCCUPATION
		{
			get
			{
				return this._OCCUPATION;
			}
			set
			{
				this._OCCUPATION.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONTENEUR_OPERATION_CONTENEUR", Storage="_OPERATION_CONTENEUR", ThisKey="IdCtr", OtherKey="IdCtr")]
		public EntitySet<OPERATION_CONTENEUR> OPERATION_CONTENEUR
		{
			get
			{
				return this._OPERATION_CONTENEUR;
			}
			set
			{
				this._OPERATION_CONTENEUR.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONTENEUR_ORDRE_SERVICE", Storage="_ORDRE_SERVICE", ThisKey="IdCtr", OtherKey="IdCtr")]
		public EntitySet<ORDRE_SERVICE> ORDRE_SERVICE
		{
			get
			{
				return this._ORDRE_SERVICE;
			}
			set
			{
				this._ORDRE_SERVICE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONTENEUR_ELEMENT_FACTURATION", Storage="_ELEMENT_FACTURATION", ThisKey="IdCtr", OtherKey="IdCtr")]
		public EntitySet<ELEMENT_FACTURATION> ELEMENT_FACTURATION
		{
			get
			{
				return this._ELEMENT_FACTURATION;
			}
			set
			{
				this._ELEMENT_FACTURATION.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONTENEUR_NOTE", Storage="_NOTE", ThisKey="IdCtr", OtherKey="IdCtr")]
		public EntitySet<NOTE> NOTE
		{
			get
			{
				return this._NOTE;
			}
			set
			{
				this._NOTE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONTENEUR_CONTENEUR_TC", Storage="_CONTENEUR_TC", ThisKey="IdCtr", OtherKey="IdCtr")]
		public EntitySet<CONTENEUR_TC> CONTENEUR_TC
		{
			get
			{
				return this._CONTENEUR_TC;
			}
			set
			{
				this._CONTENEUR_TC.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONNAISSEMENT_CONTENEUR", Storage="_CONNAISSEMENT", ThisKey="IdBL", OtherKey="IdBL", IsForeignKey=true, DeleteRule="CASCADE")]
		public CONNAISSEMENT CONNAISSEMENT
		{
			get
			{
				return this._CONNAISSEMENT.Entity;
			}
			set
			{
				CONNAISSEMENT previousValue = this._CONNAISSEMENT.Entity;
				if (((previousValue != value) 
							|| (this._CONNAISSEMENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CONNAISSEMENT.Entity = null;
						previousValue.CONTENEUR.Remove(this);
					}
					this._CONNAISSEMENT.Entity = value;
					if ((value != null))
					{
						value.CONTENEUR.Add(this);
						this._IdBL = value.IdBL;
					}
					else
					{
						this._IdBL = default(Nullable<int>);
					}
					this.SendPropertyChanged("CONNAISSEMENT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ESCALE_CONTENEUR", Storage="_ESCALE", ThisKey="IdEsc", OtherKey="IdEsc", IsForeignKey=true)]
		public ESCALE ESCALE
		{
			get
			{
				return this._ESCALE.Entity;
			}
			set
			{
				ESCALE previousValue = this._ESCALE.Entity;
				if (((previousValue != value) 
							|| (this._ESCALE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ESCALE.Entity = null;
						previousValue.CONTENEUR.Remove(this);
					}
					this._ESCALE.Entity = value;
					if ((value != null))
					{
						value.CONTENEUR.Add(this);
						this._IdEsc = value.IdEsc;
					}
					else
					{
						this._IdEsc = default(Nullable<int>);
					}
					this.SendPropertyChanged("ESCALE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MANIFESTE_CONTENEUR", Storage="_MANIFESTE", ThisKey="IdMan", OtherKey="IdMan", IsForeignKey=true)]
		public MANIFESTE MANIFESTE
		{
			get
			{
				return this._MANIFESTE.Entity;
			}
			set
			{
				MANIFESTE previousValue = this._MANIFESTE.Entity;
				if (((previousValue != value) 
							|| (this._MANIFESTE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MANIFESTE.Entity = null;
						previousValue.CONTENEUR.Remove(this);
					}
					this._MANIFESTE.Entity = value;
					if ((value != null))
					{
						value.CONTENEUR.Add(this);
						this._IdMan = value.IdMan;
					}
					else
					{
						this._IdMan = default(Nullable<int>);
					}
					this.SendPropertyChanged("MANIFESTE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BON_ENLEVEMENT_CONTENEUR", Storage="_BON_ENLEVEMENT", ThisKey="IdBAE", OtherKey="IdBAE", IsForeignKey=true)]
		public BON_ENLEVEMENT BON_ENLEVEMENT
		{
			get
			{
				return this._BON_ENLEVEMENT.Entity;
			}
			set
			{
				BON_ENLEVEMENT previousValue = this._BON_ENLEVEMENT.Entity;
				if (((previousValue != value) 
							|| (this._BON_ENLEVEMENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BON_ENLEVEMENT.Entity = null;
						previousValue.CONTENEUR.Remove(this);
					}
					this._BON_ENLEVEMENT.Entity = value;
					if ((value != null))
					{
						value.CONTENEUR.Add(this);
						this._IdBAE = value.IdBAE;
					}
					else
					{
						this._IdBAE = default(Nullable<int>);
					}
					this.SendPropertyChanged("BON_ENLEVEMENT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TYPE_CONTENEUR_CONTENEUR", Storage="_TYPE_CONTENEUR", ThisKey="TypeMCtr", OtherKey="CodeTypeCtr", IsForeignKey=true)]
		public TYPE_CONTENEUR TYPE_CONTENEUR
		{
			get
			{
				return this._TYPE_CONTENEUR.Entity;
			}
			set
			{
				TYPE_CONTENEUR previousValue = this._TYPE_CONTENEUR.Entity;
				if (((previousValue != value) 
							|| (this._TYPE_CONTENEUR.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TYPE_CONTENEUR.Entity = null;
						previousValue.CONTENEUR.Remove(this);
					}
					this._TYPE_CONTENEUR.Entity = value;
					if ((value != null))
					{
						value.CONTENEUR.Add(this);
						this._TypeMCtr = value.CodeTypeCtr;
					}
					else
					{
						this._TypeMCtr = default(string);
					}
					this.SendPropertyChanged("TYPE_CONTENEUR");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PAYEMENT_CONTENEUR", Storage="_PAYEMENT", ThisKey="IdPay", OtherKey="IdPay", IsForeignKey=true)]
		public PAYEMENT PAYEMENT
		{
			get
			{
				return this._PAYEMENT.Entity;
			}
			set
			{
				PAYEMENT previousValue = this._PAYEMENT.Entity;
				if (((previousValue != value) 
							|| (this._PAYEMENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PAYEMENT.Entity = null;
						previousValue.CONTENEUR.Remove(this);
					}
					this._PAYEMENT.Entity = value;
					if ((value != null))
					{
						value.CONTENEUR.Add(this);
						this._IdPay = value.IdPay;
					}
					else
					{
						this._IdPay = default(Nullable<int>);
					}
					this.SendPropertyChanged("PAYEMENT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DEMANDE_LIVRAISON_CONTENEUR", Storage="_DEMANDE_LIVRAISON", ThisKey="IdDBL", OtherKey="IdDBL", IsForeignKey=true)]
		public DEMANDE_LIVRAISON DEMANDE_LIVRAISON
		{
			get
			{
				return this._DEMANDE_LIVRAISON.Entity;
			}
			set
			{
				DEMANDE_LIVRAISON previousValue = this._DEMANDE_LIVRAISON.Entity;
				if (((previousValue != value) 
							|| (this._DEMANDE_LIVRAISON.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DEMANDE_LIVRAISON.Entity = null;
						previousValue.CONTENEUR.Remove(this);
					}
					this._DEMANDE_LIVRAISON.Entity = value;
					if ((value != null))
					{
						value.CONTENEUR.Add(this);
						this._IdDBL = value.IdDBL;
					}
					else
					{
						this._IdDBL = default(Nullable<int>);
					}
					this.SendPropertyChanged("DEMANDE_LIVRAISON");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BON_SORTIE_CONTENEUR", Storage="_BON_SORTIE", ThisKey="IdBS", OtherKey="IdBS", IsForeignKey=true)]
		public BON_SORTIE BON_SORTIE
		{
			get
			{
				return this._BON_SORTIE.Entity;
			}
			set
			{
				BON_SORTIE previousValue = this._BON_SORTIE.Entity;
				if (((previousValue != value) 
							|| (this._BON_SORTIE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BON_SORTIE.Entity = null;
						previousValue.CONTENEUR.Remove(this);
					}
					this._BON_SORTIE.Entity = value;
					if ((value != null))
					{
						value.CONTENEUR.Add(this);
						this._IdBS = value.IdBS;
					}
					else
					{
						this._IdBS = default(Nullable<int>);
					}
					this.SendPropertyChanged("BON_SORTIE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DEMANDE_CAUTION_CONTENEUR", Storage="_DEMANDE_CAUTION", ThisKey="IdDRC", OtherKey="IdDRC", IsForeignKey=true)]
		public DEMANDE_CAUTION DEMANDE_CAUTION
		{
			get
			{
				return this._DEMANDE_CAUTION.Entity;
			}
			set
			{
				DEMANDE_CAUTION previousValue = this._DEMANDE_CAUTION.Entity;
				if (((previousValue != value) 
							|| (this._DEMANDE_CAUTION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DEMANDE_CAUTION.Entity = null;
						previousValue.CONTENEUR.Remove(this);
					}
					this._DEMANDE_CAUTION.Entity = value;
					if ((value != null))
					{
						value.CONTENEUR.Add(this);
						this._IdDRC = value.IdDRC;
					}
					else
					{
						this._IdDRC = default(Nullable<int>);
					}
					this.SendPropertyChanged("DEMANDE_CAUTION");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OCCUPATION(OCCUPATION entity)
		{
			this.SendPropertyChanging();
			entity.CONTENEUR = this;
		}
		
		private void detach_OCCUPATION(OCCUPATION entity)
		{
			this.SendPropertyChanging();
			entity.CONTENEUR = null;
		}
		
		private void attach_OPERATION_CONTENEUR(OPERATION_CONTENEUR entity)
		{
			this.SendPropertyChanging();
			entity.CONTENEUR = this;
		}
		
		private void detach_OPERATION_CONTENEUR(OPERATION_CONTENEUR entity)
		{
			this.SendPropertyChanging();
			entity.CONTENEUR = null;
		}
		
		private void attach_ORDRE_SERVICE(ORDRE_SERVICE entity)
		{
			this.SendPropertyChanging();
			entity.CONTENEUR = this;
		}
		
		private void detach_ORDRE_SERVICE(ORDRE_SERVICE entity)
		{
			this.SendPropertyChanging();
			entity.CONTENEUR = null;
		}
		
		private void attach_ELEMENT_FACTURATION(ELEMENT_FACTURATION entity)
		{
			this.SendPropertyChanging();
			entity.CONTENEUR = this;
		}
		
		private void detach_ELEMENT_FACTURATION(ELEMENT_FACTURATION entity)
		{
			this.SendPropertyChanging();
			entity.CONTENEUR = null;
		}
		
		private void attach_NOTE(NOTE entity)
		{
			this.SendPropertyChanging();
			entity.CONTENEUR = this;
		}
		
		private void detach_NOTE(NOTE entity)
		{
			this.SendPropertyChanging();
			entity.CONTENEUR = null;
		}
		
		private void attach_CONTENEUR_TC(CONTENEUR_TC entity)
		{
			this.SendPropertyChanging();
			entity.CONTENEUR = this;
		}
		
		private void detach_CONTENEUR_TC(CONTENEUR_TC entity)
		{
			this.SendPropertyChanging();
			entity.CONTENEUR = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CONVENTIONNEL")]
	public partial class CONVENTIONNEL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdGC;
		
		private string _NumGC;
		
		private string _BarCode;
		
		private System.Nullable<System.DateTime> _DCGC;
		
		private string _DescGC;
		
		private string _TypeMGC;
		
		private System.Nullable<double> _PoidsMGC;
		
		private System.Nullable<double> _VolMGC;
		
		private System.Nullable<float> _LongMGC;
		
		private System.Nullable<float> _LargMGC;
		
		private System.Nullable<float> _HautMGC;
		
		private System.Nullable<short> _NumItem;
		
		private string _InfoMan;
		
		private string _TypeCGC;
		
		private System.Nullable<double> _PoidsCGC;
		
		private System.Nullable<double> _VolCGC;
		
		private System.Nullable<float> _LongCGC;
		
		private System.Nullable<float> _LargCGC;
		
		private System.Nullable<float> _HautCGC;
		
		private string _StatGC;
		
		private System.Nullable<System.DateTime> _FFGC;
		
		private System.Nullable<System.DateTime> _FSGC;
		
		private System.Nullable<int> _IdBL;
		
		private System.Nullable<int> _IdMan;
		
		private System.Nullable<int> _IdEsc;
		
		private System.Nullable<int> _IdBAE;
		
		private System.Nullable<int> _IdDBL;
		
		private System.Nullable<int> _IdBS;
		
		private System.Nullable<System.DateTime> _DSPGC;
		
		private string _NomEnGC;
		
		private string _CNIEnGC;
		
		private string _TelenGC;
		
		private string _NumADDGC;
		
		private string _NumCIVIOGC;
		
		private string _NumDDGC;
		
		private string _NumQDGC;
		
		private string _NumFPADGC;
		
		private string _NumQPADGC;
		
		private string _NumAEPADGC;
		
		private string _NumBESCGC;
		
		private string _NumSydoniaGC;
		
		private string _SensGC;
		
		private string _DescGCEmbarq;
		
		private string _DescGCRecept;
		
		private System.Nullable<double> _PoidsRGC;
		
		private System.Nullable<double> _VolRGC;
		
		private System.Nullable<short> _QteR;
		
		private System.Nullable<short> _QteBGC;
		
		private EntitySet<OPERATION_CONVENTIONNEL> _OPERATION_CONVENTIONNEL;
		
		private EntitySet<ORDRE_SERVICE> _ORDRE_SERVICE;
		
		private EntitySet<ELEMENT_FACTURATION> _ELEMENT_FACTURATION;
		
		private EntitySet<NOTE> _NOTE;
		
		private EntityRef<CONNAISSEMENT> _CONNAISSEMENT;
		
		private EntityRef<TYPE_CONVENTIONNEL> _TYPE_CONVENTIONNEL;
		
		private EntityRef<ESCALE> _ESCALE;
		
		private EntityRef<MANIFESTE> _MANIFESTE;
		
		private EntityRef<BON_ENLEVEMENT> _BON_ENLEVEMENT;
		
		private EntityRef<TYPE_CONVENTIONNEL> _TYPE_CONVENTIONNEL1;
		
		private EntityRef<DEMANDE_LIVRAISON> _DEMANDE_LIVRAISON;
		
		private EntityRef<BON_SORTIE> _BON_SORTIE;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdGCChanging(int value);
    partial void OnIdGCChanged();
    partial void OnNumGCChanging(string value);
    partial void OnNumGCChanged();
    partial void OnBarCodeChanging(string value);
    partial void OnBarCodeChanged();
    partial void OnDCGCChanging(System.Nullable<System.DateTime> value);
    partial void OnDCGCChanged();
    partial void OnDescGCChanging(string value);
    partial void OnDescGCChanged();
    partial void OnTypeMGCChanging(string value);
    partial void OnTypeMGCChanged();
    partial void OnPoidsMGCChanging(System.Nullable<double> value);
    partial void OnPoidsMGCChanged();
    partial void OnVolMGCChanging(System.Nullable<double> value);
    partial void OnVolMGCChanged();
    partial void OnLongMGCChanging(System.Nullable<float> value);
    partial void OnLongMGCChanged();
    partial void OnLargMGCChanging(System.Nullable<float> value);
    partial void OnLargMGCChanged();
    partial void OnHautMGCChanging(System.Nullable<float> value);
    partial void OnHautMGCChanged();
    partial void OnNumItemChanging(System.Nullable<short> value);
    partial void OnNumItemChanged();
    partial void OnInfoManChanging(string value);
    partial void OnInfoManChanged();
    partial void OnTypeCGCChanging(string value);
    partial void OnTypeCGCChanged();
    partial void OnPoidsCGCChanging(System.Nullable<double> value);
    partial void OnPoidsCGCChanged();
    partial void OnVolCGCChanging(System.Nullable<double> value);
    partial void OnVolCGCChanged();
    partial void OnLongCGCChanging(System.Nullable<float> value);
    partial void OnLongCGCChanged();
    partial void OnLargCGCChanging(System.Nullable<float> value);
    partial void OnLargCGCChanged();
    partial void OnHautCGCChanging(System.Nullable<float> value);
    partial void OnHautCGCChanged();
    partial void OnStatGCChanging(string value);
    partial void OnStatGCChanged();
    partial void OnFFGCChanging(System.Nullable<System.DateTime> value);
    partial void OnFFGCChanged();
    partial void OnFSGCChanging(System.Nullable<System.DateTime> value);
    partial void OnFSGCChanged();
    partial void OnIdBLChanging(System.Nullable<int> value);
    partial void OnIdBLChanged();
    partial void OnIdManChanging(System.Nullable<int> value);
    partial void OnIdManChanged();
    partial void OnIdEscChanging(System.Nullable<int> value);
    partial void OnIdEscChanged();
    partial void OnIdBAEChanging(System.Nullable<int> value);
    partial void OnIdBAEChanged();
    partial void OnIdDBLChanging(System.Nullable<int> value);
    partial void OnIdDBLChanged();
    partial void OnIdBSChanging(System.Nullable<int> value);
    partial void OnIdBSChanged();
    partial void OnDSPGCChanging(System.Nullable<System.DateTime> value);
    partial void OnDSPGCChanged();
    partial void OnNomEnGCChanging(string value);
    partial void OnNomEnGCChanged();
    partial void OnCNIEnGCChanging(string value);
    partial void OnCNIEnGCChanged();
    partial void OnTelenGCChanging(string value);
    partial void OnTelenGCChanged();
    partial void OnNumADDGCChanging(string value);
    partial void OnNumADDGCChanged();
    partial void OnNumCIVIOGCChanging(string value);
    partial void OnNumCIVIOGCChanged();
    partial void OnNumDDGCChanging(string value);
    partial void OnNumDDGCChanged();
    partial void OnNumQDGCChanging(string value);
    partial void OnNumQDGCChanged();
    partial void OnNumFPADGCChanging(string value);
    partial void OnNumFPADGCChanged();
    partial void OnNumQPADGCChanging(string value);
    partial void OnNumQPADGCChanged();
    partial void OnNumAEPADGCChanging(string value);
    partial void OnNumAEPADGCChanged();
    partial void OnNumBESCGCChanging(string value);
    partial void OnNumBESCGCChanged();
    partial void OnNumSydoniaGCChanging(string value);
    partial void OnNumSydoniaGCChanged();
    partial void OnSensGCChanging(string value);
    partial void OnSensGCChanged();
    partial void OnDescGCEmbarqChanging(string value);
    partial void OnDescGCEmbarqChanged();
    partial void OnDescGCReceptChanging(string value);
    partial void OnDescGCReceptChanged();
    partial void OnPoidsRGCChanging(System.Nullable<double> value);
    partial void OnPoidsRGCChanged();
    partial void OnVolRGCChanging(System.Nullable<double> value);
    partial void OnVolRGCChanged();
    partial void OnQteRGCChanging(System.Nullable<short> value);
    partial void OnQteRGCChanged();
    partial void OnQteBGCChanging(System.Nullable<short> value);
    partial void OnQteBGCChanged();
    #endregion
		
		public CONVENTIONNEL()
		{
			this._OPERATION_CONVENTIONNEL = new EntitySet<OPERATION_CONVENTIONNEL>(new Action<OPERATION_CONVENTIONNEL>(this.attach_OPERATION_CONVENTIONNEL), new Action<OPERATION_CONVENTIONNEL>(this.detach_OPERATION_CONVENTIONNEL));
			this._ORDRE_SERVICE = new EntitySet<ORDRE_SERVICE>(new Action<ORDRE_SERVICE>(this.attach_ORDRE_SERVICE), new Action<ORDRE_SERVICE>(this.detach_ORDRE_SERVICE));
			this._ELEMENT_FACTURATION = new EntitySet<ELEMENT_FACTURATION>(new Action<ELEMENT_FACTURATION>(this.attach_ELEMENT_FACTURATION), new Action<ELEMENT_FACTURATION>(this.detach_ELEMENT_FACTURATION));
			this._NOTE = new EntitySet<NOTE>(new Action<NOTE>(this.attach_NOTE), new Action<NOTE>(this.detach_NOTE));
			this._CONNAISSEMENT = default(EntityRef<CONNAISSEMENT>);
			this._TYPE_CONVENTIONNEL = default(EntityRef<TYPE_CONVENTIONNEL>);
			this._ESCALE = default(EntityRef<ESCALE>);
			this._MANIFESTE = default(EntityRef<MANIFESTE>);
			this._BON_ENLEVEMENT = default(EntityRef<BON_ENLEVEMENT>);
			this._TYPE_CONVENTIONNEL1 = default(EntityRef<TYPE_CONVENTIONNEL>);
			this._DEMANDE_LIVRAISON = default(EntityRef<DEMANDE_LIVRAISON>);
			this._BON_SORTIE = default(EntityRef<BON_SORTIE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdGC", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdGC
		{
			get
			{
				return this._IdGC;
			}
			set
			{
				if ((this._IdGC != value))
				{
					this.OnIdGCChanging(value);
					this.SendPropertyChanging();
					this._IdGC = value;
					this.SendPropertyChanged("IdGC");
					this.OnIdGCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumGC", DbType="NVarChar(30)")]
		public string NumGC
		{
			get
			{
				return this._NumGC;
			}
			set
			{
				if ((this._NumGC != value))
				{
					this.OnNumGCChanging(value);
					this.SendPropertyChanging();
					this._NumGC = value;
					this.SendPropertyChanged("NumGC");
					this.OnNumGCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BarCode", DbType="NVarChar(20)")]
		public string BarCode
		{
			get
			{
				return this._BarCode;
			}
			set
			{
				if ((this._BarCode != value))
				{
					this.OnBarCodeChanging(value);
					this.SendPropertyChanging();
					this._BarCode = value;
					this.SendPropertyChanged("BarCode");
					this.OnBarCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DCGC", DbType="DateTime")]
		public System.Nullable<System.DateTime> DCGC
		{
			get
			{
				return this._DCGC;
			}
			set
			{
				if ((this._DCGC != value))
				{
					this.OnDCGCChanging(value);
					this.SendPropertyChanging();
					this._DCGC = value;
					this.SendPropertyChanged("DCGC");
					this.OnDCGCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescGC", DbType="NVarChar(255)")]
		public string DescGC
		{
			get
			{
				return this._DescGC;
			}
			set
			{
				if ((this._DescGC != value))
				{
					this.OnDescGCChanging(value);
					this.SendPropertyChanging();
					this._DescGC = value;
					this.SendPropertyChanged("DescGC");
					this.OnDescGCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeMGC", DbType="NVarChar(5)")]
		public string TypeMGC
		{
			get
			{
				return this._TypeMGC;
			}
			set
			{
				if ((this._TypeMGC != value))
				{
					if (this._TYPE_CONVENTIONNEL.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeMGCChanging(value);
					this.SendPropertyChanging();
					this._TypeMGC = value;
					this.SendPropertyChanged("TypeMGC");
					this.OnTypeMGCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PoidsMGC", DbType="Float")]
		public System.Nullable<double> PoidsMGC
		{
			get
			{
				return this._PoidsMGC;
			}
			set
			{
				if ((this._PoidsMGC != value))
				{
					this.OnPoidsMGCChanging(value);
					this.SendPropertyChanging();
					this._PoidsMGC = value;
					this.SendPropertyChanged("PoidsMGC");
					this.OnPoidsMGCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VolMGC", DbType="Float")]
		public System.Nullable<double> VolMGC
		{
			get
			{
				return this._VolMGC;
			}
			set
			{
				if ((this._VolMGC != value))
				{
					this.OnVolMGCChanging(value);
					this.SendPropertyChanging();
					this._VolMGC = value;
					this.SendPropertyChanged("VolMGC");
					this.OnVolMGCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LongMGC", DbType="Real")]
		public System.Nullable<float> LongMGC
		{
			get
			{
				return this._LongMGC;
			}
			set
			{
				if ((this._LongMGC != value))
				{
					this.OnLongMGCChanging(value);
					this.SendPropertyChanging();
					this._LongMGC = value;
					this.SendPropertyChanged("LongMGC");
					this.OnLongMGCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LargMGC", DbType="Real")]
		public System.Nullable<float> LargMGC
		{
			get
			{
				return this._LargMGC;
			}
			set
			{
				if ((this._LargMGC != value))
				{
					this.OnLargMGCChanging(value);
					this.SendPropertyChanging();
					this._LargMGC = value;
					this.SendPropertyChanged("LargMGC");
					this.OnLargMGCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HautMGC", DbType="Real")]
		public System.Nullable<float> HautMGC
		{
			get
			{
				return this._HautMGC;
			}
			set
			{
				if ((this._HautMGC != value))
				{
					this.OnHautMGCChanging(value);
					this.SendPropertyChanging();
					this._HautMGC = value;
					this.SendPropertyChanged("HautMGC");
					this.OnHautMGCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumItem", DbType="SmallInt")]
		public System.Nullable<short> NumItem
		{
			get
			{
				return this._NumItem;
			}
			set
			{
				if ((this._NumItem != value))
				{
					this.OnNumItemChanging(value);
					this.SendPropertyChanging();
					this._NumItem = value;
					this.SendPropertyChanged("NumItem");
					this.OnNumItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InfoMan", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string InfoMan
		{
			get
			{
				return this._InfoMan;
			}
			set
			{
				if ((this._InfoMan != value))
				{
					this.OnInfoManChanging(value);
					this.SendPropertyChanging();
					this._InfoMan = value;
					this.SendPropertyChanged("InfoMan");
					this.OnInfoManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeCGC", DbType="NVarChar(5)")]
		public string TypeCGC
		{
			get
			{
				return this._TypeCGC;
			}
			set
			{
				if ((this._TypeCGC != value))
				{
					if (this._TYPE_CONVENTIONNEL1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeCGCChanging(value);
					this.SendPropertyChanging();
					this._TypeCGC = value;
					this.SendPropertyChanged("TypeCGC");
					this.OnTypeCGCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PoidsCGC", DbType="Float")]
		public System.Nullable<double> PoidsCGC
		{
			get
			{
				return this._PoidsCGC;
			}
			set
			{
				if ((this._PoidsCGC != value))
				{
					this.OnPoidsCGCChanging(value);
					this.SendPropertyChanging();
					this._PoidsCGC = value;
					this.SendPropertyChanged("PoidsCGC");
					this.OnPoidsCGCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VolCGC", DbType="Float")]
		public System.Nullable<double> VolCGC
		{
			get
			{
				return this._VolCGC;
			}
			set
			{
				if ((this._VolCGC != value))
				{
					this.OnVolCGCChanging(value);
					this.SendPropertyChanging();
					this._VolCGC = value;
					this.SendPropertyChanged("VolCGC");
					this.OnVolCGCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LongCGC", DbType="Real")]
		public System.Nullable<float> LongCGC
		{
			get
			{
				return this._LongCGC;
			}
			set
			{
				if ((this._LongCGC != value))
				{
					this.OnLongCGCChanging(value);
					this.SendPropertyChanging();
					this._LongCGC = value;
					this.SendPropertyChanged("LongCGC");
					this.OnLongCGCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LargCGC", DbType="Real")]
		public System.Nullable<float> LargCGC
		{
			get
			{
				return this._LargCGC;
			}
			set
			{
				if ((this._LargCGC != value))
				{
					this.OnLargCGCChanging(value);
					this.SendPropertyChanging();
					this._LargCGC = value;
					this.SendPropertyChanged("LargCGC");
					this.OnLargCGCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HautCGC", DbType="Real")]
		public System.Nullable<float> HautCGC
		{
			get
			{
				return this._HautCGC;
			}
			set
			{
				if ((this._HautCGC != value))
				{
					this.OnHautCGCChanging(value);
					this.SendPropertyChanging();
					this._HautCGC = value;
					this.SendPropertyChanged("HautCGC");
					this.OnHautCGCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatGC", DbType="NVarChar(25)")]
		public string StatGC
		{
			get
			{
				return this._StatGC;
			}
			set
			{
				if ((this._StatGC != value))
				{
					this.OnStatGCChanging(value);
					this.SendPropertyChanging();
					this._StatGC = value;
					this.SendPropertyChanged("StatGC");
					this.OnStatGCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FFGC", DbType="DateTime")]
		public System.Nullable<System.DateTime> FFGC
		{
			get
			{
				return this._FFGC;
			}
			set
			{
				if ((this._FFGC != value))
				{
					this.OnFFGCChanging(value);
					this.SendPropertyChanging();
					this._FFGC = value;
					this.SendPropertyChanged("FFGC");
					this.OnFFGCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FSGC", DbType="DateTime")]
		public System.Nullable<System.DateTime> FSGC
		{
			get
			{
				return this._FSGC;
			}
			set
			{
				if ((this._FSGC != value))
				{
					this.OnFSGCChanging(value);
					this.SendPropertyChanging();
					this._FSGC = value;
					this.SendPropertyChanged("FSGC");
					this.OnFSGCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdBL", DbType="Int")]
		public System.Nullable<int> IdBL
		{
			get
			{
				return this._IdBL;
			}
			set
			{
				if ((this._IdBL != value))
				{
					if (this._CONNAISSEMENT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdBLChanging(value);
					this.SendPropertyChanging();
					this._IdBL = value;
					this.SendPropertyChanged("IdBL");
					this.OnIdBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdMan", DbType="Int")]
		public System.Nullable<int> IdMan
		{
			get
			{
				return this._IdMan;
			}
			set
			{
				if ((this._IdMan != value))
				{
					if (this._MANIFESTE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdManChanging(value);
					this.SendPropertyChanging();
					this._IdMan = value;
					this.SendPropertyChanged("IdMan");
					this.OnIdManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEsc", DbType="Int")]
		public System.Nullable<int> IdEsc
		{
			get
			{
				return this._IdEsc;
			}
			set
			{
				if ((this._IdEsc != value))
				{
					if (this._ESCALE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdEscChanging(value);
					this.SendPropertyChanging();
					this._IdEsc = value;
					this.SendPropertyChanged("IdEsc");
					this.OnIdEscChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdBAE", DbType="Int")]
		public System.Nullable<int> IdBAE
		{
			get
			{
				return this._IdBAE;
			}
			set
			{
				if ((this._IdBAE != value))
				{
					if (this._BON_ENLEVEMENT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdBAEChanging(value);
					this.SendPropertyChanging();
					this._IdBAE = value;
					this.SendPropertyChanged("IdBAE");
					this.OnIdBAEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDBL", DbType="Int")]
		public System.Nullable<int> IdDBL
		{
			get
			{
				return this._IdDBL;
			}
			set
			{
				if ((this._IdDBL != value))
				{
					if (this._DEMANDE_LIVRAISON.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdDBLChanging(value);
					this.SendPropertyChanging();
					this._IdDBL = value;
					this.SendPropertyChanged("IdDBL");
					this.OnIdDBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdBS", DbType="Int")]
		public System.Nullable<int> IdBS
		{
			get
			{
				return this._IdBS;
			}
			set
			{
				if ((this._IdBS != value))
				{
					if (this._BON_SORTIE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdBSChanging(value);
					this.SendPropertyChanging();
					this._IdBS = value;
					this.SendPropertyChanged("IdBS");
					this.OnIdBSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DSPGC", DbType="DateTime")]
		public System.Nullable<System.DateTime> DSPGC
		{
			get
			{
				return this._DSPGC;
			}
			set
			{
				if ((this._DSPGC != value))
				{
					this.OnDSPGCChanging(value);
					this.SendPropertyChanging();
					this._DSPGC = value;
					this.SendPropertyChanged("DSPGC");
					this.OnDSPGCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NomEnGC", DbType="NVarChar(50)")]
		public string NomEnGC
		{
			get
			{
				return this._NomEnGC;
			}
			set
			{
				if ((this._NomEnGC != value))
				{
					this.OnNomEnGCChanging(value);
					this.SendPropertyChanging();
					this._NomEnGC = value;
					this.SendPropertyChanged("NomEnGC");
					this.OnNomEnGCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CNIEnGC", DbType="NVarChar(20)")]
		public string CNIEnGC
		{
			get
			{
				return this._CNIEnGC;
			}
			set
			{
				if ((this._CNIEnGC != value))
				{
					this.OnCNIEnGCChanging(value);
					this.SendPropertyChanging();
					this._CNIEnGC = value;
					this.SendPropertyChanged("CNIEnGC");
					this.OnCNIEnGCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelenGC", DbType="NVarChar(20)")]
		public string TelenGC
		{
			get
			{
				return this._TelenGC;
			}
			set
			{
				if ((this._TelenGC != value))
				{
					this.OnTelenGCChanging(value);
					this.SendPropertyChanging();
					this._TelenGC = value;
					this.SendPropertyChanged("TelenGC");
					this.OnTelenGCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumADDGC", DbType="NVarChar(20)")]
		public string NumADDGC
		{
			get
			{
				return this._NumADDGC;
			}
			set
			{
				if ((this._NumADDGC != value))
				{
					this.OnNumADDGCChanging(value);
					this.SendPropertyChanging();
					this._NumADDGC = value;
					this.SendPropertyChanged("NumADDGC");
					this.OnNumADDGCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumCIVIOGC", DbType="NVarChar(20)")]
		public string NumCIVIOGC
		{
			get
			{
				return this._NumCIVIOGC;
			}
			set
			{
				if ((this._NumCIVIOGC != value))
				{
					this.OnNumCIVIOGCChanging(value);
					this.SendPropertyChanging();
					this._NumCIVIOGC = value;
					this.SendPropertyChanged("NumCIVIOGC");
					this.OnNumCIVIOGCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumDDGC", DbType="NVarChar(20)")]
		public string NumDDGC
		{
			get
			{
				return this._NumDDGC;
			}
			set
			{
				if ((this._NumDDGC != value))
				{
					this.OnNumDDGCChanging(value);
					this.SendPropertyChanging();
					this._NumDDGC = value;
					this.SendPropertyChanged("NumDDGC");
					this.OnNumDDGCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumQDGC", DbType="NVarChar(20)")]
		public string NumQDGC
		{
			get
			{
				return this._NumQDGC;
			}
			set
			{
				if ((this._NumQDGC != value))
				{
					this.OnNumQDGCChanging(value);
					this.SendPropertyChanging();
					this._NumQDGC = value;
					this.SendPropertyChanged("NumQDGC");
					this.OnNumQDGCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumFPADGC", DbType="NVarChar(20)")]
		public string NumFPADGC
		{
			get
			{
				return this._NumFPADGC;
			}
			set
			{
				if ((this._NumFPADGC != value))
				{
					this.OnNumFPADGCChanging(value);
					this.SendPropertyChanging();
					this._NumFPADGC = value;
					this.SendPropertyChanged("NumFPADGC");
					this.OnNumFPADGCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumQPADGC", DbType="NVarChar(20)")]
		public string NumQPADGC
		{
			get
			{
				return this._NumQPADGC;
			}
			set
			{
				if ((this._NumQPADGC != value))
				{
					this.OnNumQPADGCChanging(value);
					this.SendPropertyChanging();
					this._NumQPADGC = value;
					this.SendPropertyChanged("NumQPADGC");
					this.OnNumQPADGCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumAEPADGC", DbType="NVarChar(20)")]
		public string NumAEPADGC
		{
			get
			{
				return this._NumAEPADGC;
			}
			set
			{
				if ((this._NumAEPADGC != value))
				{
					this.OnNumAEPADGCChanging(value);
					this.SendPropertyChanging();
					this._NumAEPADGC = value;
					this.SendPropertyChanged("NumAEPADGC");
					this.OnNumAEPADGCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumBESCGC", DbType="NVarChar(20)")]
		public string NumBESCGC
		{
			get
			{
				return this._NumBESCGC;
			}
			set
			{
				if ((this._NumBESCGC != value))
				{
					this.OnNumBESCGCChanging(value);
					this.SendPropertyChanging();
					this._NumBESCGC = value;
					this.SendPropertyChanged("NumBESCGC");
					this.OnNumBESCGCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumSydoniaGC", DbType="NVarChar(20)")]
		public string NumSydoniaGC
		{
			get
			{
				return this._NumSydoniaGC;
			}
			set
			{
				if ((this._NumSydoniaGC != value))
				{
					this.OnNumSydoniaGCChanging(value);
					this.SendPropertyChanging();
					this._NumSydoniaGC = value;
					this.SendPropertyChanged("NumSydoniaGC");
					this.OnNumSydoniaGCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SensGC", DbType="NVarChar(1)")]
		public string SensGC
		{
			get
			{
				return this._SensGC;
			}
			set
			{
				if ((this._SensGC != value))
				{
					this.OnSensGCChanging(value);
					this.SendPropertyChanging();
					this._SensGC = value;
					this.SendPropertyChanged("SensGC");
					this.OnSensGCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescGCEmbarq", DbType="NVarChar(255)")]
		public string DescGCEmbarq
		{
			get
			{
				return this._DescGCEmbarq;
			}
			set
			{
				if ((this._DescGCEmbarq != value))
				{
					this.OnDescGCEmbarqChanging(value);
					this.SendPropertyChanging();
					this._DescGCEmbarq = value;
					this.SendPropertyChanged("DescGCEmbarq");
					this.OnDescGCEmbarqChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescGCRecept", DbType="NVarChar(255)")]
		public string DescGCRecept
		{
			get
			{
				return this._DescGCRecept;
			}
			set
			{
				if ((this._DescGCRecept != value))
				{
					this.OnDescGCReceptChanging(value);
					this.SendPropertyChanging();
					this._DescGCRecept = value;
					this.SendPropertyChanged("DescGCRecept");
					this.OnDescGCReceptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PoidsRGC", DbType="Float")]
		public System.Nullable<double> PoidsRGC
		{
			get
			{
				return this._PoidsRGC;
			}
			set
			{
				if ((this._PoidsRGC != value))
				{
					this.OnPoidsRGCChanging(value);
					this.SendPropertyChanging();
					this._PoidsRGC = value;
					this.SendPropertyChanged("PoidsRGC");
					this.OnPoidsRGCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VolRGC", DbType="Float")]
		public System.Nullable<double> VolRGC
		{
			get
			{
				return this._VolRGC;
			}
			set
			{
				if ((this._VolRGC != value))
				{
					this.OnVolRGCChanging(value);
					this.SendPropertyChanging();
					this._VolRGC = value;
					this.SendPropertyChanged("VolRGC");
					this.OnVolRGCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QteR", DbType="SmallInt")]
		public System.Nullable<short> QteRGC
		{
			get
			{
				return this._QteR;
			}
			set
			{
				if ((this._QteR != value))
				{
					this.OnQteRGCChanging(value);
					this.SendPropertyChanging();
					this._QteR = value;
					this.SendPropertyChanged("QteRGC");
					this.OnQteRGCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QteBGC", DbType="SmallInt")]
		public System.Nullable<short> QteBGC
		{
			get
			{
				return this._QteBGC;
			}
			set
			{
				if ((this._QteBGC != value))
				{
					this.OnQteBGCChanging(value);
					this.SendPropertyChanging();
					this._QteBGC = value;
					this.SendPropertyChanged("QteBGC");
					this.OnQteBGCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONVENTIONNEL_OPERATION_CONVENTIONNEL", Storage="_OPERATION_CONVENTIONNEL", ThisKey="IdGC", OtherKey="IdGC")]
		public EntitySet<OPERATION_CONVENTIONNEL> OPERATION_CONVENTIONNEL
		{
			get
			{
				return this._OPERATION_CONVENTIONNEL;
			}
			set
			{
				this._OPERATION_CONVENTIONNEL.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONVENTIONNEL_ORDRE_SERVICE", Storage="_ORDRE_SERVICE", ThisKey="IdGC", OtherKey="IdGC")]
		public EntitySet<ORDRE_SERVICE> ORDRE_SERVICE
		{
			get
			{
				return this._ORDRE_SERVICE;
			}
			set
			{
				this._ORDRE_SERVICE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONVENTIONNEL_ELEMENT_FACTURATION", Storage="_ELEMENT_FACTURATION", ThisKey="IdGC", OtherKey="IdGC")]
		public EntitySet<ELEMENT_FACTURATION> ELEMENT_FACTURATION
		{
			get
			{
				return this._ELEMENT_FACTURATION;
			}
			set
			{
				this._ELEMENT_FACTURATION.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONVENTIONNEL_NOTE", Storage="_NOTE", ThisKey="IdGC", OtherKey="IdGC")]
		public EntitySet<NOTE> NOTE
		{
			get
			{
				return this._NOTE;
			}
			set
			{
				this._NOTE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONNAISSEMENT_CONVENTIONNEL", Storage="_CONNAISSEMENT", ThisKey="IdBL", OtherKey="IdBL", IsForeignKey=true, DeleteRule="CASCADE")]
		public CONNAISSEMENT CONNAISSEMENT
		{
			get
			{
				return this._CONNAISSEMENT.Entity;
			}
			set
			{
				CONNAISSEMENT previousValue = this._CONNAISSEMENT.Entity;
				if (((previousValue != value) 
							|| (this._CONNAISSEMENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CONNAISSEMENT.Entity = null;
						previousValue.CONVENTIONNEL.Remove(this);
					}
					this._CONNAISSEMENT.Entity = value;
					if ((value != null))
					{
						value.CONVENTIONNEL.Add(this);
						this._IdBL = value.IdBL;
					}
					else
					{
						this._IdBL = default(Nullable<int>);
					}
					this.SendPropertyChanged("CONNAISSEMENT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TYPE_CONVENTIONNEL_CONVENTIONNEL", Storage="_TYPE_CONVENTIONNEL", ThisKey="TypeMGC", OtherKey="CodeTypeGC", IsForeignKey=true)]
		public TYPE_CONVENTIONNEL TYPE_CONVENTIONNEL
		{
			get
			{
				return this._TYPE_CONVENTIONNEL.Entity;
			}
			set
			{
				TYPE_CONVENTIONNEL previousValue = this._TYPE_CONVENTIONNEL.Entity;
				if (((previousValue != value) 
							|| (this._TYPE_CONVENTIONNEL.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TYPE_CONVENTIONNEL.Entity = null;
						previousValue.CONVENTIONNEL.Remove(this);
					}
					this._TYPE_CONVENTIONNEL.Entity = value;
					if ((value != null))
					{
						value.CONVENTIONNEL.Add(this);
						this._TypeMGC = value.CodeTypeGC;
					}
					else
					{
						this._TypeMGC = default(string);
					}
					this.SendPropertyChanged("TYPE_CONVENTIONNEL");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ESCALE_CONVENTIONNEL", Storage="_ESCALE", ThisKey="IdEsc", OtherKey="IdEsc", IsForeignKey=true)]
		public ESCALE ESCALE
		{
			get
			{
				return this._ESCALE.Entity;
			}
			set
			{
				ESCALE previousValue = this._ESCALE.Entity;
				if (((previousValue != value) 
							|| (this._ESCALE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ESCALE.Entity = null;
						previousValue.CONVENTIONNEL.Remove(this);
					}
					this._ESCALE.Entity = value;
					if ((value != null))
					{
						value.CONVENTIONNEL.Add(this);
						this._IdEsc = value.IdEsc;
					}
					else
					{
						this._IdEsc = default(Nullable<int>);
					}
					this.SendPropertyChanged("ESCALE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MANIFESTE_CONVENTIONNEL", Storage="_MANIFESTE", ThisKey="IdMan", OtherKey="IdMan", IsForeignKey=true)]
		public MANIFESTE MANIFESTE
		{
			get
			{
				return this._MANIFESTE.Entity;
			}
			set
			{
				MANIFESTE previousValue = this._MANIFESTE.Entity;
				if (((previousValue != value) 
							|| (this._MANIFESTE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MANIFESTE.Entity = null;
						previousValue.CONVENTIONNEL.Remove(this);
					}
					this._MANIFESTE.Entity = value;
					if ((value != null))
					{
						value.CONVENTIONNEL.Add(this);
						this._IdMan = value.IdMan;
					}
					else
					{
						this._IdMan = default(Nullable<int>);
					}
					this.SendPropertyChanged("MANIFESTE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BON_ENLEVEMENT_CONVENTIONNEL", Storage="_BON_ENLEVEMENT", ThisKey="IdBAE", OtherKey="IdBAE", IsForeignKey=true)]
		public BON_ENLEVEMENT BON_ENLEVEMENT
		{
			get
			{
				return this._BON_ENLEVEMENT.Entity;
			}
			set
			{
				BON_ENLEVEMENT previousValue = this._BON_ENLEVEMENT.Entity;
				if (((previousValue != value) 
							|| (this._BON_ENLEVEMENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BON_ENLEVEMENT.Entity = null;
						previousValue.CONVENTIONNEL.Remove(this);
					}
					this._BON_ENLEVEMENT.Entity = value;
					if ((value != null))
					{
						value.CONVENTIONNEL.Add(this);
						this._IdBAE = value.IdBAE;
					}
					else
					{
						this._IdBAE = default(Nullable<int>);
					}
					this.SendPropertyChanged("BON_ENLEVEMENT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TYPE_CONVENTIONNEL_CONVENTIONNEL1", Storage="_TYPE_CONVENTIONNEL1", ThisKey="TypeCGC", OtherKey="CodeTypeGC", IsForeignKey=true)]
		public TYPE_CONVENTIONNEL TYPE_CONVENTIONNEL1
		{
			get
			{
				return this._TYPE_CONVENTIONNEL1.Entity;
			}
			set
			{
				TYPE_CONVENTIONNEL previousValue = this._TYPE_CONVENTIONNEL1.Entity;
				if (((previousValue != value) 
							|| (this._TYPE_CONVENTIONNEL1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TYPE_CONVENTIONNEL1.Entity = null;
						previousValue.CONVENTIONNEL1.Remove(this);
					}
					this._TYPE_CONVENTIONNEL1.Entity = value;
					if ((value != null))
					{
						value.CONVENTIONNEL1.Add(this);
						this._TypeCGC = value.CodeTypeGC;
					}
					else
					{
						this._TypeCGC = default(string);
					}
					this.SendPropertyChanged("TYPE_CONVENTIONNEL1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DEMANDE_LIVRAISON_CONVENTIONNEL", Storage="_DEMANDE_LIVRAISON", ThisKey="IdDBL", OtherKey="IdDBL", IsForeignKey=true)]
		public DEMANDE_LIVRAISON DEMANDE_LIVRAISON
		{
			get
			{
				return this._DEMANDE_LIVRAISON.Entity;
			}
			set
			{
				DEMANDE_LIVRAISON previousValue = this._DEMANDE_LIVRAISON.Entity;
				if (((previousValue != value) 
							|| (this._DEMANDE_LIVRAISON.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DEMANDE_LIVRAISON.Entity = null;
						previousValue.CONVENTIONNEL.Remove(this);
					}
					this._DEMANDE_LIVRAISON.Entity = value;
					if ((value != null))
					{
						value.CONVENTIONNEL.Add(this);
						this._IdDBL = value.IdDBL;
					}
					else
					{
						this._IdDBL = default(Nullable<int>);
					}
					this.SendPropertyChanged("DEMANDE_LIVRAISON");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BON_SORTIE_CONVENTIONNEL", Storage="_BON_SORTIE", ThisKey="IdBS", OtherKey="IdBS", IsForeignKey=true)]
		public BON_SORTIE BON_SORTIE
		{
			get
			{
				return this._BON_SORTIE.Entity;
			}
			set
			{
				BON_SORTIE previousValue = this._BON_SORTIE.Entity;
				if (((previousValue != value) 
							|| (this._BON_SORTIE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BON_SORTIE.Entity = null;
						previousValue.CONVENTIONNEL.Remove(this);
					}
					this._BON_SORTIE.Entity = value;
					if ((value != null))
					{
						value.CONVENTIONNEL.Add(this);
						this._IdBS = value.IdBS;
					}
					else
					{
						this._IdBS = default(Nullable<int>);
					}
					this.SendPropertyChanged("BON_SORTIE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OPERATION_CONVENTIONNEL(OPERATION_CONVENTIONNEL entity)
		{
			this.SendPropertyChanging();
			entity.CONVENTIONNEL = this;
		}
		
		private void detach_OPERATION_CONVENTIONNEL(OPERATION_CONVENTIONNEL entity)
		{
			this.SendPropertyChanging();
			entity.CONVENTIONNEL = null;
		}
		
		private void attach_ORDRE_SERVICE(ORDRE_SERVICE entity)
		{
			this.SendPropertyChanging();
			entity.CONVENTIONNEL = this;
		}
		
		private void detach_ORDRE_SERVICE(ORDRE_SERVICE entity)
		{
			this.SendPropertyChanging();
			entity.CONVENTIONNEL = null;
		}
		
		private void attach_ELEMENT_FACTURATION(ELEMENT_FACTURATION entity)
		{
			this.SendPropertyChanging();
			entity.CONVENTIONNEL = this;
		}
		
		private void detach_ELEMENT_FACTURATION(ELEMENT_FACTURATION entity)
		{
			this.SendPropertyChanging();
			entity.CONVENTIONNEL = null;
		}
		
		private void attach_NOTE(NOTE entity)
		{
			this.SendPropertyChanging();
			entity.CONVENTIONNEL = this;
		}
		
		private void detach_NOTE(NOTE entity)
		{
			this.SendPropertyChanging();
			entity.CONVENTIONNEL = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BON_SORTIE")]
	public partial class BON_SORTIE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdBS;
		
		private System.Nullable<System.DateTime> _DateBS;
		
		private string _AIBS;
		
		private System.Nullable<int> _IdBL;
		
		private System.Nullable<int> _IdVeh;
		
		private System.Nullable<int> _IdCtr;
		
		private System.Nullable<int> _IdGC;
		
		private System.Nullable<int> _IdU;
		
		private EntitySet<VEHICULE> _VEHICULE;
		
		private EntitySet<CONTENEUR> _CONTENEUR;
		
		private EntitySet<CONVENTIONNEL> _CONVENTIONNEL;
		
		private EntityRef<CONNAISSEMENT> _CONNAISSEMENT;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdBSChanging(int value);
    partial void OnIdBSChanged();
    partial void OnDateBSChanging(System.Nullable<System.DateTime> value);
    partial void OnDateBSChanged();
    partial void OnAIBSChanging(string value);
    partial void OnAIBSChanged();
    partial void OnIdBLChanging(System.Nullable<int> value);
    partial void OnIdBLChanged();
    partial void OnIdVehChanging(System.Nullable<int> value);
    partial void OnIdVehChanged();
    partial void OnIdCtrChanging(System.Nullable<int> value);
    partial void OnIdCtrChanged();
    partial void OnIdGCChanging(System.Nullable<int> value);
    partial void OnIdGCChanged();
    partial void OnIdUChanging(System.Nullable<int> value);
    partial void OnIdUChanged();
    #endregion
		
		public BON_SORTIE()
		{
			this._VEHICULE = new EntitySet<VEHICULE>(new Action<VEHICULE>(this.attach_VEHICULE), new Action<VEHICULE>(this.detach_VEHICULE));
			this._CONTENEUR = new EntitySet<CONTENEUR>(new Action<CONTENEUR>(this.attach_CONTENEUR), new Action<CONTENEUR>(this.detach_CONTENEUR));
			this._CONVENTIONNEL = new EntitySet<CONVENTIONNEL>(new Action<CONVENTIONNEL>(this.attach_CONVENTIONNEL), new Action<CONVENTIONNEL>(this.detach_CONVENTIONNEL));
			this._CONNAISSEMENT = default(EntityRef<CONNAISSEMENT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdBS", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdBS
		{
			get
			{
				return this._IdBS;
			}
			set
			{
				if ((this._IdBS != value))
				{
					this.OnIdBSChanging(value);
					this.SendPropertyChanging();
					this._IdBS = value;
					this.SendPropertyChanged("IdBS");
					this.OnIdBSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateBS", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateBS
		{
			get
			{
				return this._DateBS;
			}
			set
			{
				if ((this._DateBS != value))
				{
					this.OnDateBSChanging(value);
					this.SendPropertyChanging();
					this._DateBS = value;
					this.SendPropertyChanged("DateBS");
					this.OnDateBSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AIBS", DbType="NVarChar(255)")]
		public string AIBS
		{
			get
			{
				return this._AIBS;
			}
			set
			{
				if ((this._AIBS != value))
				{
					this.OnAIBSChanging(value);
					this.SendPropertyChanging();
					this._AIBS = value;
					this.SendPropertyChanged("AIBS");
					this.OnAIBSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdBL", DbType="Int")]
		public System.Nullable<int> IdBL
		{
			get
			{
				return this._IdBL;
			}
			set
			{
				if ((this._IdBL != value))
				{
					if (this._CONNAISSEMENT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdBLChanging(value);
					this.SendPropertyChanging();
					this._IdBL = value;
					this.SendPropertyChanged("IdBL");
					this.OnIdBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdVeh", DbType="Int")]
		public System.Nullable<int> IdVeh
		{
			get
			{
				return this._IdVeh;
			}
			set
			{
				if ((this._IdVeh != value))
				{
					this.OnIdVehChanging(value);
					this.SendPropertyChanging();
					this._IdVeh = value;
					this.SendPropertyChanged("IdVeh");
					this.OnIdVehChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCtr", DbType="Int")]
		public System.Nullable<int> IdCtr
		{
			get
			{
				return this._IdCtr;
			}
			set
			{
				if ((this._IdCtr != value))
				{
					this.OnIdCtrChanging(value);
					this.SendPropertyChanging();
					this._IdCtr = value;
					this.SendPropertyChanged("IdCtr");
					this.OnIdCtrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdGC", DbType="Int")]
		public System.Nullable<int> IdGC
		{
			get
			{
				return this._IdGC;
			}
			set
			{
				if ((this._IdGC != value))
				{
					this.OnIdGCChanging(value);
					this.SendPropertyChanging();
					this._IdGC = value;
					this.SendPropertyChanged("IdGC");
					this.OnIdGCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdU", DbType="Int")]
		public System.Nullable<int> IdU
		{
			get
			{
				return this._IdU;
			}
			set
			{
				if ((this._IdU != value))
				{
					this.OnIdUChanging(value);
					this.SendPropertyChanging();
					this._IdU = value;
					this.SendPropertyChanged("IdU");
					this.OnIdUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BON_SORTIE_VEHICULE", Storage="_VEHICULE", ThisKey="IdBS", OtherKey="IdBS")]
		public EntitySet<VEHICULE> VEHICULE
		{
			get
			{
				return this._VEHICULE;
			}
			set
			{
				this._VEHICULE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BON_SORTIE_CONTENEUR", Storage="_CONTENEUR", ThisKey="IdBS", OtherKey="IdBS")]
		public EntitySet<CONTENEUR> CONTENEUR
		{
			get
			{
				return this._CONTENEUR;
			}
			set
			{
				this._CONTENEUR.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BON_SORTIE_CONVENTIONNEL", Storage="_CONVENTIONNEL", ThisKey="IdBS", OtherKey="IdBS")]
		public EntitySet<CONVENTIONNEL> CONVENTIONNEL
		{
			get
			{
				return this._CONVENTIONNEL;
			}
			set
			{
				this._CONVENTIONNEL.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONNAISSEMENT_BON_SORTIE", Storage="_CONNAISSEMENT", ThisKey="IdBL", OtherKey="IdBL", IsForeignKey=true)]
		public CONNAISSEMENT CONNAISSEMENT
		{
			get
			{
				return this._CONNAISSEMENT.Entity;
			}
			set
			{
				CONNAISSEMENT previousValue = this._CONNAISSEMENT.Entity;
				if (((previousValue != value) 
							|| (this._CONNAISSEMENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CONNAISSEMENT.Entity = null;
						previousValue.BON_SORTIE.Remove(this);
					}
					this._CONNAISSEMENT.Entity = value;
					if ((value != null))
					{
						value.BON_SORTIE.Add(this);
						this._IdBL = value.IdBL;
					}
					else
					{
						this._IdBL = default(Nullable<int>);
					}
					this.SendPropertyChanged("CONNAISSEMENT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VEHICULE(VEHICULE entity)
		{
			this.SendPropertyChanging();
			entity.BON_SORTIE = this;
		}
		
		private void detach_VEHICULE(VEHICULE entity)
		{
			this.SendPropertyChanging();
			entity.BON_SORTIE = null;
		}
		
		private void attach_CONTENEUR(CONTENEUR entity)
		{
			this.SendPropertyChanging();
			entity.BON_SORTIE = this;
		}
		
		private void detach_CONTENEUR(CONTENEUR entity)
		{
			this.SendPropertyChanging();
			entity.BON_SORTIE = null;
		}
		
		private void attach_CONVENTIONNEL(CONVENTIONNEL entity)
		{
			this.SendPropertyChanging();
			entity.BON_SORTIE = this;
		}
		
		private void detach_CONVENTIONNEL(CONVENTIONNEL entity)
		{
			this.SendPropertyChanging();
			entity.BON_SORTIE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LIGNE_PRIX")]
	public partial class LIGNE_PRIX : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdLP;
		
		private string _CodeLP;
		
		private System.Nullable<short> _CodeArticle;
		
		private string _DescLP;
		
		private System.Nullable<int> _PU1LP;
		
		private System.Nullable<int> _PU2LP;
		
		private System.Nullable<int> _PU3LP;
		
		private System.Nullable<int> _PU4LP;
		
		private System.Nullable<int> _PU5LP;
		
		private System.Nullable<System.DateTime> _DDLP;
		
		private System.Nullable<System.DateTime> _DFLP;
		
		private string _UniteLP;
		
		private string _LP;
		
		private string _LP2;
		
		private string _Regle;
		
		private EntitySet<ELEMENT_FACTURATION> _ELEMENT_FACTURATION;
		
		private EntityRef<ARTICLE> _ARTICLE;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdLPChanging(int value);
    partial void OnIdLPChanged();
    partial void OnCodeLPChanging(string value);
    partial void OnCodeLPChanged();
    partial void OnCodeArticleChanging(System.Nullable<short> value);
    partial void OnCodeArticleChanged();
    partial void OnDescLPChanging(string value);
    partial void OnDescLPChanged();
    partial void OnPU1LPChanging(System.Nullable<int> value);
    partial void OnPU1LPChanged();
    partial void OnPU2LPChanging(System.Nullable<int> value);
    partial void OnPU2LPChanged();
    partial void OnPU3LPChanging(System.Nullable<int> value);
    partial void OnPU3LPChanged();
    partial void OnPU4LPChanging(System.Nullable<int> value);
    partial void OnPU4LPChanged();
    partial void OnPU5LPChanging(System.Nullable<int> value);
    partial void OnPU5LPChanged();
    partial void OnDDLPChanging(System.Nullable<System.DateTime> value);
    partial void OnDDLPChanged();
    partial void OnDFLPChanging(System.Nullable<System.DateTime> value);
    partial void OnDFLPChanged();
    partial void OnUniteLPChanging(string value);
    partial void OnUniteLPChanged();
    partial void OnLPChanging(string value);
    partial void OnLPChanged();
    partial void OnLP2Changing(string value);
    partial void OnLP2Changed();
    partial void OnRegleChanging(string value);
    partial void OnRegleChanged();
    #endregion
		
		public LIGNE_PRIX()
		{
			this._ELEMENT_FACTURATION = new EntitySet<ELEMENT_FACTURATION>(new Action<ELEMENT_FACTURATION>(this.attach_ELEMENT_FACTURATION), new Action<ELEMENT_FACTURATION>(this.detach_ELEMENT_FACTURATION));
			this._ARTICLE = default(EntityRef<ARTICLE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdLP", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdLP
		{
			get
			{
				return this._IdLP;
			}
			set
			{
				if ((this._IdLP != value))
				{
					this.OnIdLPChanging(value);
					this.SendPropertyChanging();
					this._IdLP = value;
					this.SendPropertyChanged("IdLP");
					this.OnIdLPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeLP", DbType="NVarChar(10)")]
		public string CodeLP
		{
			get
			{
				return this._CodeLP;
			}
			set
			{
				if ((this._CodeLP != value))
				{
					this.OnCodeLPChanging(value);
					this.SendPropertyChanging();
					this._CodeLP = value;
					this.SendPropertyChanged("CodeLP");
					this.OnCodeLPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeArticle", DbType="SmallInt")]
		public System.Nullable<short> CodeArticle
		{
			get
			{
				return this._CodeArticle;
			}
			set
			{
				if ((this._CodeArticle != value))
				{
					if (this._ARTICLE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodeArticleChanging(value);
					this.SendPropertyChanging();
					this._CodeArticle = value;
					this.SendPropertyChanged("CodeArticle");
					this.OnCodeArticleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescLP", DbType="NVarChar(255)")]
		public string DescLP
		{
			get
			{
				return this._DescLP;
			}
			set
			{
				if ((this._DescLP != value))
				{
					this.OnDescLPChanging(value);
					this.SendPropertyChanging();
					this._DescLP = value;
					this.SendPropertyChanged("DescLP");
					this.OnDescLPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PU1LP", DbType="Int")]
		public System.Nullable<int> PU1LP
		{
			get
			{
				return this._PU1LP;
			}
			set
			{
				if ((this._PU1LP != value))
				{
					this.OnPU1LPChanging(value);
					this.SendPropertyChanging();
					this._PU1LP = value;
					this.SendPropertyChanged("PU1LP");
					this.OnPU1LPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PU2LP", DbType="Int")]
		public System.Nullable<int> PU2LP
		{
			get
			{
				return this._PU2LP;
			}
			set
			{
				if ((this._PU2LP != value))
				{
					this.OnPU2LPChanging(value);
					this.SendPropertyChanging();
					this._PU2LP = value;
					this.SendPropertyChanged("PU2LP");
					this.OnPU2LPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PU3LP", DbType="Int")]
		public System.Nullable<int> PU3LP
		{
			get
			{
				return this._PU3LP;
			}
			set
			{
				if ((this._PU3LP != value))
				{
					this.OnPU3LPChanging(value);
					this.SendPropertyChanging();
					this._PU3LP = value;
					this.SendPropertyChanged("PU3LP");
					this.OnPU3LPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PU4LP", DbType="Int")]
		public System.Nullable<int> PU4LP
		{
			get
			{
				return this._PU4LP;
			}
			set
			{
				if ((this._PU4LP != value))
				{
					this.OnPU4LPChanging(value);
					this.SendPropertyChanging();
					this._PU4LP = value;
					this.SendPropertyChanged("PU4LP");
					this.OnPU4LPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PU5LP", DbType="Int")]
		public System.Nullable<int> PU5LP
		{
			get
			{
				return this._PU5LP;
			}
			set
			{
				if ((this._PU5LP != value))
				{
					this.OnPU5LPChanging(value);
					this.SendPropertyChanging();
					this._PU5LP = value;
					this.SendPropertyChanged("PU5LP");
					this.OnPU5LPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DDLP", DbType="DateTime")]
		public System.Nullable<System.DateTime> DDLP
		{
			get
			{
				return this._DDLP;
			}
			set
			{
				if ((this._DDLP != value))
				{
					this.OnDDLPChanging(value);
					this.SendPropertyChanging();
					this._DDLP = value;
					this.SendPropertyChanged("DDLP");
					this.OnDDLPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DFLP", DbType="DateTime")]
		public System.Nullable<System.DateTime> DFLP
		{
			get
			{
				return this._DFLP;
			}
			set
			{
				if ((this._DFLP != value))
				{
					this.OnDFLPChanging(value);
					this.SendPropertyChanging();
					this._DFLP = value;
					this.SendPropertyChanged("DFLP");
					this.OnDFLPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniteLP", DbType="NVarChar(20)")]
		public string UniteLP
		{
			get
			{
				return this._UniteLP;
			}
			set
			{
				if ((this._UniteLP != value))
				{
					this.OnUniteLPChanging(value);
					this.SendPropertyChanging();
					this._UniteLP = value;
					this.SendPropertyChanged("UniteLP");
					this.OnUniteLPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LP", DbType="NVarChar(20)")]
		public string LP
		{
			get
			{
				return this._LP;
			}
			set
			{
				if ((this._LP != value))
				{
					this.OnLPChanging(value);
					this.SendPropertyChanging();
					this._LP = value;
					this.SendPropertyChanged("LP");
					this.OnLPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LP2", DbType="NVarChar(50)")]
		public string LP2
		{
			get
			{
				return this._LP2;
			}
			set
			{
				if ((this._LP2 != value))
				{
					this.OnLP2Changing(value);
					this.SendPropertyChanging();
					this._LP2 = value;
					this.SendPropertyChanged("LP2");
					this.OnLP2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Regle", DbType="NVarChar(255)")]
		public string Regle
		{
			get
			{
				return this._Regle;
			}
			set
			{
				if ((this._Regle != value))
				{
					this.OnRegleChanging(value);
					this.SendPropertyChanging();
					this._Regle = value;
					this.SendPropertyChanged("Regle");
					this.OnRegleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LIGNE_PRIX_ELEMENT_FACTURATION", Storage="_ELEMENT_FACTURATION", ThisKey="IdLP", OtherKey="IdLP")]
		public EntitySet<ELEMENT_FACTURATION> ELEMENT_FACTURATION
		{
			get
			{
				return this._ELEMENT_FACTURATION;
			}
			set
			{
				this._ELEMENT_FACTURATION.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ARTICLE_LIGNE_PRIX", Storage="_ARTICLE", ThisKey="CodeArticle", OtherKey="CodeArticle", IsForeignKey=true, DeleteRule="CASCADE")]
		public ARTICLE ARTICLE
		{
			get
			{
				return this._ARTICLE.Entity;
			}
			set
			{
				ARTICLE previousValue = this._ARTICLE.Entity;
				if (((previousValue != value) 
							|| (this._ARTICLE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ARTICLE.Entity = null;
						previousValue.LIGNE_PRIX.Remove(this);
					}
					this._ARTICLE.Entity = value;
					if ((value != null))
					{
						value.LIGNE_PRIX.Add(this);
						this._CodeArticle = value.CodeArticle;
					}
					else
					{
						this._CodeArticle = default(Nullable<short>);
					}
					this.SendPropertyChanged("ARTICLE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ELEMENT_FACTURATION(ELEMENT_FACTURATION entity)
		{
			this.SendPropertyChanging();
			entity.LIGNE_PRIX = this;
		}
		
		private void detach_ELEMENT_FACTURATION(ELEMENT_FACTURATION entity)
		{
			this.SendPropertyChanging();
			entity.LIGNE_PRIX = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FOURNISSEUR")]
	public partial class FOURNISSEUR : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdFsseur;
		
		private string _CodeFsseur;
		
		private string _NomFsseur;
		
		private string _AdrFsseur;
		
		private string _EmailFsseur;
		
		private string _TelFsseur;
		
		private string _CCFsseur;
		
		private string _CodeTVA;
		
		private string _StatutFsseur;
		
		private EntitySet<ORDRE_SERVICE> _ORDRE_SERVICE;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdFsseurChanging(int value);
    partial void OnIdFsseurChanged();
    partial void OnCodeFsseurChanging(string value);
    partial void OnCodeFsseurChanged();
    partial void OnNomFsseurChanging(string value);
    partial void OnNomFsseurChanged();
    partial void OnAdrFsseurChanging(string value);
    partial void OnAdrFsseurChanged();
    partial void OnEmailFsseurChanging(string value);
    partial void OnEmailFsseurChanged();
    partial void OnTelFsseurChanging(string value);
    partial void OnTelFsseurChanged();
    partial void OnCCFsseurChanging(string value);
    partial void OnCCFsseurChanged();
    partial void OnCodeTVAChanging(string value);
    partial void OnCodeTVAChanged();
    partial void OnStatutFsseurChanging(string value);
    partial void OnStatutFsseurChanged();
    #endregion
		
		public FOURNISSEUR()
		{
			this._ORDRE_SERVICE = new EntitySet<ORDRE_SERVICE>(new Action<ORDRE_SERVICE>(this.attach_ORDRE_SERVICE), new Action<ORDRE_SERVICE>(this.detach_ORDRE_SERVICE));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFsseur", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdFsseur
		{
			get
			{
				return this._IdFsseur;
			}
			set
			{
				if ((this._IdFsseur != value))
				{
					this.OnIdFsseurChanging(value);
					this.SendPropertyChanging();
					this._IdFsseur = value;
					this.SendPropertyChanged("IdFsseur");
					this.OnIdFsseurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeFsseur", DbType="NVarChar(20)")]
		public string CodeFsseur
		{
			get
			{
				return this._CodeFsseur;
			}
			set
			{
				if ((this._CodeFsseur != value))
				{
					this.OnCodeFsseurChanging(value);
					this.SendPropertyChanging();
					this._CodeFsseur = value;
					this.SendPropertyChanged("CodeFsseur");
					this.OnCodeFsseurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NomFsseur", DbType="NVarChar(50)")]
		public string NomFsseur
		{
			get
			{
				return this._NomFsseur;
			}
			set
			{
				if ((this._NomFsseur != value))
				{
					this.OnNomFsseurChanging(value);
					this.SendPropertyChanging();
					this._NomFsseur = value;
					this.SendPropertyChanged("NomFsseur");
					this.OnNomFsseurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdrFsseur", DbType="NVarChar(255)")]
		public string AdrFsseur
		{
			get
			{
				return this._AdrFsseur;
			}
			set
			{
				if ((this._AdrFsseur != value))
				{
					this.OnAdrFsseurChanging(value);
					this.SendPropertyChanging();
					this._AdrFsseur = value;
					this.SendPropertyChanged("AdrFsseur");
					this.OnAdrFsseurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailFsseur", DbType="NVarChar(50)")]
		public string EmailFsseur
		{
			get
			{
				return this._EmailFsseur;
			}
			set
			{
				if ((this._EmailFsseur != value))
				{
					this.OnEmailFsseurChanging(value);
					this.SendPropertyChanging();
					this._EmailFsseur = value;
					this.SendPropertyChanged("EmailFsseur");
					this.OnEmailFsseurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelFsseur", DbType="NVarChar(50)")]
		public string TelFsseur
		{
			get
			{
				return this._TelFsseur;
			}
			set
			{
				if ((this._TelFsseur != value))
				{
					this.OnTelFsseurChanging(value);
					this.SendPropertyChanging();
					this._TelFsseur = value;
					this.SendPropertyChanged("TelFsseur");
					this.OnTelFsseurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCFsseur", DbType="NVarChar(20)")]
		public string CCFsseur
		{
			get
			{
				return this._CCFsseur;
			}
			set
			{
				if ((this._CCFsseur != value))
				{
					this.OnCCFsseurChanging(value);
					this.SendPropertyChanging();
					this._CCFsseur = value;
					this.SendPropertyChanged("CCFsseur");
					this.OnCCFsseurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeTVA", DbType="NVarChar(10)")]
		public string CodeTVA
		{
			get
			{
				return this._CodeTVA;
			}
			set
			{
				if ((this._CodeTVA != value))
				{
					this.OnCodeTVAChanging(value);
					this.SendPropertyChanging();
					this._CodeTVA = value;
					this.SendPropertyChanged("CodeTVA");
					this.OnCodeTVAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatutFsseur", DbType="NVarChar(1)")]
		public string StatutFsseur
		{
			get
			{
				return this._StatutFsseur;
			}
			set
			{
				if ((this._StatutFsseur != value))
				{
					this.OnStatutFsseurChanging(value);
					this.SendPropertyChanging();
					this._StatutFsseur = value;
					this.SendPropertyChanged("StatutFsseur");
					this.OnStatutFsseurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FOURNISSEUR_ORDRE_SERVICE", Storage="_ORDRE_SERVICE", ThisKey="IdFsseur", OtherKey="IdFsseur")]
		public EntitySet<ORDRE_SERVICE> ORDRE_SERVICE
		{
			get
			{
				return this._ORDRE_SERVICE;
			}
			set
			{
				this._ORDRE_SERVICE.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ORDRE_SERVICE(ORDRE_SERVICE entity)
		{
			this.SendPropertyChanging();
			entity.FOURNISSEUR = this;
		}
		
		private void detach_ORDRE_SERVICE(ORDRE_SERVICE entity)
		{
			this.SendPropertyChanging();
			entity.FOURNISSEUR = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MAFI")]
	public partial class MAFI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdMafi;
		
		private string _NumMafi;
		
		private System.Nullable<System.DateTime> _DCMafi;
		
		private string _DescMafi;
		
		private string _TypeMMafi;
		
		private System.Nullable<float> _VolMMafi;
		
		private System.Nullable<int> _PoidsMMafi;
		
		private string _CatMseMafi;
		
		private string _IMDGCode;
		
		private string _DescMses;
		
		private System.Nullable<short> _NumItem;
		
		private string _InfoMan;
		
		private string _TypeCMafi;
		
		private System.Nullable<int> _PoidsCMafi;
		
		private string _StatMafi;
		
		private System.Nullable<System.DateTime> _FFMafi;
		
		private System.Nullable<System.DateTime> _FFSMafi;
		
		private System.Nullable<System.DateTime> _FSMafi;
		
		private System.Nullable<System.DateTime> _DSPMafi;
		
		private System.Nullable<System.DateTime> _DVD;
		
		private System.Nullable<System.DateTime> _DDR;
		
		private System.Nullable<int> _IdBL;
		
		private System.Nullable<int> _IdMan;
		
		private System.Nullable<int> _IdEsc;
		
		private System.Nullable<int> _IdBAE;
		
		private System.Nullable<int> _IdDBL;
		
		private System.Nullable<int> _IdBS;
		
		private System.Nullable<System.DateTime> _DSCtr;
		
		private string _NomEnMafi;
		
		private string _CNIEnMafi;
		
		private string _TelenMafi;
		
		private string _NumADDMafi;
		
		private string _NumAVIMafi;
		
		private string _NumDDMafi;
		
		private string _NumQDMafi;
		
		private string _NumFPADMafi;
		
		private string _NumQPADMafi;
		
		private string _NumAEPADMafi;
		
		private string _NumBESCMafi;
		
		private string _NumSydoniaMafi;
		
		private string _SensMafi;
		
		private EntitySet<ORDRE_SERVICE> _ORDRE_SERVICE;
		
		private EntitySet<ELEMENT_FACTURATION> _ELEMENT_FACTURATION;
		
		private EntitySet<OPERATION_MAFI> _OPERATION_MAFI;
		
		private EntitySet<NOTE> _NOTE;
		
		private EntityRef<CONNAISSEMENT> _CONNAISSEMENT;
		
		private EntityRef<MANIFESTE> _MANIFESTE;
		
		private EntityRef<ESCALE> _ESCALE;
		
		private EntityRef<BON_ENLEVEMENT> _BON_ENLEVEMENT;
		
		private EntityRef<DEMANDE_LIVRAISON> _DEMANDE_LIVRAISON;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdMafiChanging(int value);
    partial void OnIdMafiChanged();
    partial void OnNumMafiChanging(string value);
    partial void OnNumMafiChanged();
    partial void OnDCMafiChanging(System.Nullable<System.DateTime> value);
    partial void OnDCMafiChanged();
    partial void OnDescMafiChanging(string value);
    partial void OnDescMafiChanged();
    partial void OnTypeMMafiChanging(string value);
    partial void OnTypeMMafiChanged();
    partial void OnVolMMafiChanging(System.Nullable<float> value);
    partial void OnVolMMafiChanged();
    partial void OnPoidsMMafiChanging(System.Nullable<int> value);
    partial void OnPoidsMMafiChanged();
    partial void OnCatMseMafiChanging(string value);
    partial void OnCatMseMafiChanged();
    partial void OnIMDGCodeChanging(string value);
    partial void OnIMDGCodeChanged();
    partial void OnDescMsesChanging(string value);
    partial void OnDescMsesChanged();
    partial void OnNumItemChanging(System.Nullable<short> value);
    partial void OnNumItemChanged();
    partial void OnInfoManChanging(string value);
    partial void OnInfoManChanged();
    partial void OnTypeCMafiChanging(string value);
    partial void OnTypeCMafiChanged();
    partial void OnPoidsCMafiChanging(System.Nullable<int> value);
    partial void OnPoidsCMafiChanged();
    partial void OnStatMafiChanging(string value);
    partial void OnStatMafiChanged();
    partial void OnFFMafiChanging(System.Nullable<System.DateTime> value);
    partial void OnFFMafiChanged();
    partial void OnFFSMafiChanging(System.Nullable<System.DateTime> value);
    partial void OnFFSMafiChanged();
    partial void OnFSMafiChanging(System.Nullable<System.DateTime> value);
    partial void OnFSMafiChanged();
    partial void OnDSPMafiChanging(System.Nullable<System.DateTime> value);
    partial void OnDSPMafiChanged();
    partial void OnDVDChanging(System.Nullable<System.DateTime> value);
    partial void OnDVDChanged();
    partial void OnDDRChanging(System.Nullable<System.DateTime> value);
    partial void OnDDRChanged();
    partial void OnIdBLChanging(System.Nullable<int> value);
    partial void OnIdBLChanged();
    partial void OnIdManChanging(System.Nullable<int> value);
    partial void OnIdManChanged();
    partial void OnIdEscChanging(System.Nullable<int> value);
    partial void OnIdEscChanged();
    partial void OnIdBAEChanging(System.Nullable<int> value);
    partial void OnIdBAEChanged();
    partial void OnIdDBLChanging(System.Nullable<int> value);
    partial void OnIdDBLChanged();
    partial void OnIdBSChanging(System.Nullable<int> value);
    partial void OnIdBSChanged();
    partial void OnDSMafiChanging(System.Nullable<System.DateTime> value);
    partial void OnDSMafiChanged();
    partial void OnNomEnMafiChanging(string value);
    partial void OnNomEnMafiChanged();
    partial void OnCNIEnMafiChanging(string value);
    partial void OnCNIEnMafiChanged();
    partial void OnTelenMafiChanging(string value);
    partial void OnTelenMafiChanged();
    partial void OnNumADDMafiChanging(string value);
    partial void OnNumADDMafiChanged();
    partial void OnNumAVIMafiChanging(string value);
    partial void OnNumAVIMafiChanged();
    partial void OnNumDDMafiChanging(string value);
    partial void OnNumDDMafiChanged();
    partial void OnNumQDMafiChanging(string value);
    partial void OnNumQDMafiChanged();
    partial void OnNumFPADMafiChanging(string value);
    partial void OnNumFPADMafiChanged();
    partial void OnNumQPADMafiChanging(string value);
    partial void OnNumQPADMafiChanged();
    partial void OnNumAEPADMafiChanging(string value);
    partial void OnNumAEPADMafiChanged();
    partial void OnNumBESCMafiChanging(string value);
    partial void OnNumBESCMafiChanged();
    partial void OnNumSydoniaMafiChanging(string value);
    partial void OnNumSydoniaMafiChanged();
    partial void OnSensMafiChanging(string value);
    partial void OnSensMafiChanged();
    #endregion
		
		public MAFI()
		{
			this._ORDRE_SERVICE = new EntitySet<ORDRE_SERVICE>(new Action<ORDRE_SERVICE>(this.attach_ORDRE_SERVICE), new Action<ORDRE_SERVICE>(this.detach_ORDRE_SERVICE));
			this._ELEMENT_FACTURATION = new EntitySet<ELEMENT_FACTURATION>(new Action<ELEMENT_FACTURATION>(this.attach_ELEMENT_FACTURATION), new Action<ELEMENT_FACTURATION>(this.detach_ELEMENT_FACTURATION));
			this._OPERATION_MAFI = new EntitySet<OPERATION_MAFI>(new Action<OPERATION_MAFI>(this.attach_OPERATION_MAFI), new Action<OPERATION_MAFI>(this.detach_OPERATION_MAFI));
			this._NOTE = new EntitySet<NOTE>(new Action<NOTE>(this.attach_NOTE), new Action<NOTE>(this.detach_NOTE));
			this._CONNAISSEMENT = default(EntityRef<CONNAISSEMENT>);
			this._MANIFESTE = default(EntityRef<MANIFESTE>);
			this._ESCALE = default(EntityRef<ESCALE>);
			this._BON_ENLEVEMENT = default(EntityRef<BON_ENLEVEMENT>);
			this._DEMANDE_LIVRAISON = default(EntityRef<DEMANDE_LIVRAISON>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdMafi", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdMafi
		{
			get
			{
				return this._IdMafi;
			}
			set
			{
				if ((this._IdMafi != value))
				{
					this.OnIdMafiChanging(value);
					this.SendPropertyChanging();
					this._IdMafi = value;
					this.SendPropertyChanged("IdMafi");
					this.OnIdMafiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumMafi", DbType="NVarChar(20)")]
		public string NumMafi
		{
			get
			{
				return this._NumMafi;
			}
			set
			{
				if ((this._NumMafi != value))
				{
					this.OnNumMafiChanging(value);
					this.SendPropertyChanging();
					this._NumMafi = value;
					this.SendPropertyChanged("NumMafi");
					this.OnNumMafiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DCMafi", DbType="DateTime")]
		public System.Nullable<System.DateTime> DCMafi
		{
			get
			{
				return this._DCMafi;
			}
			set
			{
				if ((this._DCMafi != value))
				{
					this.OnDCMafiChanging(value);
					this.SendPropertyChanging();
					this._DCMafi = value;
					this.SendPropertyChanged("DCMafi");
					this.OnDCMafiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescMafi", DbType="NVarChar(255)")]
		public string DescMafi
		{
			get
			{
				return this._DescMafi;
			}
			set
			{
				if ((this._DescMafi != value))
				{
					this.OnDescMafiChanging(value);
					this.SendPropertyChanging();
					this._DescMafi = value;
					this.SendPropertyChanged("DescMafi");
					this.OnDescMafiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeMMafi", DbType="NVarChar(20)")]
		public string TypeMMafi
		{
			get
			{
				return this._TypeMMafi;
			}
			set
			{
				if ((this._TypeMMafi != value))
				{
					this.OnTypeMMafiChanging(value);
					this.SendPropertyChanging();
					this._TypeMMafi = value;
					this.SendPropertyChanged("TypeMMafi");
					this.OnTypeMMafiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VolMMafi", DbType="Real")]
		public System.Nullable<float> VolMMafi
		{
			get
			{
				return this._VolMMafi;
			}
			set
			{
				if ((this._VolMMafi != value))
				{
					this.OnVolMMafiChanging(value);
					this.SendPropertyChanging();
					this._VolMMafi = value;
					this.SendPropertyChanged("VolMMafi");
					this.OnVolMMafiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PoidsMMafi", DbType="Int")]
		public System.Nullable<int> PoidsMMafi
		{
			get
			{
				return this._PoidsMMafi;
			}
			set
			{
				if ((this._PoidsMMafi != value))
				{
					this.OnPoidsMMafiChanging(value);
					this.SendPropertyChanging();
					this._PoidsMMafi = value;
					this.SendPropertyChanged("PoidsMMafi");
					this.OnPoidsMMafiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatMseMafi", DbType="NVarChar(2)")]
		public string CatMseMafi
		{
			get
			{
				return this._CatMseMafi;
			}
			set
			{
				if ((this._CatMseMafi != value))
				{
					this.OnCatMseMafiChanging(value);
					this.SendPropertyChanging();
					this._CatMseMafi = value;
					this.SendPropertyChanged("CatMseMafi");
					this.OnCatMseMafiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IMDGCode", DbType="NVarChar(5)")]
		public string IMDGCode
		{
			get
			{
				return this._IMDGCode;
			}
			set
			{
				if ((this._IMDGCode != value))
				{
					this.OnIMDGCodeChanging(value);
					this.SendPropertyChanging();
					this._IMDGCode = value;
					this.SendPropertyChanged("IMDGCode");
					this.OnIMDGCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescMses", DbType="NVarChar(255)")]
		public string DescMses
		{
			get
			{
				return this._DescMses;
			}
			set
			{
				if ((this._DescMses != value))
				{
					this.OnDescMsesChanging(value);
					this.SendPropertyChanging();
					this._DescMses = value;
					this.SendPropertyChanged("DescMses");
					this.OnDescMsesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumItem", DbType="SmallInt")]
		public System.Nullable<short> NumItem
		{
			get
			{
				return this._NumItem;
			}
			set
			{
				if ((this._NumItem != value))
				{
					this.OnNumItemChanging(value);
					this.SendPropertyChanging();
					this._NumItem = value;
					this.SendPropertyChanged("NumItem");
					this.OnNumItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InfoMan", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string InfoMan
		{
			get
			{
				return this._InfoMan;
			}
			set
			{
				if ((this._InfoMan != value))
				{
					this.OnInfoManChanging(value);
					this.SendPropertyChanging();
					this._InfoMan = value;
					this.SendPropertyChanged("InfoMan");
					this.OnInfoManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeCMafi", DbType="NVarChar(20)")]
		public string TypeCMafi
		{
			get
			{
				return this._TypeCMafi;
			}
			set
			{
				if ((this._TypeCMafi != value))
				{
					this.OnTypeCMafiChanging(value);
					this.SendPropertyChanging();
					this._TypeCMafi = value;
					this.SendPropertyChanged("TypeCMafi");
					this.OnTypeCMafiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PoidsCMafi", DbType="Int")]
		public System.Nullable<int> PoidsCMafi
		{
			get
			{
				return this._PoidsCMafi;
			}
			set
			{
				if ((this._PoidsCMafi != value))
				{
					this.OnPoidsCMafiChanging(value);
					this.SendPropertyChanging();
					this._PoidsCMafi = value;
					this.SendPropertyChanged("PoidsCMafi");
					this.OnPoidsCMafiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatMafi", DbType="NVarChar(25)")]
		public string StatMafi
		{
			get
			{
				return this._StatMafi;
			}
			set
			{
				if ((this._StatMafi != value))
				{
					this.OnStatMafiChanging(value);
					this.SendPropertyChanging();
					this._StatMafi = value;
					this.SendPropertyChanged("StatMafi");
					this.OnStatMafiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FFMafi", DbType="DateTime")]
		public System.Nullable<System.DateTime> FFMafi
		{
			get
			{
				return this._FFMafi;
			}
			set
			{
				if ((this._FFMafi != value))
				{
					this.OnFFMafiChanging(value);
					this.SendPropertyChanging();
					this._FFMafi = value;
					this.SendPropertyChanged("FFMafi");
					this.OnFFMafiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FFSMafi", DbType="DateTime")]
		public System.Nullable<System.DateTime> FFSMafi
		{
			get
			{
				return this._FFSMafi;
			}
			set
			{
				if ((this._FFSMafi != value))
				{
					this.OnFFSMafiChanging(value);
					this.SendPropertyChanging();
					this._FFSMafi = value;
					this.SendPropertyChanged("FFSMafi");
					this.OnFFSMafiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FSMafi", DbType="DateTime")]
		public System.Nullable<System.DateTime> FSMafi
		{
			get
			{
				return this._FSMafi;
			}
			set
			{
				if ((this._FSMafi != value))
				{
					this.OnFSMafiChanging(value);
					this.SendPropertyChanging();
					this._FSMafi = value;
					this.SendPropertyChanged("FSMafi");
					this.OnFSMafiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DSPMafi", DbType="DateTime")]
		public System.Nullable<System.DateTime> DSPMafi
		{
			get
			{
				return this._DSPMafi;
			}
			set
			{
				if ((this._DSPMafi != value))
				{
					this.OnDSPMafiChanging(value);
					this.SendPropertyChanging();
					this._DSPMafi = value;
					this.SendPropertyChanged("DSPMafi");
					this.OnDSPMafiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DVD", DbType="DateTime")]
		public System.Nullable<System.DateTime> DVD
		{
			get
			{
				return this._DVD;
			}
			set
			{
				if ((this._DVD != value))
				{
					this.OnDVDChanging(value);
					this.SendPropertyChanging();
					this._DVD = value;
					this.SendPropertyChanged("DVD");
					this.OnDVDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DDR", DbType="DateTime")]
		public System.Nullable<System.DateTime> DDR
		{
			get
			{
				return this._DDR;
			}
			set
			{
				if ((this._DDR != value))
				{
					this.OnDDRChanging(value);
					this.SendPropertyChanging();
					this._DDR = value;
					this.SendPropertyChanged("DDR");
					this.OnDDRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdBL", DbType="Int")]
		public System.Nullable<int> IdBL
		{
			get
			{
				return this._IdBL;
			}
			set
			{
				if ((this._IdBL != value))
				{
					if (this._CONNAISSEMENT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdBLChanging(value);
					this.SendPropertyChanging();
					this._IdBL = value;
					this.SendPropertyChanged("IdBL");
					this.OnIdBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdMan", DbType="Int")]
		public System.Nullable<int> IdMan
		{
			get
			{
				return this._IdMan;
			}
			set
			{
				if ((this._IdMan != value))
				{
					if (this._MANIFESTE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdManChanging(value);
					this.SendPropertyChanging();
					this._IdMan = value;
					this.SendPropertyChanged("IdMan");
					this.OnIdManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEsc", DbType="Int")]
		public System.Nullable<int> IdEsc
		{
			get
			{
				return this._IdEsc;
			}
			set
			{
				if ((this._IdEsc != value))
				{
					if (this._ESCALE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdEscChanging(value);
					this.SendPropertyChanging();
					this._IdEsc = value;
					this.SendPropertyChanged("IdEsc");
					this.OnIdEscChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdBAE", DbType="Int")]
		public System.Nullable<int> IdBAE
		{
			get
			{
				return this._IdBAE;
			}
			set
			{
				if ((this._IdBAE != value))
				{
					if (this._BON_ENLEVEMENT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdBAEChanging(value);
					this.SendPropertyChanging();
					this._IdBAE = value;
					this.SendPropertyChanged("IdBAE");
					this.OnIdBAEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDBL", DbType="Int")]
		public System.Nullable<int> IdDBL
		{
			get
			{
				return this._IdDBL;
			}
			set
			{
				if ((this._IdDBL != value))
				{
					if (this._DEMANDE_LIVRAISON.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdDBLChanging(value);
					this.SendPropertyChanging();
					this._IdDBL = value;
					this.SendPropertyChanged("IdDBL");
					this.OnIdDBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdBS", DbType="Int")]
		public System.Nullable<int> IdBS
		{
			get
			{
				return this._IdBS;
			}
			set
			{
				if ((this._IdBS != value))
				{
					this.OnIdBSChanging(value);
					this.SendPropertyChanging();
					this._IdBS = value;
					this.SendPropertyChanged("IdBS");
					this.OnIdBSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DSCtr", DbType="DateTime")]
		public System.Nullable<System.DateTime> DSMafi
		{
			get
			{
				return this._DSCtr;
			}
			set
			{
				if ((this._DSCtr != value))
				{
					this.OnDSMafiChanging(value);
					this.SendPropertyChanging();
					this._DSCtr = value;
					this.SendPropertyChanged("DSMafi");
					this.OnDSMafiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NomEnMafi", DbType="NVarChar(50)")]
		public string NomEnMafi
		{
			get
			{
				return this._NomEnMafi;
			}
			set
			{
				if ((this._NomEnMafi != value))
				{
					this.OnNomEnMafiChanging(value);
					this.SendPropertyChanging();
					this._NomEnMafi = value;
					this.SendPropertyChanged("NomEnMafi");
					this.OnNomEnMafiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CNIEnMafi", DbType="NVarChar(20)")]
		public string CNIEnMafi
		{
			get
			{
				return this._CNIEnMafi;
			}
			set
			{
				if ((this._CNIEnMafi != value))
				{
					this.OnCNIEnMafiChanging(value);
					this.SendPropertyChanging();
					this._CNIEnMafi = value;
					this.SendPropertyChanged("CNIEnMafi");
					this.OnCNIEnMafiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelenMafi", DbType="NVarChar(20)")]
		public string TelenMafi
		{
			get
			{
				return this._TelenMafi;
			}
			set
			{
				if ((this._TelenMafi != value))
				{
					this.OnTelenMafiChanging(value);
					this.SendPropertyChanging();
					this._TelenMafi = value;
					this.SendPropertyChanged("TelenMafi");
					this.OnTelenMafiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumADDMafi", DbType="NVarChar(20)")]
		public string NumADDMafi
		{
			get
			{
				return this._NumADDMafi;
			}
			set
			{
				if ((this._NumADDMafi != value))
				{
					this.OnNumADDMafiChanging(value);
					this.SendPropertyChanging();
					this._NumADDMafi = value;
					this.SendPropertyChanged("NumADDMafi");
					this.OnNumADDMafiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumAVIMafi", DbType="NVarChar(20)")]
		public string NumAVIMafi
		{
			get
			{
				return this._NumAVIMafi;
			}
			set
			{
				if ((this._NumAVIMafi != value))
				{
					this.OnNumAVIMafiChanging(value);
					this.SendPropertyChanging();
					this._NumAVIMafi = value;
					this.SendPropertyChanged("NumAVIMafi");
					this.OnNumAVIMafiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumDDMafi", DbType="NVarChar(20)")]
		public string NumDDMafi
		{
			get
			{
				return this._NumDDMafi;
			}
			set
			{
				if ((this._NumDDMafi != value))
				{
					this.OnNumDDMafiChanging(value);
					this.SendPropertyChanging();
					this._NumDDMafi = value;
					this.SendPropertyChanged("NumDDMafi");
					this.OnNumDDMafiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumQDMafi", DbType="NVarChar(20)")]
		public string NumQDMafi
		{
			get
			{
				return this._NumQDMafi;
			}
			set
			{
				if ((this._NumQDMafi != value))
				{
					this.OnNumQDMafiChanging(value);
					this.SendPropertyChanging();
					this._NumQDMafi = value;
					this.SendPropertyChanged("NumQDMafi");
					this.OnNumQDMafiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumFPADMafi", DbType="NVarChar(20)")]
		public string NumFPADMafi
		{
			get
			{
				return this._NumFPADMafi;
			}
			set
			{
				if ((this._NumFPADMafi != value))
				{
					this.OnNumFPADMafiChanging(value);
					this.SendPropertyChanging();
					this._NumFPADMafi = value;
					this.SendPropertyChanged("NumFPADMafi");
					this.OnNumFPADMafiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumQPADMafi", DbType="NVarChar(20)")]
		public string NumQPADMafi
		{
			get
			{
				return this._NumQPADMafi;
			}
			set
			{
				if ((this._NumQPADMafi != value))
				{
					this.OnNumQPADMafiChanging(value);
					this.SendPropertyChanging();
					this._NumQPADMafi = value;
					this.SendPropertyChanged("NumQPADMafi");
					this.OnNumQPADMafiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumAEPADMafi", DbType="NVarChar(20)")]
		public string NumAEPADMafi
		{
			get
			{
				return this._NumAEPADMafi;
			}
			set
			{
				if ((this._NumAEPADMafi != value))
				{
					this.OnNumAEPADMafiChanging(value);
					this.SendPropertyChanging();
					this._NumAEPADMafi = value;
					this.SendPropertyChanged("NumAEPADMafi");
					this.OnNumAEPADMafiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumBESCMafi", DbType="NVarChar(20)")]
		public string NumBESCMafi
		{
			get
			{
				return this._NumBESCMafi;
			}
			set
			{
				if ((this._NumBESCMafi != value))
				{
					this.OnNumBESCMafiChanging(value);
					this.SendPropertyChanging();
					this._NumBESCMafi = value;
					this.SendPropertyChanged("NumBESCMafi");
					this.OnNumBESCMafiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumSydoniaMafi", DbType="NVarChar(20)")]
		public string NumSydoniaMafi
		{
			get
			{
				return this._NumSydoniaMafi;
			}
			set
			{
				if ((this._NumSydoniaMafi != value))
				{
					this.OnNumSydoniaMafiChanging(value);
					this.SendPropertyChanging();
					this._NumSydoniaMafi = value;
					this.SendPropertyChanged("NumSydoniaMafi");
					this.OnNumSydoniaMafiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SensMafi", DbType="NVarChar(1)")]
		public string SensMafi
		{
			get
			{
				return this._SensMafi;
			}
			set
			{
				if ((this._SensMafi != value))
				{
					this.OnSensMafiChanging(value);
					this.SendPropertyChanging();
					this._SensMafi = value;
					this.SendPropertyChanged("SensMafi");
					this.OnSensMafiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MAFI_ORDRE_SERVICE", Storage="_ORDRE_SERVICE", ThisKey="IdMafi", OtherKey="IdMafi")]
		public EntitySet<ORDRE_SERVICE> ORDRE_SERVICE
		{
			get
			{
				return this._ORDRE_SERVICE;
			}
			set
			{
				this._ORDRE_SERVICE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MAFI_ELEMENT_FACTURATION", Storage="_ELEMENT_FACTURATION", ThisKey="IdMafi", OtherKey="IdMafi")]
		public EntitySet<ELEMENT_FACTURATION> ELEMENT_FACTURATION
		{
			get
			{
				return this._ELEMENT_FACTURATION;
			}
			set
			{
				this._ELEMENT_FACTURATION.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MAFI_OPERATION_MAFI", Storage="_OPERATION_MAFI", ThisKey="IdMafi", OtherKey="IdMafi")]
		public EntitySet<OPERATION_MAFI> OPERATION_MAFI
		{
			get
			{
				return this._OPERATION_MAFI;
			}
			set
			{
				this._OPERATION_MAFI.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MAFI_NOTE", Storage="_NOTE", ThisKey="IdMafi", OtherKey="IdMafi")]
		public EntitySet<NOTE> NOTE
		{
			get
			{
				return this._NOTE;
			}
			set
			{
				this._NOTE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONNAISSEMENT_MAFI", Storage="_CONNAISSEMENT", ThisKey="IdBL", OtherKey="IdBL", IsForeignKey=true)]
		public CONNAISSEMENT CONNAISSEMENT
		{
			get
			{
				return this._CONNAISSEMENT.Entity;
			}
			set
			{
				CONNAISSEMENT previousValue = this._CONNAISSEMENT.Entity;
				if (((previousValue != value) 
							|| (this._CONNAISSEMENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CONNAISSEMENT.Entity = null;
						previousValue.MAFI.Remove(this);
					}
					this._CONNAISSEMENT.Entity = value;
					if ((value != null))
					{
						value.MAFI.Add(this);
						this._IdBL = value.IdBL;
					}
					else
					{
						this._IdBL = default(Nullable<int>);
					}
					this.SendPropertyChanged("CONNAISSEMENT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MANIFESTE_MAFI", Storage="_MANIFESTE", ThisKey="IdMan", OtherKey="IdMan", IsForeignKey=true)]
		public MANIFESTE MANIFESTE
		{
			get
			{
				return this._MANIFESTE.Entity;
			}
			set
			{
				MANIFESTE previousValue = this._MANIFESTE.Entity;
				if (((previousValue != value) 
							|| (this._MANIFESTE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MANIFESTE.Entity = null;
						previousValue.MAFI.Remove(this);
					}
					this._MANIFESTE.Entity = value;
					if ((value != null))
					{
						value.MAFI.Add(this);
						this._IdMan = value.IdMan;
					}
					else
					{
						this._IdMan = default(Nullable<int>);
					}
					this.SendPropertyChanged("MANIFESTE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ESCALE_MAFI", Storage="_ESCALE", ThisKey="IdEsc", OtherKey="IdEsc", IsForeignKey=true)]
		public ESCALE ESCALE
		{
			get
			{
				return this._ESCALE.Entity;
			}
			set
			{
				ESCALE previousValue = this._ESCALE.Entity;
				if (((previousValue != value) 
							|| (this._ESCALE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ESCALE.Entity = null;
						previousValue.MAFI.Remove(this);
					}
					this._ESCALE.Entity = value;
					if ((value != null))
					{
						value.MAFI.Add(this);
						this._IdEsc = value.IdEsc;
					}
					else
					{
						this._IdEsc = default(Nullable<int>);
					}
					this.SendPropertyChanged("ESCALE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BON_ENLEVEMENT_MAFI", Storage="_BON_ENLEVEMENT", ThisKey="IdBAE", OtherKey="IdBAE", IsForeignKey=true)]
		public BON_ENLEVEMENT BON_ENLEVEMENT
		{
			get
			{
				return this._BON_ENLEVEMENT.Entity;
			}
			set
			{
				BON_ENLEVEMENT previousValue = this._BON_ENLEVEMENT.Entity;
				if (((previousValue != value) 
							|| (this._BON_ENLEVEMENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BON_ENLEVEMENT.Entity = null;
						previousValue.MAFI.Remove(this);
					}
					this._BON_ENLEVEMENT.Entity = value;
					if ((value != null))
					{
						value.MAFI.Add(this);
						this._IdBAE = value.IdBAE;
					}
					else
					{
						this._IdBAE = default(Nullable<int>);
					}
					this.SendPropertyChanged("BON_ENLEVEMENT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DEMANDE_LIVRAISON_MAFI", Storage="_DEMANDE_LIVRAISON", ThisKey="IdDBL", OtherKey="IdDBL", IsForeignKey=true)]
		public DEMANDE_LIVRAISON DEMANDE_LIVRAISON
		{
			get
			{
				return this._DEMANDE_LIVRAISON.Entity;
			}
			set
			{
				DEMANDE_LIVRAISON previousValue = this._DEMANDE_LIVRAISON.Entity;
				if (((previousValue != value) 
							|| (this._DEMANDE_LIVRAISON.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DEMANDE_LIVRAISON.Entity = null;
						previousValue.MAFI.Remove(this);
					}
					this._DEMANDE_LIVRAISON.Entity = value;
					if ((value != null))
					{
						value.MAFI.Add(this);
						this._IdDBL = value.IdDBL;
					}
					else
					{
						this._IdDBL = default(Nullable<int>);
					}
					this.SendPropertyChanged("DEMANDE_LIVRAISON");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ORDRE_SERVICE(ORDRE_SERVICE entity)
		{
			this.SendPropertyChanging();
			entity.MAFI = this;
		}
		
		private void detach_ORDRE_SERVICE(ORDRE_SERVICE entity)
		{
			this.SendPropertyChanging();
			entity.MAFI = null;
		}
		
		private void attach_ELEMENT_FACTURATION(ELEMENT_FACTURATION entity)
		{
			this.SendPropertyChanging();
			entity.MAFI = this;
		}
		
		private void detach_ELEMENT_FACTURATION(ELEMENT_FACTURATION entity)
		{
			this.SendPropertyChanging();
			entity.MAFI = null;
		}
		
		private void attach_OPERATION_MAFI(OPERATION_MAFI entity)
		{
			this.SendPropertyChanging();
			entity.MAFI = this;
		}
		
		private void detach_OPERATION_MAFI(OPERATION_MAFI entity)
		{
			this.SendPropertyChanging();
			entity.MAFI = null;
		}
		
		private void attach_NOTE(NOTE entity)
		{
			this.SendPropertyChanging();
			entity.MAFI = this;
		}
		
		private void detach_NOTE(NOTE entity)
		{
			this.SendPropertyChanging();
			entity.MAFI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OPERATION_MAFI")]
	public partial class OPERATION_MAFI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdOpMafi;
		
		private System.Nullable<int> _IdMafi;
		
		private System.Nullable<int> _IdTypeOp;
		
		private System.Nullable<System.DateTime> _DateOp;
		
		private string _AIOp;
		
		private System.Nullable<int> _IdU;
		
		private EntityRef<MAFI> _MAFI;
		
		private EntityRef<TYPE_OPERATION> _TYPE_OPERATION;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdOpMafiChanging(int value);
    partial void OnIdOpMafiChanged();
    partial void OnIdMafiChanging(System.Nullable<int> value);
    partial void OnIdMafiChanged();
    partial void OnIdTypeOpChanging(System.Nullable<int> value);
    partial void OnIdTypeOpChanged();
    partial void OnDateOpChanging(System.Nullable<System.DateTime> value);
    partial void OnDateOpChanged();
    partial void OnAIOpChanging(string value);
    partial void OnAIOpChanged();
    partial void OnIdUChanging(System.Nullable<int> value);
    partial void OnIdUChanged();
    #endregion
		
		public OPERATION_MAFI()
		{
			this._MAFI = default(EntityRef<MAFI>);
			this._TYPE_OPERATION = default(EntityRef<TYPE_OPERATION>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdOpMafi", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdOpMafi
		{
			get
			{
				return this._IdOpMafi;
			}
			set
			{
				if ((this._IdOpMafi != value))
				{
					this.OnIdOpMafiChanging(value);
					this.SendPropertyChanging();
					this._IdOpMafi = value;
					this.SendPropertyChanged("IdOpMafi");
					this.OnIdOpMafiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdMafi", DbType="Int")]
		public System.Nullable<int> IdMafi
		{
			get
			{
				return this._IdMafi;
			}
			set
			{
				if ((this._IdMafi != value))
				{
					if (this._MAFI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdMafiChanging(value);
					this.SendPropertyChanging();
					this._IdMafi = value;
					this.SendPropertyChanged("IdMafi");
					this.OnIdMafiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTypeOp", DbType="Int")]
		public System.Nullable<int> IdTypeOp
		{
			get
			{
				return this._IdTypeOp;
			}
			set
			{
				if ((this._IdTypeOp != value))
				{
					if (this._TYPE_OPERATION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdTypeOpChanging(value);
					this.SendPropertyChanging();
					this._IdTypeOp = value;
					this.SendPropertyChanged("IdTypeOp");
					this.OnIdTypeOpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOp", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateOp
		{
			get
			{
				return this._DateOp;
			}
			set
			{
				if ((this._DateOp != value))
				{
					this.OnDateOpChanging(value);
					this.SendPropertyChanging();
					this._DateOp = value;
					this.SendPropertyChanged("DateOp");
					this.OnDateOpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AIOp", DbType="NVarChar(255)")]
		public string AIOp
		{
			get
			{
				return this._AIOp;
			}
			set
			{
				if ((this._AIOp != value))
				{
					this.OnAIOpChanging(value);
					this.SendPropertyChanging();
					this._AIOp = value;
					this.SendPropertyChanged("AIOp");
					this.OnAIOpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdU", DbType="Int")]
		public System.Nullable<int> IdU
		{
			get
			{
				return this._IdU;
			}
			set
			{
				if ((this._IdU != value))
				{
					this.OnIdUChanging(value);
					this.SendPropertyChanging();
					this._IdU = value;
					this.SendPropertyChanged("IdU");
					this.OnIdUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MAFI_OPERATION_MAFI", Storage="_MAFI", ThisKey="IdMafi", OtherKey="IdMafi", IsForeignKey=true)]
		public MAFI MAFI
		{
			get
			{
				return this._MAFI.Entity;
			}
			set
			{
				MAFI previousValue = this._MAFI.Entity;
				if (((previousValue != value) 
							|| (this._MAFI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MAFI.Entity = null;
						previousValue.OPERATION_MAFI.Remove(this);
					}
					this._MAFI.Entity = value;
					if ((value != null))
					{
						value.OPERATION_MAFI.Add(this);
						this._IdMafi = value.IdMafi;
					}
					else
					{
						this._IdMafi = default(Nullable<int>);
					}
					this.SendPropertyChanged("MAFI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TYPE_OPERATION_OPERATION_MAFI", Storage="_TYPE_OPERATION", ThisKey="IdTypeOp", OtherKey="IdTypeOp", IsForeignKey=true)]
		public TYPE_OPERATION TYPE_OPERATION
		{
			get
			{
				return this._TYPE_OPERATION.Entity;
			}
			set
			{
				TYPE_OPERATION previousValue = this._TYPE_OPERATION.Entity;
				if (((previousValue != value) 
							|| (this._TYPE_OPERATION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TYPE_OPERATION.Entity = null;
						previousValue.OPERATION_MAFI.Remove(this);
					}
					this._TYPE_OPERATION.Entity = value;
					if ((value != null))
					{
						value.OPERATION_MAFI.Add(this);
						this._IdTypeOp = value.IdTypeOp;
					}
					else
					{
						this._IdTypeOp = default(Nullable<int>);
					}
					this.SendPropertyChanged("TYPE_OPERATION");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NOTE")]
	public partial class NOTE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdNote;
		
		private string _DescNote;
		
		private System.Nullable<System.DateTime> _DateNote;
		
		private System.Nullable<int> _IdU;
		
		private System.Nullable<int> _IdEsc;
		
		private System.Nullable<int> _IdMan;
		
		private System.Nullable<int> _IdBL;
		
		private System.Nullable<int> _IdVeh;
		
		private System.Nullable<int> _IdCtr;
		
		private System.Nullable<int> _IdMafi;
		
		private System.Nullable<int> _IdGC;
		
		private System.Nullable<int> _IdFP;
		
		private System.Nullable<int> _IdFD;
		
		private System.Nullable<int> _IdOS;
		
		private System.Nullable<int> _IdCubage;
		
		private System.Nullable<int> _IdBAE;
		
		private System.Nullable<int> _IdDRC;
		
		private System.Nullable<int> _IdDBL;
		
		private System.Nullable<int> _IdDDR;
		
		private System.Nullable<int> _IdDV;
		
		private System.Nullable<int> _IdDEXT;
		
		private System.Nullable<int> _IdFactDIT;
		
		private System.Nullable<int> _IdPay;
		
		private string _TitreNote;
		
		private EntityRef<BON_ENLEVEMENT> _BON_ENLEVEMENT;
		
		private EntityRef<CONNAISSEMENT> _CONNAISSEMENT;
		
		private EntityRef<CONTENEUR> _CONTENEUR;
		
		private EntityRef<CONVENTIONNEL> _CONVENTIONNEL;
		
		private EntityRef<CUBAGE> _CUBAGE;
		
		private EntityRef<DEMANDE_CAUTION> _DEMANDE_CAUTION;
		
		private EntityRef<DEMANDE_LIVRAISON> _DEMANDE_LIVRAISON;
		
		private EntityRef<DEMANDE_REDUCTION> _DEMANDE_REDUCTION;
		
		private EntityRef<DEMANDE_VISITE> _DEMANDE_VISITE;
		
		private EntityRef<ESCALE> _ESCALE;
		
		private EntityRef<EXTENSION_FRANCHISE> _EXTENSION_FRANCHISE;
		
		private EntityRef<FACTURE> _FACTURE;
		
		private EntityRef<FACTURE_DIT> _FACTURE_DIT;
		
		private EntityRef<MAFI> _MAFI;
		
		private EntityRef<MANIFESTE> _MANIFESTE;
		
		private EntityRef<ORDRE_SERVICE> _ORDRE_SERVICE;
		
		private EntityRef<PAYEMENT> _PAYEMENT;
		
		private EntityRef<PROFORMA> _PROFORMA;
		
		private EntityRef<UTILISATEUR> _UTILISATEUR;
		
		private EntityRef<VEHICULE> _VEHICULE;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdNoteChanging(int value);
    partial void OnIdNoteChanged();
    partial void OnDescNoteChanging(string value);
    partial void OnDescNoteChanged();
    partial void OnDateNoteChanging(System.Nullable<System.DateTime> value);
    partial void OnDateNoteChanged();
    partial void OnIdUChanging(System.Nullable<int> value);
    partial void OnIdUChanged();
    partial void OnIdEscChanging(System.Nullable<int> value);
    partial void OnIdEscChanged();
    partial void OnIdManChanging(System.Nullable<int> value);
    partial void OnIdManChanged();
    partial void OnIdBLChanging(System.Nullable<int> value);
    partial void OnIdBLChanged();
    partial void OnIdVehChanging(System.Nullable<int> value);
    partial void OnIdVehChanged();
    partial void OnIdCtrChanging(System.Nullable<int> value);
    partial void OnIdCtrChanged();
    partial void OnIdMafiChanging(System.Nullable<int> value);
    partial void OnIdMafiChanged();
    partial void OnIdGCChanging(System.Nullable<int> value);
    partial void OnIdGCChanged();
    partial void OnIdFPChanging(System.Nullable<int> value);
    partial void OnIdFPChanged();
    partial void OnIdFDChanging(System.Nullable<int> value);
    partial void OnIdFDChanged();
    partial void OnIdOSChanging(System.Nullable<int> value);
    partial void OnIdOSChanged();
    partial void OnIdCubageChanging(System.Nullable<int> value);
    partial void OnIdCubageChanged();
    partial void OnIdBAEChanging(System.Nullable<int> value);
    partial void OnIdBAEChanged();
    partial void OnIdDRCChanging(System.Nullable<int> value);
    partial void OnIdDRCChanged();
    partial void OnIdDBLChanging(System.Nullable<int> value);
    partial void OnIdDBLChanged();
    partial void OnIdDDRChanging(System.Nullable<int> value);
    partial void OnIdDDRChanged();
    partial void OnIdDVChanging(System.Nullable<int> value);
    partial void OnIdDVChanged();
    partial void OnIdDEXTChanging(System.Nullable<int> value);
    partial void OnIdDEXTChanged();
    partial void OnIdFactDITChanging(System.Nullable<int> value);
    partial void OnIdFactDITChanged();
    partial void OnIdPayChanging(System.Nullable<int> value);
    partial void OnIdPayChanged();
    partial void OnTitreNoteChanging(string value);
    partial void OnTitreNoteChanged();
    #endregion
		
		public NOTE()
		{
			this._BON_ENLEVEMENT = default(EntityRef<BON_ENLEVEMENT>);
			this._CONNAISSEMENT = default(EntityRef<CONNAISSEMENT>);
			this._CONTENEUR = default(EntityRef<CONTENEUR>);
			this._CONVENTIONNEL = default(EntityRef<CONVENTIONNEL>);
			this._CUBAGE = default(EntityRef<CUBAGE>);
			this._DEMANDE_CAUTION = default(EntityRef<DEMANDE_CAUTION>);
			this._DEMANDE_LIVRAISON = default(EntityRef<DEMANDE_LIVRAISON>);
			this._DEMANDE_REDUCTION = default(EntityRef<DEMANDE_REDUCTION>);
			this._DEMANDE_VISITE = default(EntityRef<DEMANDE_VISITE>);
			this._ESCALE = default(EntityRef<ESCALE>);
			this._EXTENSION_FRANCHISE = default(EntityRef<EXTENSION_FRANCHISE>);
			this._FACTURE = default(EntityRef<FACTURE>);
			this._FACTURE_DIT = default(EntityRef<FACTURE_DIT>);
			this._MAFI = default(EntityRef<MAFI>);
			this._MANIFESTE = default(EntityRef<MANIFESTE>);
			this._ORDRE_SERVICE = default(EntityRef<ORDRE_SERVICE>);
			this._PAYEMENT = default(EntityRef<PAYEMENT>);
			this._PROFORMA = default(EntityRef<PROFORMA>);
			this._UTILISATEUR = default(EntityRef<UTILISATEUR>);
			this._VEHICULE = default(EntityRef<VEHICULE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdNote", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdNote
		{
			get
			{
				return this._IdNote;
			}
			set
			{
				if ((this._IdNote != value))
				{
					this.OnIdNoteChanging(value);
					this.SendPropertyChanging();
					this._IdNote = value;
					this.SendPropertyChanged("IdNote");
					this.OnIdNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescNote", DbType="NVarChar(255)")]
		public string DescNote
		{
			get
			{
				return this._DescNote;
			}
			set
			{
				if ((this._DescNote != value))
				{
					this.OnDescNoteChanging(value);
					this.SendPropertyChanging();
					this._DescNote = value;
					this.SendPropertyChanged("DescNote");
					this.OnDescNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateNote", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateNote
		{
			get
			{
				return this._DateNote;
			}
			set
			{
				if ((this._DateNote != value))
				{
					this.OnDateNoteChanging(value);
					this.SendPropertyChanging();
					this._DateNote = value;
					this.SendPropertyChanged("DateNote");
					this.OnDateNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdU", DbType="Int")]
		public System.Nullable<int> IdU
		{
			get
			{
				return this._IdU;
			}
			set
			{
				if ((this._IdU != value))
				{
					if (this._UTILISATEUR.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdUChanging(value);
					this.SendPropertyChanging();
					this._IdU = value;
					this.SendPropertyChanged("IdU");
					this.OnIdUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEsc", DbType="Int")]
		public System.Nullable<int> IdEsc
		{
			get
			{
				return this._IdEsc;
			}
			set
			{
				if ((this._IdEsc != value))
				{
					if (this._ESCALE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdEscChanging(value);
					this.SendPropertyChanging();
					this._IdEsc = value;
					this.SendPropertyChanged("IdEsc");
					this.OnIdEscChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdMan", DbType="Int")]
		public System.Nullable<int> IdMan
		{
			get
			{
				return this._IdMan;
			}
			set
			{
				if ((this._IdMan != value))
				{
					if (this._MANIFESTE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdManChanging(value);
					this.SendPropertyChanging();
					this._IdMan = value;
					this.SendPropertyChanged("IdMan");
					this.OnIdManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdBL", DbType="Int")]
		public System.Nullable<int> IdBL
		{
			get
			{
				return this._IdBL;
			}
			set
			{
				if ((this._IdBL != value))
				{
					if (this._CONNAISSEMENT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdBLChanging(value);
					this.SendPropertyChanging();
					this._IdBL = value;
					this.SendPropertyChanged("IdBL");
					this.OnIdBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdVeh", DbType="Int")]
		public System.Nullable<int> IdVeh
		{
			get
			{
				return this._IdVeh;
			}
			set
			{
				if ((this._IdVeh != value))
				{
					if (this._VEHICULE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdVehChanging(value);
					this.SendPropertyChanging();
					this._IdVeh = value;
					this.SendPropertyChanged("IdVeh");
					this.OnIdVehChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCtr", DbType="Int")]
		public System.Nullable<int> IdCtr
		{
			get
			{
				return this._IdCtr;
			}
			set
			{
				if ((this._IdCtr != value))
				{
					if (this._CONTENEUR.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdCtrChanging(value);
					this.SendPropertyChanging();
					this._IdCtr = value;
					this.SendPropertyChanged("IdCtr");
					this.OnIdCtrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdMafi", DbType="Int")]
		public System.Nullable<int> IdMafi
		{
			get
			{
				return this._IdMafi;
			}
			set
			{
				if ((this._IdMafi != value))
				{
					if (this._MAFI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdMafiChanging(value);
					this.SendPropertyChanging();
					this._IdMafi = value;
					this.SendPropertyChanged("IdMafi");
					this.OnIdMafiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdGC", DbType="Int")]
		public System.Nullable<int> IdGC
		{
			get
			{
				return this._IdGC;
			}
			set
			{
				if ((this._IdGC != value))
				{
					if (this._CONVENTIONNEL.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdGCChanging(value);
					this.SendPropertyChanging();
					this._IdGC = value;
					this.SendPropertyChanged("IdGC");
					this.OnIdGCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFP", DbType="Int")]
		public System.Nullable<int> IdFP
		{
			get
			{
				return this._IdFP;
			}
			set
			{
				if ((this._IdFP != value))
				{
					if (this._PROFORMA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdFPChanging(value);
					this.SendPropertyChanging();
					this._IdFP = value;
					this.SendPropertyChanged("IdFP");
					this.OnIdFPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFD", DbType="Int")]
		public System.Nullable<int> IdFD
		{
			get
			{
				return this._IdFD;
			}
			set
			{
				if ((this._IdFD != value))
				{
					if (this._FACTURE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdFDChanging(value);
					this.SendPropertyChanging();
					this._IdFD = value;
					this.SendPropertyChanged("IdFD");
					this.OnIdFDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdOS", DbType="Int")]
		public System.Nullable<int> IdOS
		{
			get
			{
				return this._IdOS;
			}
			set
			{
				if ((this._IdOS != value))
				{
					if (this._ORDRE_SERVICE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdOSChanging(value);
					this.SendPropertyChanging();
					this._IdOS = value;
					this.SendPropertyChanged("IdOS");
					this.OnIdOSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCubage", DbType="Int")]
		public System.Nullable<int> IdCubage
		{
			get
			{
				return this._IdCubage;
			}
			set
			{
				if ((this._IdCubage != value))
				{
					if (this._CUBAGE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdCubageChanging(value);
					this.SendPropertyChanging();
					this._IdCubage = value;
					this.SendPropertyChanged("IdCubage");
					this.OnIdCubageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdBAE", DbType="Int")]
		public System.Nullable<int> IdBAE
		{
			get
			{
				return this._IdBAE;
			}
			set
			{
				if ((this._IdBAE != value))
				{
					if (this._BON_ENLEVEMENT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdBAEChanging(value);
					this.SendPropertyChanging();
					this._IdBAE = value;
					this.SendPropertyChanged("IdBAE");
					this.OnIdBAEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDRC", DbType="Int")]
		public System.Nullable<int> IdDRC
		{
			get
			{
				return this._IdDRC;
			}
			set
			{
				if ((this._IdDRC != value))
				{
					if (this._DEMANDE_CAUTION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdDRCChanging(value);
					this.SendPropertyChanging();
					this._IdDRC = value;
					this.SendPropertyChanged("IdDRC");
					this.OnIdDRCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDBL", DbType="Int")]
		public System.Nullable<int> IdDBL
		{
			get
			{
				return this._IdDBL;
			}
			set
			{
				if ((this._IdDBL != value))
				{
					if (this._DEMANDE_LIVRAISON.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdDBLChanging(value);
					this.SendPropertyChanging();
					this._IdDBL = value;
					this.SendPropertyChanged("IdDBL");
					this.OnIdDBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDDR", DbType="Int")]
		public System.Nullable<int> IdDDR
		{
			get
			{
				return this._IdDDR;
			}
			set
			{
				if ((this._IdDDR != value))
				{
					if (this._DEMANDE_REDUCTION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdDDRChanging(value);
					this.SendPropertyChanging();
					this._IdDDR = value;
					this.SendPropertyChanged("IdDDR");
					this.OnIdDDRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDV", DbType="Int")]
		public System.Nullable<int> IdDV
		{
			get
			{
				return this._IdDV;
			}
			set
			{
				if ((this._IdDV != value))
				{
					if (this._DEMANDE_VISITE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdDVChanging(value);
					this.SendPropertyChanging();
					this._IdDV = value;
					this.SendPropertyChanged("IdDV");
					this.OnIdDVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDEXT", DbType="Int")]
		public System.Nullable<int> IdDEXT
		{
			get
			{
				return this._IdDEXT;
			}
			set
			{
				if ((this._IdDEXT != value))
				{
					if (this._EXTENSION_FRANCHISE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdDEXTChanging(value);
					this.SendPropertyChanging();
					this._IdDEXT = value;
					this.SendPropertyChanged("IdDEXT");
					this.OnIdDEXTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFactDIT", DbType="Int")]
		public System.Nullable<int> IdFactDIT
		{
			get
			{
				return this._IdFactDIT;
			}
			set
			{
				if ((this._IdFactDIT != value))
				{
					if (this._FACTURE_DIT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdFactDITChanging(value);
					this.SendPropertyChanging();
					this._IdFactDIT = value;
					this.SendPropertyChanged("IdFactDIT");
					this.OnIdFactDITChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPay", DbType="Int")]
		public System.Nullable<int> IdPay
		{
			get
			{
				return this._IdPay;
			}
			set
			{
				if ((this._IdPay != value))
				{
					if (this._PAYEMENT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdPayChanging(value);
					this.SendPropertyChanging();
					this._IdPay = value;
					this.SendPropertyChanged("IdPay");
					this.OnIdPayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TitreNote", DbType="NChar(50)")]
		public string TitreNote
		{
			get
			{
				return this._TitreNote;
			}
			set
			{
				if ((this._TitreNote != value))
				{
					this.OnTitreNoteChanging(value);
					this.SendPropertyChanging();
					this._TitreNote = value;
					this.SendPropertyChanged("TitreNote");
					this.OnTitreNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BON_ENLEVEMENT_NOTE", Storage="_BON_ENLEVEMENT", ThisKey="IdBAE", OtherKey="IdBAE", IsForeignKey=true)]
		public BON_ENLEVEMENT BON_ENLEVEMENT
		{
			get
			{
				return this._BON_ENLEVEMENT.Entity;
			}
			set
			{
				BON_ENLEVEMENT previousValue = this._BON_ENLEVEMENT.Entity;
				if (((previousValue != value) 
							|| (this._BON_ENLEVEMENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BON_ENLEVEMENT.Entity = null;
						previousValue.NOTE.Remove(this);
					}
					this._BON_ENLEVEMENT.Entity = value;
					if ((value != null))
					{
						value.NOTE.Add(this);
						this._IdBAE = value.IdBAE;
					}
					else
					{
						this._IdBAE = default(Nullable<int>);
					}
					this.SendPropertyChanged("BON_ENLEVEMENT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONNAISSEMENT_NOTE", Storage="_CONNAISSEMENT", ThisKey="IdBL", OtherKey="IdBL", IsForeignKey=true)]
		public CONNAISSEMENT CONNAISSEMENT
		{
			get
			{
				return this._CONNAISSEMENT.Entity;
			}
			set
			{
				CONNAISSEMENT previousValue = this._CONNAISSEMENT.Entity;
				if (((previousValue != value) 
							|| (this._CONNAISSEMENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CONNAISSEMENT.Entity = null;
						previousValue.NOTE.Remove(this);
					}
					this._CONNAISSEMENT.Entity = value;
					if ((value != null))
					{
						value.NOTE.Add(this);
						this._IdBL = value.IdBL;
					}
					else
					{
						this._IdBL = default(Nullable<int>);
					}
					this.SendPropertyChanged("CONNAISSEMENT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONTENEUR_NOTE", Storage="_CONTENEUR", ThisKey="IdCtr", OtherKey="IdCtr", IsForeignKey=true)]
		public CONTENEUR CONTENEUR
		{
			get
			{
				return this._CONTENEUR.Entity;
			}
			set
			{
				CONTENEUR previousValue = this._CONTENEUR.Entity;
				if (((previousValue != value) 
							|| (this._CONTENEUR.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CONTENEUR.Entity = null;
						previousValue.NOTE.Remove(this);
					}
					this._CONTENEUR.Entity = value;
					if ((value != null))
					{
						value.NOTE.Add(this);
						this._IdCtr = value.IdCtr;
					}
					else
					{
						this._IdCtr = default(Nullable<int>);
					}
					this.SendPropertyChanged("CONTENEUR");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONVENTIONNEL_NOTE", Storage="_CONVENTIONNEL", ThisKey="IdGC", OtherKey="IdGC", IsForeignKey=true)]
		public CONVENTIONNEL CONVENTIONNEL
		{
			get
			{
				return this._CONVENTIONNEL.Entity;
			}
			set
			{
				CONVENTIONNEL previousValue = this._CONVENTIONNEL.Entity;
				if (((previousValue != value) 
							|| (this._CONVENTIONNEL.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CONVENTIONNEL.Entity = null;
						previousValue.NOTE.Remove(this);
					}
					this._CONVENTIONNEL.Entity = value;
					if ((value != null))
					{
						value.NOTE.Add(this);
						this._IdGC = value.IdGC;
					}
					else
					{
						this._IdGC = default(Nullable<int>);
					}
					this.SendPropertyChanged("CONVENTIONNEL");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CUBAGE_NOTE", Storage="_CUBAGE", ThisKey="IdCubage", OtherKey="IdCubage", IsForeignKey=true)]
		public CUBAGE CUBAGE
		{
			get
			{
				return this._CUBAGE.Entity;
			}
			set
			{
				CUBAGE previousValue = this._CUBAGE.Entity;
				if (((previousValue != value) 
							|| (this._CUBAGE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CUBAGE.Entity = null;
						previousValue.NOTE.Remove(this);
					}
					this._CUBAGE.Entity = value;
					if ((value != null))
					{
						value.NOTE.Add(this);
						this._IdCubage = value.IdCubage;
					}
					else
					{
						this._IdCubage = default(Nullable<int>);
					}
					this.SendPropertyChanged("CUBAGE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DEMANDE_CAUTION_NOTE", Storage="_DEMANDE_CAUTION", ThisKey="IdDRC", OtherKey="IdDRC", IsForeignKey=true)]
		public DEMANDE_CAUTION DEMANDE_CAUTION
		{
			get
			{
				return this._DEMANDE_CAUTION.Entity;
			}
			set
			{
				DEMANDE_CAUTION previousValue = this._DEMANDE_CAUTION.Entity;
				if (((previousValue != value) 
							|| (this._DEMANDE_CAUTION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DEMANDE_CAUTION.Entity = null;
						previousValue.NOTE.Remove(this);
					}
					this._DEMANDE_CAUTION.Entity = value;
					if ((value != null))
					{
						value.NOTE.Add(this);
						this._IdDRC = value.IdDRC;
					}
					else
					{
						this._IdDRC = default(Nullable<int>);
					}
					this.SendPropertyChanged("DEMANDE_CAUTION");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DEMANDE_LIVRAISON_NOTE", Storage="_DEMANDE_LIVRAISON", ThisKey="IdDBL", OtherKey="IdDBL", IsForeignKey=true)]
		public DEMANDE_LIVRAISON DEMANDE_LIVRAISON
		{
			get
			{
				return this._DEMANDE_LIVRAISON.Entity;
			}
			set
			{
				DEMANDE_LIVRAISON previousValue = this._DEMANDE_LIVRAISON.Entity;
				if (((previousValue != value) 
							|| (this._DEMANDE_LIVRAISON.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DEMANDE_LIVRAISON.Entity = null;
						previousValue.NOTE.Remove(this);
					}
					this._DEMANDE_LIVRAISON.Entity = value;
					if ((value != null))
					{
						value.NOTE.Add(this);
						this._IdDBL = value.IdDBL;
					}
					else
					{
						this._IdDBL = default(Nullable<int>);
					}
					this.SendPropertyChanged("DEMANDE_LIVRAISON");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DEMANDE_REDUCTION_NOTE", Storage="_DEMANDE_REDUCTION", ThisKey="IdDDR", OtherKey="IdDDR", IsForeignKey=true)]
		public DEMANDE_REDUCTION DEMANDE_REDUCTION
		{
			get
			{
				return this._DEMANDE_REDUCTION.Entity;
			}
			set
			{
				DEMANDE_REDUCTION previousValue = this._DEMANDE_REDUCTION.Entity;
				if (((previousValue != value) 
							|| (this._DEMANDE_REDUCTION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DEMANDE_REDUCTION.Entity = null;
						previousValue.NOTE.Remove(this);
					}
					this._DEMANDE_REDUCTION.Entity = value;
					if ((value != null))
					{
						value.NOTE.Add(this);
						this._IdDDR = value.IdDDR;
					}
					else
					{
						this._IdDDR = default(Nullable<int>);
					}
					this.SendPropertyChanged("DEMANDE_REDUCTION");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DEMANDE_VISITE_NOTE", Storage="_DEMANDE_VISITE", ThisKey="IdDV", OtherKey="IdDV", IsForeignKey=true)]
		public DEMANDE_VISITE DEMANDE_VISITE
		{
			get
			{
				return this._DEMANDE_VISITE.Entity;
			}
			set
			{
				DEMANDE_VISITE previousValue = this._DEMANDE_VISITE.Entity;
				if (((previousValue != value) 
							|| (this._DEMANDE_VISITE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DEMANDE_VISITE.Entity = null;
						previousValue.NOTE.Remove(this);
					}
					this._DEMANDE_VISITE.Entity = value;
					if ((value != null))
					{
						value.NOTE.Add(this);
						this._IdDV = value.IdDV;
					}
					else
					{
						this._IdDV = default(Nullable<int>);
					}
					this.SendPropertyChanged("DEMANDE_VISITE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ESCALE_NOTE", Storage="_ESCALE", ThisKey="IdEsc", OtherKey="IdEsc", IsForeignKey=true)]
		public ESCALE ESCALE
		{
			get
			{
				return this._ESCALE.Entity;
			}
			set
			{
				ESCALE previousValue = this._ESCALE.Entity;
				if (((previousValue != value) 
							|| (this._ESCALE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ESCALE.Entity = null;
						previousValue.NOTE.Remove(this);
					}
					this._ESCALE.Entity = value;
					if ((value != null))
					{
						value.NOTE.Add(this);
						this._IdEsc = value.IdEsc;
					}
					else
					{
						this._IdEsc = default(Nullable<int>);
					}
					this.SendPropertyChanged("ESCALE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EXTENSION_FRANCHISE_NOTE", Storage="_EXTENSION_FRANCHISE", ThisKey="IdDEXT", OtherKey="IdDEXT", IsForeignKey=true)]
		public EXTENSION_FRANCHISE EXTENSION_FRANCHISE
		{
			get
			{
				return this._EXTENSION_FRANCHISE.Entity;
			}
			set
			{
				EXTENSION_FRANCHISE previousValue = this._EXTENSION_FRANCHISE.Entity;
				if (((previousValue != value) 
							|| (this._EXTENSION_FRANCHISE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EXTENSION_FRANCHISE.Entity = null;
						previousValue.NOTE.Remove(this);
					}
					this._EXTENSION_FRANCHISE.Entity = value;
					if ((value != null))
					{
						value.NOTE.Add(this);
						this._IdDEXT = value.IdDEXT;
					}
					else
					{
						this._IdDEXT = default(Nullable<int>);
					}
					this.SendPropertyChanged("EXTENSION_FRANCHISE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FACTURE_NOTE", Storage="_FACTURE", ThisKey="IdFD", OtherKey="IdFD", IsForeignKey=true)]
		public FACTURE FACTURE
		{
			get
			{
				return this._FACTURE.Entity;
			}
			set
			{
				FACTURE previousValue = this._FACTURE.Entity;
				if (((previousValue != value) 
							|| (this._FACTURE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FACTURE.Entity = null;
						previousValue.NOTE.Remove(this);
					}
					this._FACTURE.Entity = value;
					if ((value != null))
					{
						value.NOTE.Add(this);
						this._IdFD = value.IdFD;
					}
					else
					{
						this._IdFD = default(Nullable<int>);
					}
					this.SendPropertyChanged("FACTURE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FACTURE_DIT_NOTE", Storage="_FACTURE_DIT", ThisKey="IdFactDIT", OtherKey="IdFactDIT", IsForeignKey=true)]
		public FACTURE_DIT FACTURE_DIT
		{
			get
			{
				return this._FACTURE_DIT.Entity;
			}
			set
			{
				FACTURE_DIT previousValue = this._FACTURE_DIT.Entity;
				if (((previousValue != value) 
							|| (this._FACTURE_DIT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FACTURE_DIT.Entity = null;
						previousValue.NOTE.Remove(this);
					}
					this._FACTURE_DIT.Entity = value;
					if ((value != null))
					{
						value.NOTE.Add(this);
						this._IdFactDIT = value.IdFactDIT;
					}
					else
					{
						this._IdFactDIT = default(Nullable<int>);
					}
					this.SendPropertyChanged("FACTURE_DIT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MAFI_NOTE", Storage="_MAFI", ThisKey="IdMafi", OtherKey="IdMafi", IsForeignKey=true)]
		public MAFI MAFI
		{
			get
			{
				return this._MAFI.Entity;
			}
			set
			{
				MAFI previousValue = this._MAFI.Entity;
				if (((previousValue != value) 
							|| (this._MAFI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MAFI.Entity = null;
						previousValue.NOTE.Remove(this);
					}
					this._MAFI.Entity = value;
					if ((value != null))
					{
						value.NOTE.Add(this);
						this._IdMafi = value.IdMafi;
					}
					else
					{
						this._IdMafi = default(Nullable<int>);
					}
					this.SendPropertyChanged("MAFI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MANIFESTE_NOTE", Storage="_MANIFESTE", ThisKey="IdMan", OtherKey="IdMan", IsForeignKey=true)]
		public MANIFESTE MANIFESTE
		{
			get
			{
				return this._MANIFESTE.Entity;
			}
			set
			{
				MANIFESTE previousValue = this._MANIFESTE.Entity;
				if (((previousValue != value) 
							|| (this._MANIFESTE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MANIFESTE.Entity = null;
						previousValue.NOTE.Remove(this);
					}
					this._MANIFESTE.Entity = value;
					if ((value != null))
					{
						value.NOTE.Add(this);
						this._IdMan = value.IdMan;
					}
					else
					{
						this._IdMan = default(Nullable<int>);
					}
					this.SendPropertyChanged("MANIFESTE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ORDRE_SERVICE_NOTE", Storage="_ORDRE_SERVICE", ThisKey="IdOS", OtherKey="IdOS", IsForeignKey=true)]
		public ORDRE_SERVICE ORDRE_SERVICE
		{
			get
			{
				return this._ORDRE_SERVICE.Entity;
			}
			set
			{
				ORDRE_SERVICE previousValue = this._ORDRE_SERVICE.Entity;
				if (((previousValue != value) 
							|| (this._ORDRE_SERVICE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ORDRE_SERVICE.Entity = null;
						previousValue.NOTE.Remove(this);
					}
					this._ORDRE_SERVICE.Entity = value;
					if ((value != null))
					{
						value.NOTE.Add(this);
						this._IdOS = value.IdOS;
					}
					else
					{
						this._IdOS = default(Nullable<int>);
					}
					this.SendPropertyChanged("ORDRE_SERVICE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PAYEMENT_NOTE", Storage="_PAYEMENT", ThisKey="IdPay", OtherKey="IdPay", IsForeignKey=true)]
		public PAYEMENT PAYEMENT
		{
			get
			{
				return this._PAYEMENT.Entity;
			}
			set
			{
				PAYEMENT previousValue = this._PAYEMENT.Entity;
				if (((previousValue != value) 
							|| (this._PAYEMENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PAYEMENT.Entity = null;
						previousValue.NOTE.Remove(this);
					}
					this._PAYEMENT.Entity = value;
					if ((value != null))
					{
						value.NOTE.Add(this);
						this._IdPay = value.IdPay;
					}
					else
					{
						this._IdPay = default(Nullable<int>);
					}
					this.SendPropertyChanged("PAYEMENT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PROFORMA_NOTE", Storage="_PROFORMA", ThisKey="IdFP", OtherKey="IdFP", IsForeignKey=true)]
		public PROFORMA PROFORMA
		{
			get
			{
				return this._PROFORMA.Entity;
			}
			set
			{
				PROFORMA previousValue = this._PROFORMA.Entity;
				if (((previousValue != value) 
							|| (this._PROFORMA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PROFORMA.Entity = null;
						previousValue.NOTE.Remove(this);
					}
					this._PROFORMA.Entity = value;
					if ((value != null))
					{
						value.NOTE.Add(this);
						this._IdFP = value.IdFP;
					}
					else
					{
						this._IdFP = default(Nullable<int>);
					}
					this.SendPropertyChanged("PROFORMA");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UTILISATEUR_NOTE", Storage="_UTILISATEUR", ThisKey="IdU", OtherKey="IdU", IsForeignKey=true)]
		public UTILISATEUR UTILISATEUR
		{
			get
			{
				return this._UTILISATEUR.Entity;
			}
			set
			{
				UTILISATEUR previousValue = this._UTILISATEUR.Entity;
				if (((previousValue != value) 
							|| (this._UTILISATEUR.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UTILISATEUR.Entity = null;
						previousValue.NOTE.Remove(this);
					}
					this._UTILISATEUR.Entity = value;
					if ((value != null))
					{
						value.NOTE.Add(this);
						this._IdU = value.IdU;
					}
					else
					{
						this._IdU = default(Nullable<int>);
					}
					this.SendPropertyChanged("UTILISATEUR");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VEHICULE_NOTE", Storage="_VEHICULE", ThisKey="IdVeh", OtherKey="IdVeh", IsForeignKey=true)]
		public VEHICULE VEHICULE
		{
			get
			{
				return this._VEHICULE.Entity;
			}
			set
			{
				VEHICULE previousValue = this._VEHICULE.Entity;
				if (((previousValue != value) 
							|| (this._VEHICULE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VEHICULE.Entity = null;
						previousValue.NOTE.Remove(this);
					}
					this._VEHICULE.Entity = value;
					if ((value != null))
					{
						value.NOTE.Add(this);
						this._IdVeh = value.IdVeh;
					}
					else
					{
						this._IdVeh = default(Nullable<int>);
					}
					this.SendPropertyChanged("VEHICULE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BANQUE")]
	public partial class BANQUE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdBanque;
		
		private string _CodeBanque;
		
		private string _CCBanque;
		
		private EntitySet<PAYEMENT> _PAYEMENT;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdBanqueChanging(int value);
    partial void OnIdBanqueChanged();
    partial void OnCodeBanqueChanging(string value);
    partial void OnCodeBanqueChanged();
    partial void OnCCBanqueChanging(string value);
    partial void OnCCBanqueChanged();
    #endregion
		
		public BANQUE()
		{
			this._PAYEMENT = new EntitySet<PAYEMENT>(new Action<PAYEMENT>(this.attach_PAYEMENT), new Action<PAYEMENT>(this.detach_PAYEMENT));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdBanque", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdBanque
		{
			get
			{
				return this._IdBanque;
			}
			set
			{
				if ((this._IdBanque != value))
				{
					this.OnIdBanqueChanging(value);
					this.SendPropertyChanging();
					this._IdBanque = value;
					this.SendPropertyChanged("IdBanque");
					this.OnIdBanqueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeBanque", DbType="NVarChar(20)")]
		public string CodeBanque
		{
			get
			{
				return this._CodeBanque;
			}
			set
			{
				if ((this._CodeBanque != value))
				{
					this.OnCodeBanqueChanging(value);
					this.SendPropertyChanging();
					this._CodeBanque = value;
					this.SendPropertyChanged("CodeBanque");
					this.OnCodeBanqueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCBanque", DbType="NVarChar(20)")]
		public string CCBanque
		{
			get
			{
				return this._CCBanque;
			}
			set
			{
				if ((this._CCBanque != value))
				{
					this.OnCCBanqueChanging(value);
					this.SendPropertyChanging();
					this._CCBanque = value;
					this.SendPropertyChanged("CCBanque");
					this.OnCCBanqueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BANQUE_PAYEMENT", Storage="_PAYEMENT", ThisKey="IdBanque", OtherKey="IdBanque")]
		public EntitySet<PAYEMENT> PAYEMENT
		{
			get
			{
				return this._PAYEMENT;
			}
			set
			{
				this._PAYEMENT.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PAYEMENT(PAYEMENT entity)
		{
			this.SendPropertyChanging();
			entity.BANQUE1 = this;
		}
		
		private void detach_PAYEMENT(PAYEMENT entity)
		{
			this.SendPropertyChanging();
			entity.BANQUE1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LIGNE_PAYEMENT")]
	public partial class LIGNE_PAYEMENT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdPay;
		
		private int _IdFD;
		
		private string _Type;
		
		private EntityRef<FACTURE> _FACTURE;
		
		private EntityRef<PAYEMENT> _PAYEMENT;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdPayChanging(int value);
    partial void OnIdPayChanged();
    partial void OnIdFDChanging(int value);
    partial void OnIdFDChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    #endregion
		
		public LIGNE_PAYEMENT()
		{
			this._FACTURE = default(EntityRef<FACTURE>);
			this._PAYEMENT = default(EntityRef<PAYEMENT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPay", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdPay
		{
			get
			{
				return this._IdPay;
			}
			set
			{
				if ((this._IdPay != value))
				{
					if (this._PAYEMENT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdPayChanging(value);
					this.SendPropertyChanging();
					this._IdPay = value;
					this.SendPropertyChanged("IdPay");
					this.OnIdPayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFD", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdFD
		{
			get
			{
				return this._IdFD;
			}
			set
			{
				if ((this._IdFD != value))
				{
					if (this._FACTURE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdFDChanging(value);
					this.SendPropertyChanging();
					this._IdFD = value;
					this.SendPropertyChanged("IdFD");
					this.OnIdFDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="nvarchar(6) ")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FACTURE_LIGNE_PAYEMENT", Storage="_FACTURE", ThisKey="IdFD", OtherKey="IdFD", IsForeignKey=true)]
		public FACTURE FACTURE
		{
			get
			{
				return this._FACTURE.Entity;
			}
			set
			{
				FACTURE previousValue = this._FACTURE.Entity;
				if (((previousValue != value) 
							|| (this._FACTURE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FACTURE.Entity = null;
						previousValue.LIGNE_PAYEMENT.Remove(this);
					}
					this._FACTURE.Entity = value;
					if ((value != null))
					{
						value.LIGNE_PAYEMENT.Add(this);
						this._IdFD = value.IdFD;
					}
					else
					{
						this._IdFD = default(int);
					}
					this.SendPropertyChanged("FACTURE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PAYEMENT_LIGNE_PAYEMENT", Storage="_PAYEMENT", ThisKey="IdPay", OtherKey="IdPay", IsForeignKey=true)]
		public PAYEMENT PAYEMENT
		{
			get
			{
				return this._PAYEMENT.Entity;
			}
			set
			{
				PAYEMENT previousValue = this._PAYEMENT.Entity;
				if (((previousValue != value) 
							|| (this._PAYEMENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PAYEMENT.Entity = null;
						previousValue.LIGNE_PAYEMENT.Remove(this);
					}
					this._PAYEMENT.Entity = value;
					if ((value != null))
					{
						value.LIGNE_PAYEMENT.Add(this);
						this._IdPay = value.IdPay;
					}
					else
					{
						this._IdPay = default(int);
					}
					this.SendPropertyChanged("PAYEMENT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FACTURE_ARMATEUR")]
	public partial class FACTURE_ARMATEUR : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdFArm;
		
		private System.Nullable<System.DateTime> _DCFArm;
		
		private string _AIFArm;
		
		private System.Nullable<int> _MHT;
		
		private System.Nullable<int> _MTVA;
		
		private System.Nullable<int> _MTTC;
		
		private System.Nullable<int> _IdEsc;
		
		private System.Nullable<int> _IdU;
		
		private System.Nullable<int> _IdDocSAP;
		
		private string _Statut;
		
		private System.Nullable<System.DateTime> _DComptFact;
		
		private EntityRef<LIGNE_FACTURE_ARMATEUR> _LIGNE_FACTURE_ARMATEUR;
		
		private EntityRef<ESCALE> _ESCALE;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdFArmChanging(int value);
    partial void OnIdFArmChanged();
    partial void OnDCFArmChanging(System.Nullable<System.DateTime> value);
    partial void OnDCFArmChanged();
    partial void OnAIFArmChanging(string value);
    partial void OnAIFArmChanged();
    partial void OnMHTChanging(System.Nullable<int> value);
    partial void OnMHTChanged();
    partial void OnMTVAChanging(System.Nullable<int> value);
    partial void OnMTVAChanged();
    partial void OnMTTCChanging(System.Nullable<int> value);
    partial void OnMTTCChanged();
    partial void OnIdEscChanging(System.Nullable<int> value);
    partial void OnIdEscChanged();
    partial void OnIdUChanging(System.Nullable<int> value);
    partial void OnIdUChanged();
    partial void OnIdDocSAPChanging(System.Nullable<int> value);
    partial void OnIdDocSAPChanged();
    partial void OnStatutChanging(string value);
    partial void OnStatutChanged();
    partial void OnDComptFactChanging(System.Nullable<System.DateTime> value);
    partial void OnDComptFactChanged();
    #endregion
		
		public FACTURE_ARMATEUR()
		{
			this._LIGNE_FACTURE_ARMATEUR = default(EntityRef<LIGNE_FACTURE_ARMATEUR>);
			this._ESCALE = default(EntityRef<ESCALE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFArm", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdFArm
		{
			get
			{
				return this._IdFArm;
			}
			set
			{
				if ((this._IdFArm != value))
				{
					this.OnIdFArmChanging(value);
					this.SendPropertyChanging();
					this._IdFArm = value;
					this.SendPropertyChanged("IdFArm");
					this.OnIdFArmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DCFArm", DbType="DateTime")]
		public System.Nullable<System.DateTime> DCFArm
		{
			get
			{
				return this._DCFArm;
			}
			set
			{
				if ((this._DCFArm != value))
				{
					this.OnDCFArmChanging(value);
					this.SendPropertyChanging();
					this._DCFArm = value;
					this.SendPropertyChanged("DCFArm");
					this.OnDCFArmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AIFArm", DbType="NVarChar(255)")]
		public string AIFArm
		{
			get
			{
				return this._AIFArm;
			}
			set
			{
				if ((this._AIFArm != value))
				{
					this.OnAIFArmChanging(value);
					this.SendPropertyChanging();
					this._AIFArm = value;
					this.SendPropertyChanged("AIFArm");
					this.OnAIFArmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MHT", DbType="Int")]
		public System.Nullable<int> MHT
		{
			get
			{
				return this._MHT;
			}
			set
			{
				if ((this._MHT != value))
				{
					this.OnMHTChanging(value);
					this.SendPropertyChanging();
					this._MHT = value;
					this.SendPropertyChanged("MHT");
					this.OnMHTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MTVA", DbType="Int")]
		public System.Nullable<int> MTVA
		{
			get
			{
				return this._MTVA;
			}
			set
			{
				if ((this._MTVA != value))
				{
					this.OnMTVAChanging(value);
					this.SendPropertyChanging();
					this._MTVA = value;
					this.SendPropertyChanged("MTVA");
					this.OnMTVAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MTTC", DbType="Int")]
		public System.Nullable<int> MTTC
		{
			get
			{
				return this._MTTC;
			}
			set
			{
				if ((this._MTTC != value))
				{
					this.OnMTTCChanging(value);
					this.SendPropertyChanging();
					this._MTTC = value;
					this.SendPropertyChanged("MTTC");
					this.OnMTTCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEsc", DbType="Int")]
		public System.Nullable<int> IdEsc
		{
			get
			{
				return this._IdEsc;
			}
			set
			{
				if ((this._IdEsc != value))
				{
					if (this._ESCALE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdEscChanging(value);
					this.SendPropertyChanging();
					this._IdEsc = value;
					this.SendPropertyChanged("IdEsc");
					this.OnIdEscChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdU", DbType="Int")]
		public System.Nullable<int> IdU
		{
			get
			{
				return this._IdU;
			}
			set
			{
				if ((this._IdU != value))
				{
					this.OnIdUChanging(value);
					this.SendPropertyChanging();
					this._IdU = value;
					this.SendPropertyChanged("IdU");
					this.OnIdUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDocSAP", DbType="Int")]
		public System.Nullable<int> IdDocSAP
		{
			get
			{
				return this._IdDocSAP;
			}
			set
			{
				if ((this._IdDocSAP != value))
				{
					this.OnIdDocSAPChanging(value);
					this.SendPropertyChanging();
					this._IdDocSAP = value;
					this.SendPropertyChanged("IdDocSAP");
					this.OnIdDocSAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Statut", DbType="varchar(10)")]
		public string Statut
		{
			get
			{
				return this._Statut;
			}
			set
			{
				if ((this._Statut != value))
				{
					this.OnStatutChanging(value);
					this.SendPropertyChanging();
					this._Statut = value;
					this.SendPropertyChanged("Statut");
					this.OnStatutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DComptFact", DbType="datetime")]
		public System.Nullable<System.DateTime> DComptFact
		{
			get
			{
				return this._DComptFact;
			}
			set
			{
				if ((this._DComptFact != value))
				{
					this.OnDComptFactChanging(value);
					this.SendPropertyChanging();
					this._DComptFact = value;
					this.SendPropertyChanged("DComptFact");
					this.OnDComptFactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FACTURE_ARMATEUR_LIGNE_FACTURE_ARMATEUR", Storage="_LIGNE_FACTURE_ARMATEUR", ThisKey="IdFArm", OtherKey="IdFArm", IsUnique=true, IsForeignKey=false)]
		public LIGNE_FACTURE_ARMATEUR LIGNE_FACTURE_ARMATEUR
		{
			get
			{
				return this._LIGNE_FACTURE_ARMATEUR.Entity;
			}
			set
			{
				LIGNE_FACTURE_ARMATEUR previousValue = this._LIGNE_FACTURE_ARMATEUR.Entity;
				if (((previousValue != value) 
							|| (this._LIGNE_FACTURE_ARMATEUR.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LIGNE_FACTURE_ARMATEUR.Entity = null;
						previousValue.FACTURE_ARMATEUR = null;
					}
					this._LIGNE_FACTURE_ARMATEUR.Entity = value;
					if ((value != null))
					{
						value.FACTURE_ARMATEUR = this;
					}
					this.SendPropertyChanged("LIGNE_FACTURE_ARMATEUR");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ESCALE_FACTURE_ARMATEUR", Storage="_ESCALE", ThisKey="IdEsc", OtherKey="IdEsc", IsForeignKey=true)]
		public ESCALE ESCALE
		{
			get
			{
				return this._ESCALE.Entity;
			}
			set
			{
				ESCALE previousValue = this._ESCALE.Entity;
				if (((previousValue != value) 
							|| (this._ESCALE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ESCALE.Entity = null;
						previousValue.FACTURE_ARMATEUR.Remove(this);
					}
					this._ESCALE.Entity = value;
					if ((value != null))
					{
						value.FACTURE_ARMATEUR.Add(this);
						this._IdEsc = value.IdEsc;
					}
					else
					{
						this._IdEsc = default(Nullable<int>);
					}
					this.SendPropertyChanged("ESCALE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LIGNE_FACTURE_ARMATEUR")]
	public partial class LIGNE_FACTURE_ARMATEUR : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdFArm;
		
		private int _IdJEF;
		
		private string _StatutLP;
		
		private EntityRef<FACTURE_ARMATEUR> _FACTURE_ARMATEUR;
		
		private EntityRef<ELEMENT_FACTURATION> _ELEMENT_FACTURATION;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdFArmChanging(int value);
    partial void OnIdFArmChanged();
    partial void OnIdJEFChanging(int value);
    partial void OnIdJEFChanged();
    partial void OnStatutLPChanging(string value);
    partial void OnStatutLPChanged();
    #endregion
		
		public LIGNE_FACTURE_ARMATEUR()
		{
			this._FACTURE_ARMATEUR = default(EntityRef<FACTURE_ARMATEUR>);
			this._ELEMENT_FACTURATION = default(EntityRef<ELEMENT_FACTURATION>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFArm", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdFArm
		{
			get
			{
				return this._IdFArm;
			}
			set
			{
				if ((this._IdFArm != value))
				{
					if (this._FACTURE_ARMATEUR.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdFArmChanging(value);
					this.SendPropertyChanging();
					this._IdFArm = value;
					this.SendPropertyChanged("IdFArm");
					this.OnIdFArmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdJEF", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdJEF
		{
			get
			{
				return this._IdJEF;
			}
			set
			{
				if ((this._IdJEF != value))
				{
					if (this._ELEMENT_FACTURATION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdJEFChanging(value);
					this.SendPropertyChanging();
					this._IdJEF = value;
					this.SendPropertyChanged("IdJEF");
					this.OnIdJEFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatutLP", DbType="NVarChar(1)")]
		public string StatutLP
		{
			get
			{
				return this._StatutLP;
			}
			set
			{
				if ((this._StatutLP != value))
				{
					this.OnStatutLPChanging(value);
					this.SendPropertyChanging();
					this._StatutLP = value;
					this.SendPropertyChanged("StatutLP");
					this.OnStatutLPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FACTURE_ARMATEUR_LIGNE_FACTURE_ARMATEUR", Storage="_FACTURE_ARMATEUR", ThisKey="IdFArm", OtherKey="IdFArm", IsForeignKey=true)]
		public FACTURE_ARMATEUR FACTURE_ARMATEUR
		{
			get
			{
				return this._FACTURE_ARMATEUR.Entity;
			}
			set
			{
				FACTURE_ARMATEUR previousValue = this._FACTURE_ARMATEUR.Entity;
				if (((previousValue != value) 
							|| (this._FACTURE_ARMATEUR.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FACTURE_ARMATEUR.Entity = null;
						previousValue.LIGNE_FACTURE_ARMATEUR = null;
					}
					this._FACTURE_ARMATEUR.Entity = value;
					if ((value != null))
					{
						value.LIGNE_FACTURE_ARMATEUR = this;
						this._IdFArm = value.IdFArm;
					}
					else
					{
						this._IdFArm = default(int);
					}
					this.SendPropertyChanged("FACTURE_ARMATEUR");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ELEMENT_FACTURATION_LIGNE_FACTURE_ARMATEUR", Storage="_ELEMENT_FACTURATION", ThisKey="IdJEF", OtherKey="IdJEF", IsForeignKey=true)]
		public ELEMENT_FACTURATION ELEMENT_FACTURATION
		{
			get
			{
				return this._ELEMENT_FACTURATION.Entity;
			}
			set
			{
				ELEMENT_FACTURATION previousValue = this._ELEMENT_FACTURATION.Entity;
				if (((previousValue != value) 
							|| (this._ELEMENT_FACTURATION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ELEMENT_FACTURATION.Entity = null;
						previousValue.LIGNE_FACTURE_ARMATEUR = null;
					}
					this._ELEMENT_FACTURATION.Entity = value;
					if ((value != null))
					{
						value.LIGNE_FACTURE_ARMATEUR = this;
						this._IdJEF = value.IdJEF;
					}
					else
					{
						this._IdJEF = default(int);
					}
					this.SendPropertyChanged("ELEMENT_FACTURATION");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MOUVEMENT_TC")]
	public partial class MOUVEMENT_TC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdMvt;
		
		private System.Nullable<int> _IdTC;
		
		private System.Nullable<int> _IdTypeOp;
		
		private System.Nullable<System.DateTime> _DateMvt;
		
		private System.Nullable<int> _IdUser;
		
		private System.Nullable<int> _IdParc;
		
		private System.Nullable<int> _IdEsc;
		
		private System.Nullable<int> _IdBL;
		
		private EntityRef<CONNAISSEMENT> _CONNAISSEMENT;
		
		private EntityRef<ESCALE> _ESCALE;
		
		private EntityRef<TYPE_OPERATION> _TYPE_OPERATION;
		
		private EntityRef<UTILISATEUR> _UTILISATEUR;
		
		private EntityRef<PARC> _PARC;
		
		private EntityRef<CONTENEUR_TC> _CONTENEUR_TC;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdMvtChanging(int value);
    partial void OnIdMvtChanged();
    partial void OnIdTCChanging(System.Nullable<int> value);
    partial void OnIdTCChanged();
    partial void OnIdTypeOpChanging(System.Nullable<int> value);
    partial void OnIdTypeOpChanged();
    partial void OnDateMvtChanging(System.Nullable<System.DateTime> value);
    partial void OnDateMvtChanged();
    partial void OnIdUserChanging(System.Nullable<int> value);
    partial void OnIdUserChanged();
    partial void OnIdParcChanging(System.Nullable<int> value);
    partial void OnIdParcChanged();
    partial void OnIdEscChanging(System.Nullable<int> value);
    partial void OnIdEscChanged();
    partial void OnIdBLChanging(System.Nullable<int> value);
    partial void OnIdBLChanged();
    #endregion
		
		public MOUVEMENT_TC()
		{
			this._CONNAISSEMENT = default(EntityRef<CONNAISSEMENT>);
			this._ESCALE = default(EntityRef<ESCALE>);
			this._TYPE_OPERATION = default(EntityRef<TYPE_OPERATION>);
			this._UTILISATEUR = default(EntityRef<UTILISATEUR>);
			this._PARC = default(EntityRef<PARC>);
			this._CONTENEUR_TC = default(EntityRef<CONTENEUR_TC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdMvt", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdMvt
		{
			get
			{
				return this._IdMvt;
			}
			set
			{
				if ((this._IdMvt != value))
				{
					this.OnIdMvtChanging(value);
					this.SendPropertyChanging();
					this._IdMvt = value;
					this.SendPropertyChanged("IdMvt");
					this.OnIdMvtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTC", DbType="Int")]
		public System.Nullable<int> IdTC
		{
			get
			{
				return this._IdTC;
			}
			set
			{
				if ((this._IdTC != value))
				{
					if (this._CONTENEUR_TC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdTCChanging(value);
					this.SendPropertyChanging();
					this._IdTC = value;
					this.SendPropertyChanged("IdTC");
					this.OnIdTCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTypeOp", DbType="Int")]
		public System.Nullable<int> IdTypeOp
		{
			get
			{
				return this._IdTypeOp;
			}
			set
			{
				if ((this._IdTypeOp != value))
				{
					if (this._TYPE_OPERATION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdTypeOpChanging(value);
					this.SendPropertyChanging();
					this._IdTypeOp = value;
					this.SendPropertyChanged("IdTypeOp");
					this.OnIdTypeOpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateMvt", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateMvt
		{
			get
			{
				return this._DateMvt;
			}
			set
			{
				if ((this._DateMvt != value))
				{
					this.OnDateMvtChanging(value);
					this.SendPropertyChanging();
					this._DateMvt = value;
					this.SendPropertyChanged("DateMvt");
					this.OnDateMvtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUser", DbType="Int")]
		public System.Nullable<int> IdUser
		{
			get
			{
				return this._IdUser;
			}
			set
			{
				if ((this._IdUser != value))
				{
					if (this._UTILISATEUR.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdUserChanging(value);
					this.SendPropertyChanging();
					this._IdUser = value;
					this.SendPropertyChanged("IdUser");
					this.OnIdUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdParc", DbType="Int")]
		public System.Nullable<int> IdParc
		{
			get
			{
				return this._IdParc;
			}
			set
			{
				if ((this._IdParc != value))
				{
					if (this._PARC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdParcChanging(value);
					this.SendPropertyChanging();
					this._IdParc = value;
					this.SendPropertyChanged("IdParc");
					this.OnIdParcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEsc", DbType="Int")]
		public System.Nullable<int> IdEsc
		{
			get
			{
				return this._IdEsc;
			}
			set
			{
				if ((this._IdEsc != value))
				{
					if (this._ESCALE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdEscChanging(value);
					this.SendPropertyChanging();
					this._IdEsc = value;
					this.SendPropertyChanged("IdEsc");
					this.OnIdEscChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdBL", DbType="Int")]
		public System.Nullable<int> IdBL
		{
			get
			{
				return this._IdBL;
			}
			set
			{
				if ((this._IdBL != value))
				{
					if (this._CONNAISSEMENT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdBLChanging(value);
					this.SendPropertyChanging();
					this._IdBL = value;
					this.SendPropertyChanged("IdBL");
					this.OnIdBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONNAISSEMENT_MOUVEMENT_TC", Storage="_CONNAISSEMENT", ThisKey="IdBL", OtherKey="IdBL", IsForeignKey=true)]
		public CONNAISSEMENT CONNAISSEMENT
		{
			get
			{
				return this._CONNAISSEMENT.Entity;
			}
			set
			{
				CONNAISSEMENT previousValue = this._CONNAISSEMENT.Entity;
				if (((previousValue != value) 
							|| (this._CONNAISSEMENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CONNAISSEMENT.Entity = null;
						previousValue.MOUVEMENT_TC.Remove(this);
					}
					this._CONNAISSEMENT.Entity = value;
					if ((value != null))
					{
						value.MOUVEMENT_TC.Add(this);
						this._IdBL = value.IdBL;
					}
					else
					{
						this._IdBL = default(Nullable<int>);
					}
					this.SendPropertyChanged("CONNAISSEMENT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ESCALE_MOUVEMENT_TC", Storage="_ESCALE", ThisKey="IdEsc", OtherKey="IdEsc", IsForeignKey=true)]
		public ESCALE ESCALE
		{
			get
			{
				return this._ESCALE.Entity;
			}
			set
			{
				ESCALE previousValue = this._ESCALE.Entity;
				if (((previousValue != value) 
							|| (this._ESCALE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ESCALE.Entity = null;
						previousValue.MOUVEMENT_TC.Remove(this);
					}
					this._ESCALE.Entity = value;
					if ((value != null))
					{
						value.MOUVEMENT_TC.Add(this);
						this._IdEsc = value.IdEsc;
					}
					else
					{
						this._IdEsc = default(Nullable<int>);
					}
					this.SendPropertyChanged("ESCALE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TYPE_OPERATION_MOUVEMENT_TC", Storage="_TYPE_OPERATION", ThisKey="IdTypeOp", OtherKey="IdTypeOp", IsForeignKey=true)]
		public TYPE_OPERATION TYPE_OPERATION
		{
			get
			{
				return this._TYPE_OPERATION.Entity;
			}
			set
			{
				TYPE_OPERATION previousValue = this._TYPE_OPERATION.Entity;
				if (((previousValue != value) 
							|| (this._TYPE_OPERATION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TYPE_OPERATION.Entity = null;
						previousValue.MOUVEMENT_TC.Remove(this);
					}
					this._TYPE_OPERATION.Entity = value;
					if ((value != null))
					{
						value.MOUVEMENT_TC.Add(this);
						this._IdTypeOp = value.IdTypeOp;
					}
					else
					{
						this._IdTypeOp = default(Nullable<int>);
					}
					this.SendPropertyChanged("TYPE_OPERATION");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UTILISATEUR_MOUVEMENT_TC", Storage="_UTILISATEUR", ThisKey="IdUser", OtherKey="IdU", IsForeignKey=true)]
		public UTILISATEUR UTILISATEUR
		{
			get
			{
				return this._UTILISATEUR.Entity;
			}
			set
			{
				UTILISATEUR previousValue = this._UTILISATEUR.Entity;
				if (((previousValue != value) 
							|| (this._UTILISATEUR.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UTILISATEUR.Entity = null;
						previousValue.MOUVEMENT_TC.Remove(this);
					}
					this._UTILISATEUR.Entity = value;
					if ((value != null))
					{
						value.MOUVEMENT_TC.Add(this);
						this._IdUser = value.IdU;
					}
					else
					{
						this._IdUser = default(Nullable<int>);
					}
					this.SendPropertyChanged("UTILISATEUR");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PARC_MOUVEMENT_TC", Storage="_PARC", ThisKey="IdParc", OtherKey="IdParc", IsForeignKey=true)]
		public PARC PARC
		{
			get
			{
				return this._PARC.Entity;
			}
			set
			{
				PARC previousValue = this._PARC.Entity;
				if (((previousValue != value) 
							|| (this._PARC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PARC.Entity = null;
						previousValue.MOUVEMENT_TC.Remove(this);
					}
					this._PARC.Entity = value;
					if ((value != null))
					{
						value.MOUVEMENT_TC.Add(this);
						this._IdParc = value.IdParc;
					}
					else
					{
						this._IdParc = default(Nullable<int>);
					}
					this.SendPropertyChanged("PARC");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONTENEUR_TC_MOUVEMENT_TC", Storage="_CONTENEUR_TC", ThisKey="IdTC", OtherKey="IdTC", IsForeignKey=true)]
		public CONTENEUR_TC CONTENEUR_TC
		{
			get
			{
				return this._CONTENEUR_TC.Entity;
			}
			set
			{
				CONTENEUR_TC previousValue = this._CONTENEUR_TC.Entity;
				if (((previousValue != value) 
							|| (this._CONTENEUR_TC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CONTENEUR_TC.Entity = null;
						previousValue.MOUVEMENT_TC.Remove(this);
					}
					this._CONTENEUR_TC.Entity = value;
					if ((value != null))
					{
						value.MOUVEMENT_TC.Add(this);
						this._IdTC = value.IdTC;
					}
					else
					{
						this._IdTC = default(Nullable<int>);
					}
					this.SendPropertyChanged("CONTENEUR_TC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CONTENEUR_TC")]
	public partial class CONTENEUR_TC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdTC;
		
		private System.Nullable<int> _IdCtr;
		
		private string _NumTC;
		
		private System.Nullable<System.DateTime> _DateCréationTC;
		
		private string _TypeCtr;
		
		private string _StatutTC;
		
		private System.Nullable<System.DateTime> _DateDébarquementSCR;
		
		private System.Nullable<System.DateTime> _DateDébarquementDIT;
		
		private System.Nullable<int> _IdUserDébarquement;
		
		private System.Nullable<int> _IdEscDébarquement;
		
		private System.Nullable<int> _IdBLDébarquement;
		
		private System.Nullable<System.DateTime> _DateSortiePleinSCR;
		
		private System.Nullable<System.DateTime> _DateSortiePleinDIT;
		
		private System.Nullable<int> _IdUserSortiePlein;
		
		private string _DestinationSortiePlein;
		
		private System.Nullable<System.DateTime> _DateRetourVideSCR;
		
		private System.Nullable<System.DateTime> _DateRetourVideDIT;
		
		private System.Nullable<int> _IdUserRetourVide;
		
		private System.Nullable<int> _IdParcRetourVide;
		
		private System.Nullable<System.DateTime> _DateParquing;
		
		private System.Nullable<int> _IdUserParquing;
		
		private System.Nullable<int> _IdParcParquing;
		
		private System.Nullable<int> _IdEmplacementParc;
		
		private System.Nullable<System.DateTime> _DateTransfertZN;
		
		private System.Nullable<int> _IdUserTransfertZN;
		
		private System.Nullable<int> _IdParcTransfertZN;
		
		private System.Nullable<int> _IdEmplacementZN;
		
		private System.Nullable<System.DateTime> _DateTransfertZR;
		
		private System.Nullable<int> _IdUserTransfertZR;
		
		private System.Nullable<int> _IdParcTransfertZR;
		
		private System.Nullable<int> _IdEmplacementZR;
		
		private System.Nullable<System.DateTime> _DateSortieVide;
		
		private System.Nullable<int> _IdUserSortieVide;
		
		private System.Nullable<int> _IdEscSortieVide;
		
		private System.Nullable<int> _IdMiseADisposition;
		
		private string _DestinationSortieVide;
		
		private System.Nullable<System.DateTime> _DateRetourPlein;
		
		private System.Nullable<int> _IdUserRetourPlein;
		
		private System.Nullable<int> _IdEscRetourPlein;
		
		private System.Nullable<int> _IdBooking;
		
		private System.Nullable<int> _IdParcRetourPlein;
		
		private System.Nullable<System.DateTime> _DateEmbarquement;
		
		private System.Nullable<int> _IdUserEmbarquement;
		
		private System.Nullable<int> _IdEscEmbarquement;
		
		private System.Nullable<int> _IdBLExport;
		
		private string _EtatRetourVide;
		
		private string _Reparation;
		
		private string _Nettoyage;
		
		private string _Lavage;
		
		private string _Irreparable;
		
		private System.Nullable<int> _IdUserRetourArmateur;
		
		private System.Nullable<System.DateTime> _DateRetourArmateur;
		
		private string _IsDoublon;
		
		private EntitySet<MOUVEMENT_TC> _MOUVEMENT_TC;
		
		private EntityRef<CONTENEUR> _CONTENEUR;
		
		private EntityRef<DISPOSITION_CONTENEUR> _DISPOSITION_CONTENEUR;
		
		private EntityRef<PARC> _PARC;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdTCChanging(int value);
    partial void OnIdTCChanged();
    partial void OnIdCtrChanging(System.Nullable<int> value);
    partial void OnIdCtrChanged();
    partial void OnNumTCChanging(string value);
    partial void OnNumTCChanged();
    partial void OnDateCréationTCChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCréationTCChanged();
    partial void OnTypeCtrChanging(string value);
    partial void OnTypeCtrChanged();
    partial void OnStatutTCChanging(string value);
    partial void OnStatutTCChanged();
    partial void OnDateDébarquementSCRChanging(System.Nullable<System.DateTime> value);
    partial void OnDateDébarquementSCRChanged();
    partial void OnDateDébarquementDITChanging(System.Nullable<System.DateTime> value);
    partial void OnDateDébarquementDITChanged();
    partial void OnIdUserDébarquementChanging(System.Nullable<int> value);
    partial void OnIdUserDébarquementChanged();
    partial void OnIdEscDébarquementChanging(System.Nullable<int> value);
    partial void OnIdEscDébarquementChanged();
    partial void OnIdBLDébarquementChanging(System.Nullable<int> value);
    partial void OnIdBLDébarquementChanged();
    partial void OnDateSortiePleinSCRChanging(System.Nullable<System.DateTime> value);
    partial void OnDateSortiePleinSCRChanged();
    partial void OnDateSortiePleinDITChanging(System.Nullable<System.DateTime> value);
    partial void OnDateSortiePleinDITChanged();
    partial void OnIdUserSortiePleinChanging(System.Nullable<int> value);
    partial void OnIdUserSortiePleinChanged();
    partial void OnDestinationSortiePleinChanging(string value);
    partial void OnDestinationSortiePleinChanged();
    partial void OnDateRetourVideSCRChanging(System.Nullable<System.DateTime> value);
    partial void OnDateRetourVideSCRChanged();
    partial void OnDateRetourVideDITChanging(System.Nullable<System.DateTime> value);
    partial void OnDateRetourVideDITChanged();
    partial void OnIdUserRetourVideChanging(System.Nullable<int> value);
    partial void OnIdUserRetourVideChanged();
    partial void OnIdParcRetourVideChanging(System.Nullable<int> value);
    partial void OnIdParcRetourVideChanged();
    partial void OnDateParquingChanging(System.Nullable<System.DateTime> value);
    partial void OnDateParquingChanged();
    partial void OnIdUserParquingChanging(System.Nullable<int> value);
    partial void OnIdUserParquingChanged();
    partial void OnIdParcParquingChanging(System.Nullable<int> value);
    partial void OnIdParcParquingChanged();
    partial void OnIdEmplacementParcChanging(System.Nullable<int> value);
    partial void OnIdEmplacementParcChanged();
    partial void OnDateTransfertZHChanging(System.Nullable<System.DateTime> value);
    partial void OnDateTransfertZHChanged();
    partial void OnIdUserTransfertZHChanging(System.Nullable<int> value);
    partial void OnIdUserTransfertZHChanged();
    partial void OnIdParcTransfertZHChanging(System.Nullable<int> value);
    partial void OnIdParcTransfertZHChanged();
    partial void OnIdEmplacementZHChanging(System.Nullable<int> value);
    partial void OnIdEmplacementZHChanged();
    partial void OnDateTransfertZRChanging(System.Nullable<System.DateTime> value);
    partial void OnDateTransfertZRChanged();
    partial void OnIdUserTransfertZRChanging(System.Nullable<int> value);
    partial void OnIdUserTransfertZRChanged();
    partial void OnIdParcTransfertZRChanging(System.Nullable<int> value);
    partial void OnIdParcTransfertZRChanged();
    partial void OnIdEmplacementZRChanging(System.Nullable<int> value);
    partial void OnIdEmplacementZRChanged();
    partial void OnDateSortieVideChanging(System.Nullable<System.DateTime> value);
    partial void OnDateSortieVideChanged();
    partial void OnIdUserSortieVideChanging(System.Nullable<int> value);
    partial void OnIdUserSortieVideChanged();
    partial void OnIdEscSortieVideChanging(System.Nullable<int> value);
    partial void OnIdEscSortieVideChanged();
    partial void OnIdMiseADispositionChanging(System.Nullable<int> value);
    partial void OnIdMiseADispositionChanged();
    partial void OnDestinationSortieVideChanging(string value);
    partial void OnDestinationSortieVideChanged();
    partial void OnDateRetourPleinChanging(System.Nullable<System.DateTime> value);
    partial void OnDateRetourPleinChanged();
    partial void OnIdUserRetourPleinChanging(System.Nullable<int> value);
    partial void OnIdUserRetourPleinChanged();
    partial void OnIdEscRetourPleinChanging(System.Nullable<int> value);
    partial void OnIdEscRetourPleinChanged();
    partial void OnIdBookingChanging(System.Nullable<int> value);
    partial void OnIdBookingChanged();
    partial void OnIdParcRetourPleinChanging(System.Nullable<int> value);
    partial void OnIdParcRetourPleinChanged();
    partial void OnDateEmbarquementChanging(System.Nullable<System.DateTime> value);
    partial void OnDateEmbarquementChanged();
    partial void OnIdUserEmbarquementChanging(System.Nullable<int> value);
    partial void OnIdUserEmbarquementChanged();
    partial void OnIdEscEmbarquementChanging(System.Nullable<int> value);
    partial void OnIdEscEmbarquementChanged();
    partial void OnIdCtrExportChanging(System.Nullable<int> value);
    partial void OnIdCtrExportChanged();
    partial void OnEtatRetourVideChanging(string value);
    partial void OnEtatRetourVideChanged();
    partial void OnReparationChanging(string value);
    partial void OnReparationChanged();
    partial void OnNettoyageChanging(string value);
    partial void OnNettoyageChanged();
    partial void OnLavageChanging(string value);
    partial void OnLavageChanged();
    partial void OnIrreparableChanging(string value);
    partial void OnIrreparableChanged();
    partial void OnIdUserRetourArmateurChanging(System.Nullable<int> value);
    partial void OnIdUserRetourArmateurChanged();
    partial void OnDateRetourArmateurChanging(System.Nullable<System.DateTime> value);
    partial void OnDateRetourArmateurChanged();
    partial void OnIsDoublonChanging(string value);
    partial void OnIsDoublonChanged();
    #endregion
		
		public CONTENEUR_TC()
		{
			this._MOUVEMENT_TC = new EntitySet<MOUVEMENT_TC>(new Action<MOUVEMENT_TC>(this.attach_MOUVEMENT_TC), new Action<MOUVEMENT_TC>(this.detach_MOUVEMENT_TC));
			this._CONTENEUR = default(EntityRef<CONTENEUR>);
			this._DISPOSITION_CONTENEUR = default(EntityRef<DISPOSITION_CONTENEUR>);
			this._PARC = default(EntityRef<PARC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTC", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdTC
		{
			get
			{
				return this._IdTC;
			}
			set
			{
				if ((this._IdTC != value))
				{
					this.OnIdTCChanging(value);
					this.SendPropertyChanging();
					this._IdTC = value;
					this.SendPropertyChanged("IdTC");
					this.OnIdTCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCtr", DbType="Int")]
		public System.Nullable<int> IdCtr
		{
			get
			{
				return this._IdCtr;
			}
			set
			{
				if ((this._IdCtr != value))
				{
					if (this._CONTENEUR.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdCtrChanging(value);
					this.SendPropertyChanging();
					this._IdCtr = value;
					this.SendPropertyChanged("IdCtr");
					this.OnIdCtrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumTC", DbType="NVarChar(20)")]
		public string NumTC
		{
			get
			{
				return this._NumTC;
			}
			set
			{
				if ((this._NumTC != value))
				{
					this.OnNumTCChanging(value);
					this.SendPropertyChanging();
					this._NumTC = value;
					this.SendPropertyChanged("NumTC");
					this.OnNumTCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCréationTC", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCréationTC
		{
			get
			{
				return this._DateCréationTC;
			}
			set
			{
				if ((this._DateCréationTC != value))
				{
					this.OnDateCréationTCChanging(value);
					this.SendPropertyChanging();
					this._DateCréationTC = value;
					this.SendPropertyChanged("DateCréationTC");
					this.OnDateCréationTCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeCtr", DbType="NVarChar(20)")]
		public string TypeCtr
		{
			get
			{
				return this._TypeCtr;
			}
			set
			{
				if ((this._TypeCtr != value))
				{
					this.OnTypeCtrChanging(value);
					this.SendPropertyChanging();
					this._TypeCtr = value;
					this.SendPropertyChanged("TypeCtr");
					this.OnTypeCtrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatutTC", DbType="NVarChar(25)")]
		public string StatutTC
		{
			get
			{
				return this._StatutTC;
			}
			set
			{
				if ((this._StatutTC != value))
				{
					this.OnStatutTCChanging(value);
					this.SendPropertyChanging();
					this._StatutTC = value;
					this.SendPropertyChanged("StatutTC");
					this.OnStatutTCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateDébarquementSCR", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateDébarquementSCR
		{
			get
			{
				return this._DateDébarquementSCR;
			}
			set
			{
				if ((this._DateDébarquementSCR != value))
				{
					this.OnDateDébarquementSCRChanging(value);
					this.SendPropertyChanging();
					this._DateDébarquementSCR = value;
					this.SendPropertyChanged("DateDébarquementSCR");
					this.OnDateDébarquementSCRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateDébarquementDIT", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateDébarquementDIT
		{
			get
			{
				return this._DateDébarquementDIT;
			}
			set
			{
				if ((this._DateDébarquementDIT != value))
				{
					this.OnDateDébarquementDITChanging(value);
					this.SendPropertyChanging();
					this._DateDébarquementDIT = value;
					this.SendPropertyChanged("DateDébarquementDIT");
					this.OnDateDébarquementDITChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUserDébarquement", DbType="Int")]
		public System.Nullable<int> IdUserDébarquement
		{
			get
			{
				return this._IdUserDébarquement;
			}
			set
			{
				if ((this._IdUserDébarquement != value))
				{
					this.OnIdUserDébarquementChanging(value);
					this.SendPropertyChanging();
					this._IdUserDébarquement = value;
					this.SendPropertyChanged("IdUserDébarquement");
					this.OnIdUserDébarquementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEscDébarquement", DbType="Int")]
		public System.Nullable<int> IdEscDébarquement
		{
			get
			{
				return this._IdEscDébarquement;
			}
			set
			{
				if ((this._IdEscDébarquement != value))
				{
					this.OnIdEscDébarquementChanging(value);
					this.SendPropertyChanging();
					this._IdEscDébarquement = value;
					this.SendPropertyChanged("IdEscDébarquement");
					this.OnIdEscDébarquementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdBLDébarquement", DbType="Int")]
		public System.Nullable<int> IdBLDébarquement
		{
			get
			{
				return this._IdBLDébarquement;
			}
			set
			{
				if ((this._IdBLDébarquement != value))
				{
					this.OnIdBLDébarquementChanging(value);
					this.SendPropertyChanging();
					this._IdBLDébarquement = value;
					this.SendPropertyChanged("IdBLDébarquement");
					this.OnIdBLDébarquementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateSortiePleinSCR", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateSortiePleinSCR
		{
			get
			{
				return this._DateSortiePleinSCR;
			}
			set
			{
				if ((this._DateSortiePleinSCR != value))
				{
					this.OnDateSortiePleinSCRChanging(value);
					this.SendPropertyChanging();
					this._DateSortiePleinSCR = value;
					this.SendPropertyChanged("DateSortiePleinSCR");
					this.OnDateSortiePleinSCRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateSortiePleinDIT", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateSortiePleinDIT
		{
			get
			{
				return this._DateSortiePleinDIT;
			}
			set
			{
				if ((this._DateSortiePleinDIT != value))
				{
					this.OnDateSortiePleinDITChanging(value);
					this.SendPropertyChanging();
					this._DateSortiePleinDIT = value;
					this.SendPropertyChanged("DateSortiePleinDIT");
					this.OnDateSortiePleinDITChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUserSortiePlein", DbType="Int")]
		public System.Nullable<int> IdUserSortiePlein
		{
			get
			{
				return this._IdUserSortiePlein;
			}
			set
			{
				if ((this._IdUserSortiePlein != value))
				{
					this.OnIdUserSortiePleinChanging(value);
					this.SendPropertyChanging();
					this._IdUserSortiePlein = value;
					this.SendPropertyChanged("IdUserSortiePlein");
					this.OnIdUserSortiePleinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DestinationSortiePlein", DbType="NVarChar(50)")]
		public string DestinationSortiePlein
		{
			get
			{
				return this._DestinationSortiePlein;
			}
			set
			{
				if ((this._DestinationSortiePlein != value))
				{
					this.OnDestinationSortiePleinChanging(value);
					this.SendPropertyChanging();
					this._DestinationSortiePlein = value;
					this.SendPropertyChanged("DestinationSortiePlein");
					this.OnDestinationSortiePleinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateRetourVideSCR", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateRetourVideSCR
		{
			get
			{
				return this._DateRetourVideSCR;
			}
			set
			{
				if ((this._DateRetourVideSCR != value))
				{
					this.OnDateRetourVideSCRChanging(value);
					this.SendPropertyChanging();
					this._DateRetourVideSCR = value;
					this.SendPropertyChanged("DateRetourVideSCR");
					this.OnDateRetourVideSCRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateRetourVideDIT", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateRetourVideDIT
		{
			get
			{
				return this._DateRetourVideDIT;
			}
			set
			{
				if ((this._DateRetourVideDIT != value))
				{
					this.OnDateRetourVideDITChanging(value);
					this.SendPropertyChanging();
					this._DateRetourVideDIT = value;
					this.SendPropertyChanged("DateRetourVideDIT");
					this.OnDateRetourVideDITChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUserRetourVide", DbType="Int")]
		public System.Nullable<int> IdUserRetourVide
		{
			get
			{
				return this._IdUserRetourVide;
			}
			set
			{
				if ((this._IdUserRetourVide != value))
				{
					this.OnIdUserRetourVideChanging(value);
					this.SendPropertyChanging();
					this._IdUserRetourVide = value;
					this.SendPropertyChanged("IdUserRetourVide");
					this.OnIdUserRetourVideChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdParcRetourVide", DbType="Int")]
		public System.Nullable<int> IdParcRetourVide
		{
			get
			{
				return this._IdParcRetourVide;
			}
			set
			{
				if ((this._IdParcRetourVide != value))
				{
					this.OnIdParcRetourVideChanging(value);
					this.SendPropertyChanging();
					this._IdParcRetourVide = value;
					this.SendPropertyChanged("IdParcRetourVide");
					this.OnIdParcRetourVideChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateParquing", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateParquing
		{
			get
			{
				return this._DateParquing;
			}
			set
			{
				if ((this._DateParquing != value))
				{
					this.OnDateParquingChanging(value);
					this.SendPropertyChanging();
					this._DateParquing = value;
					this.SendPropertyChanged("DateParquing");
					this.OnDateParquingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUserParquing", DbType="Int")]
		public System.Nullable<int> IdUserParquing
		{
			get
			{
				return this._IdUserParquing;
			}
			set
			{
				if ((this._IdUserParquing != value))
				{
					this.OnIdUserParquingChanging(value);
					this.SendPropertyChanging();
					this._IdUserParquing = value;
					this.SendPropertyChanged("IdUserParquing");
					this.OnIdUserParquingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdParcParquing", DbType="Int")]
		public System.Nullable<int> IdParcParquing
		{
			get
			{
				return this._IdParcParquing;
			}
			set
			{
				if ((this._IdParcParquing != value))
				{
					if (this._PARC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdParcParquingChanging(value);
					this.SendPropertyChanging();
					this._IdParcParquing = value;
					this.SendPropertyChanged("IdParcParquing");
					this.OnIdParcParquingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEmplacementParc", DbType="Int")]
		public System.Nullable<int> IdEmplacementParc
		{
			get
			{
				return this._IdEmplacementParc;
			}
			set
			{
				if ((this._IdEmplacementParc != value))
				{
					this.OnIdEmplacementParcChanging(value);
					this.SendPropertyChanging();
					this._IdEmplacementParc = value;
					this.SendPropertyChanged("IdEmplacementParc");
					this.OnIdEmplacementParcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTransfertZN", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateTransfertZH
		{
			get
			{
				return this._DateTransfertZN;
			}
			set
			{
				if ((this._DateTransfertZN != value))
				{
					this.OnDateTransfertZHChanging(value);
					this.SendPropertyChanging();
					this._DateTransfertZN = value;
					this.SendPropertyChanged("DateTransfertZH");
					this.OnDateTransfertZHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUserTransfertZN", DbType="Int")]
		public System.Nullable<int> IdUserTransfertZH
		{
			get
			{
				return this._IdUserTransfertZN;
			}
			set
			{
				if ((this._IdUserTransfertZN != value))
				{
					this.OnIdUserTransfertZHChanging(value);
					this.SendPropertyChanging();
					this._IdUserTransfertZN = value;
					this.SendPropertyChanged("IdUserTransfertZH");
					this.OnIdUserTransfertZHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdParcTransfertZN", DbType="Int")]
		public System.Nullable<int> IdParcTransfertZH
		{
			get
			{
				return this._IdParcTransfertZN;
			}
			set
			{
				if ((this._IdParcTransfertZN != value))
				{
					this.OnIdParcTransfertZHChanging(value);
					this.SendPropertyChanging();
					this._IdParcTransfertZN = value;
					this.SendPropertyChanged("IdParcTransfertZH");
					this.OnIdParcTransfertZHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEmplacementZN", DbType="Int")]
		public System.Nullable<int> IdEmplacementZH
		{
			get
			{
				return this._IdEmplacementZN;
			}
			set
			{
				if ((this._IdEmplacementZN != value))
				{
					this.OnIdEmplacementZHChanging(value);
					this.SendPropertyChanging();
					this._IdEmplacementZN = value;
					this.SendPropertyChanged("IdEmplacementZH");
					this.OnIdEmplacementZHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTransfertZR", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateTransfertZR
		{
			get
			{
				return this._DateTransfertZR;
			}
			set
			{
				if ((this._DateTransfertZR != value))
				{
					this.OnDateTransfertZRChanging(value);
					this.SendPropertyChanging();
					this._DateTransfertZR = value;
					this.SendPropertyChanged("DateTransfertZR");
					this.OnDateTransfertZRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUserTransfertZR", DbType="Int")]
		public System.Nullable<int> IdUserTransfertZR
		{
			get
			{
				return this._IdUserTransfertZR;
			}
			set
			{
				if ((this._IdUserTransfertZR != value))
				{
					this.OnIdUserTransfertZRChanging(value);
					this.SendPropertyChanging();
					this._IdUserTransfertZR = value;
					this.SendPropertyChanged("IdUserTransfertZR");
					this.OnIdUserTransfertZRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdParcTransfertZR", DbType="Int")]
		public System.Nullable<int> IdParcTransfertZR
		{
			get
			{
				return this._IdParcTransfertZR;
			}
			set
			{
				if ((this._IdParcTransfertZR != value))
				{
					this.OnIdParcTransfertZRChanging(value);
					this.SendPropertyChanging();
					this._IdParcTransfertZR = value;
					this.SendPropertyChanged("IdParcTransfertZR");
					this.OnIdParcTransfertZRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEmplacementZR", DbType="Int")]
		public System.Nullable<int> IdEmplacementZR
		{
			get
			{
				return this._IdEmplacementZR;
			}
			set
			{
				if ((this._IdEmplacementZR != value))
				{
					this.OnIdEmplacementZRChanging(value);
					this.SendPropertyChanging();
					this._IdEmplacementZR = value;
					this.SendPropertyChanged("IdEmplacementZR");
					this.OnIdEmplacementZRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateSortieVide", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateSortieVide
		{
			get
			{
				return this._DateSortieVide;
			}
			set
			{
				if ((this._DateSortieVide != value))
				{
					this.OnDateSortieVideChanging(value);
					this.SendPropertyChanging();
					this._DateSortieVide = value;
					this.SendPropertyChanged("DateSortieVide");
					this.OnDateSortieVideChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUserSortieVide", DbType="Int")]
		public System.Nullable<int> IdUserSortieVide
		{
			get
			{
				return this._IdUserSortieVide;
			}
			set
			{
				if ((this._IdUserSortieVide != value))
				{
					this.OnIdUserSortieVideChanging(value);
					this.SendPropertyChanging();
					this._IdUserSortieVide = value;
					this.SendPropertyChanged("IdUserSortieVide");
					this.OnIdUserSortieVideChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEscSortieVide", DbType="Int")]
		public System.Nullable<int> IdEscSortieVide
		{
			get
			{
				return this._IdEscSortieVide;
			}
			set
			{
				if ((this._IdEscSortieVide != value))
				{
					this.OnIdEscSortieVideChanging(value);
					this.SendPropertyChanging();
					this._IdEscSortieVide = value;
					this.SendPropertyChanged("IdEscSortieVide");
					this.OnIdEscSortieVideChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdMiseADisposition", DbType="Int")]
		public System.Nullable<int> IdMiseADisposition
		{
			get
			{
				return this._IdMiseADisposition;
			}
			set
			{
				if ((this._IdMiseADisposition != value))
				{
					if (this._DISPOSITION_CONTENEUR.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdMiseADispositionChanging(value);
					this.SendPropertyChanging();
					this._IdMiseADisposition = value;
					this.SendPropertyChanged("IdMiseADisposition");
					this.OnIdMiseADispositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DestinationSortieVide", DbType="NVarChar(50)")]
		public string DestinationSortieVide
		{
			get
			{
				return this._DestinationSortieVide;
			}
			set
			{
				if ((this._DestinationSortieVide != value))
				{
					this.OnDestinationSortieVideChanging(value);
					this.SendPropertyChanging();
					this._DestinationSortieVide = value;
					this.SendPropertyChanged("DestinationSortieVide");
					this.OnDestinationSortieVideChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateRetourPlein", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateRetourPlein
		{
			get
			{
				return this._DateRetourPlein;
			}
			set
			{
				if ((this._DateRetourPlein != value))
				{
					this.OnDateRetourPleinChanging(value);
					this.SendPropertyChanging();
					this._DateRetourPlein = value;
					this.SendPropertyChanged("DateRetourPlein");
					this.OnDateRetourPleinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUserRetourPlein", DbType="Int")]
		public System.Nullable<int> IdUserRetourPlein
		{
			get
			{
				return this._IdUserRetourPlein;
			}
			set
			{
				if ((this._IdUserRetourPlein != value))
				{
					this.OnIdUserRetourPleinChanging(value);
					this.SendPropertyChanging();
					this._IdUserRetourPlein = value;
					this.SendPropertyChanged("IdUserRetourPlein");
					this.OnIdUserRetourPleinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEscRetourPlein", DbType="Int")]
		public System.Nullable<int> IdEscRetourPlein
		{
			get
			{
				return this._IdEscRetourPlein;
			}
			set
			{
				if ((this._IdEscRetourPlein != value))
				{
					this.OnIdEscRetourPleinChanging(value);
					this.SendPropertyChanging();
					this._IdEscRetourPlein = value;
					this.SendPropertyChanged("IdEscRetourPlein");
					this.OnIdEscRetourPleinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdBooking", DbType="Int")]
		public System.Nullable<int> IdBooking
		{
			get
			{
				return this._IdBooking;
			}
			set
			{
				if ((this._IdBooking != value))
				{
					this.OnIdBookingChanging(value);
					this.SendPropertyChanging();
					this._IdBooking = value;
					this.SendPropertyChanged("IdBooking");
					this.OnIdBookingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdParcRetourPlein", DbType="Int")]
		public System.Nullable<int> IdParcRetourPlein
		{
			get
			{
				return this._IdParcRetourPlein;
			}
			set
			{
				if ((this._IdParcRetourPlein != value))
				{
					this.OnIdParcRetourPleinChanging(value);
					this.SendPropertyChanging();
					this._IdParcRetourPlein = value;
					this.SendPropertyChanged("IdParcRetourPlein");
					this.OnIdParcRetourPleinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateEmbarquement", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateEmbarquement
		{
			get
			{
				return this._DateEmbarquement;
			}
			set
			{
				if ((this._DateEmbarquement != value))
				{
					this.OnDateEmbarquementChanging(value);
					this.SendPropertyChanging();
					this._DateEmbarquement = value;
					this.SendPropertyChanged("DateEmbarquement");
					this.OnDateEmbarquementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUserEmbarquement", DbType="Int")]
		public System.Nullable<int> IdUserEmbarquement
		{
			get
			{
				return this._IdUserEmbarquement;
			}
			set
			{
				if ((this._IdUserEmbarquement != value))
				{
					this.OnIdUserEmbarquementChanging(value);
					this.SendPropertyChanging();
					this._IdUserEmbarquement = value;
					this.SendPropertyChanged("IdUserEmbarquement");
					this.OnIdUserEmbarquementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEscEmbarquement", DbType="Int")]
		public System.Nullable<int> IdEscEmbarquement
		{
			get
			{
				return this._IdEscEmbarquement;
			}
			set
			{
				if ((this._IdEscEmbarquement != value))
				{
					this.OnIdEscEmbarquementChanging(value);
					this.SendPropertyChanging();
					this._IdEscEmbarquement = value;
					this.SendPropertyChanged("IdEscEmbarquement");
					this.OnIdEscEmbarquementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdBLExport", DbType="Int")]
		public System.Nullable<int> IdCtrExport
		{
			get
			{
				return this._IdBLExport;
			}
			set
			{
				if ((this._IdBLExport != value))
				{
					this.OnIdCtrExportChanging(value);
					this.SendPropertyChanging();
					this._IdBLExport = value;
					this.SendPropertyChanged("IdCtrExport");
					this.OnIdCtrExportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EtatRetourVide", DbType="NVarChar(50)")]
		public string EtatRetourVide
		{
			get
			{
				return this._EtatRetourVide;
			}
			set
			{
				if ((this._EtatRetourVide != value))
				{
					this.OnEtatRetourVideChanging(value);
					this.SendPropertyChanging();
					this._EtatRetourVide = value;
					this.SendPropertyChanged("EtatRetourVide");
					this.OnEtatRetourVideChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reparation", DbType="NVarChar(1)")]
		public string Reparation
		{
			get
			{
				return this._Reparation;
			}
			set
			{
				if ((this._Reparation != value))
				{
					this.OnReparationChanging(value);
					this.SendPropertyChanging();
					this._Reparation = value;
					this.SendPropertyChanged("Reparation");
					this.OnReparationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nettoyage", DbType="NVarChar(1)")]
		public string Nettoyage
		{
			get
			{
				return this._Nettoyage;
			}
			set
			{
				if ((this._Nettoyage != value))
				{
					this.OnNettoyageChanging(value);
					this.SendPropertyChanging();
					this._Nettoyage = value;
					this.SendPropertyChanged("Nettoyage");
					this.OnNettoyageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lavage", DbType="NVarChar(1)")]
		public string Lavage
		{
			get
			{
				return this._Lavage;
			}
			set
			{
				if ((this._Lavage != value))
				{
					this.OnLavageChanging(value);
					this.SendPropertyChanging();
					this._Lavage = value;
					this.SendPropertyChanged("Lavage");
					this.OnLavageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Irreparable", DbType="NVarChar(1)")]
		public string Irreparable
		{
			get
			{
				return this._Irreparable;
			}
			set
			{
				if ((this._Irreparable != value))
				{
					this.OnIrreparableChanging(value);
					this.SendPropertyChanging();
					this._Irreparable = value;
					this.SendPropertyChanged("Irreparable");
					this.OnIrreparableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUserRetourArmateur", DbType="Int")]
		public System.Nullable<int> IdUserRetourArmateur
		{
			get
			{
				return this._IdUserRetourArmateur;
			}
			set
			{
				if ((this._IdUserRetourArmateur != value))
				{
					this.OnIdUserRetourArmateurChanging(value);
					this.SendPropertyChanging();
					this._IdUserRetourArmateur = value;
					this.SendPropertyChanged("IdUserRetourArmateur");
					this.OnIdUserRetourArmateurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateRetourArmateur", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateRetourArmateur
		{
			get
			{
				return this._DateRetourArmateur;
			}
			set
			{
				if ((this._DateRetourArmateur != value))
				{
					this.OnDateRetourArmateurChanging(value);
					this.SendPropertyChanging();
					this._DateRetourArmateur = value;
					this.SendPropertyChanged("DateRetourArmateur");
					this.OnDateRetourArmateurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDoublon", DbType="NVarChar(1)")]
		public string IsDoublon
		{
			get
			{
				return this._IsDoublon;
			}
			set
			{
				if ((this._IsDoublon != value))
				{
					this.OnIsDoublonChanging(value);
					this.SendPropertyChanging();
					this._IsDoublon = value;
					this.SendPropertyChanged("IsDoublon");
					this.OnIsDoublonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONTENEUR_TC_MOUVEMENT_TC", Storage="_MOUVEMENT_TC", ThisKey="IdTC", OtherKey="IdTC")]
		public EntitySet<MOUVEMENT_TC> MOUVEMENT_TC
		{
			get
			{
				return this._MOUVEMENT_TC;
			}
			set
			{
				this._MOUVEMENT_TC.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONTENEUR_CONTENEUR_TC", Storage="_CONTENEUR", ThisKey="IdCtr", OtherKey="IdCtr", IsForeignKey=true)]
		public CONTENEUR CONTENEUR
		{
			get
			{
				return this._CONTENEUR.Entity;
			}
			set
			{
				CONTENEUR previousValue = this._CONTENEUR.Entity;
				if (((previousValue != value) 
							|| (this._CONTENEUR.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CONTENEUR.Entity = null;
						previousValue.CONTENEUR_TC.Remove(this);
					}
					this._CONTENEUR.Entity = value;
					if ((value != null))
					{
						value.CONTENEUR_TC.Add(this);
						this._IdCtr = value.IdCtr;
					}
					else
					{
						this._IdCtr = default(Nullable<int>);
					}
					this.SendPropertyChanged("CONTENEUR");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DISPOSITION_CONTENEUR_CONTENEUR_TC", Storage="_DISPOSITION_CONTENEUR", ThisKey="IdMiseADisposition", OtherKey="IdDisposition", IsForeignKey=true)]
		public DISPOSITION_CONTENEUR DISPOSITION_CONTENEUR
		{
			get
			{
				return this._DISPOSITION_CONTENEUR.Entity;
			}
			set
			{
				DISPOSITION_CONTENEUR previousValue = this._DISPOSITION_CONTENEUR.Entity;
				if (((previousValue != value) 
							|| (this._DISPOSITION_CONTENEUR.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DISPOSITION_CONTENEUR.Entity = null;
						previousValue.CONTENEUR_TC.Remove(this);
					}
					this._DISPOSITION_CONTENEUR.Entity = value;
					if ((value != null))
					{
						value.CONTENEUR_TC.Add(this);
						this._IdMiseADisposition = value.IdDisposition;
					}
					else
					{
						this._IdMiseADisposition = default(Nullable<int>);
					}
					this.SendPropertyChanged("DISPOSITION_CONTENEUR");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PARC_CONTENEUR_TC", Storage="_PARC", ThisKey="IdParcParquing", OtherKey="IdParc", IsForeignKey=true)]
		public PARC PARC
		{
			get
			{
				return this._PARC.Entity;
			}
			set
			{
				PARC previousValue = this._PARC.Entity;
				if (((previousValue != value) 
							|| (this._PARC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PARC.Entity = null;
						previousValue.CONTENEUR_TC.Remove(this);
					}
					this._PARC.Entity = value;
					if ((value != null))
					{
						value.CONTENEUR_TC.Add(this);
						this._IdParcParquing = value.IdParc;
					}
					else
					{
						this._IdParcParquing = default(Nullable<int>);
					}
					this.SendPropertyChanged("PARC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MOUVEMENT_TC(MOUVEMENT_TC entity)
		{
			this.SendPropertyChanging();
			entity.CONTENEUR_TC = this;
		}
		
		private void detach_MOUVEMENT_TC(MOUVEMENT_TC entity)
		{
			this.SendPropertyChanging();
			entity.CONTENEUR_TC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PARC")]
	public partial class PARC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdParc;
		
		private string _NomParc;
		
		private string _Type;
		
		private EntitySet<EMPLACEMENT> _EMPLACEMENT;
		
		private EntitySet<UTILISATEUR> _UTILISATEUR;
		
		private EntitySet<MOUVEMENT_TC> _MOUVEMENT_TC;
		
		private EntitySet<CONTENEUR_TC> _CONTENEUR_TC;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdParcChanging(int value);
    partial void OnIdParcChanged();
    partial void OnNomParcChanging(string value);
    partial void OnNomParcChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    #endregion
		
		public PARC()
		{
			this._EMPLACEMENT = new EntitySet<EMPLACEMENT>(new Action<EMPLACEMENT>(this.attach_EMPLACEMENT), new Action<EMPLACEMENT>(this.detach_EMPLACEMENT));
			this._UTILISATEUR = new EntitySet<UTILISATEUR>(new Action<UTILISATEUR>(this.attach_UTILISATEUR), new Action<UTILISATEUR>(this.detach_UTILISATEUR));
			this._MOUVEMENT_TC = new EntitySet<MOUVEMENT_TC>(new Action<MOUVEMENT_TC>(this.attach_MOUVEMENT_TC), new Action<MOUVEMENT_TC>(this.detach_MOUVEMENT_TC));
			this._CONTENEUR_TC = new EntitySet<CONTENEUR_TC>(new Action<CONTENEUR_TC>(this.attach_CONTENEUR_TC), new Action<CONTENEUR_TC>(this.detach_CONTENEUR_TC));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdParc", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdParc
		{
			get
			{
				return this._IdParc;
			}
			set
			{
				if ((this._IdParc != value))
				{
					this.OnIdParcChanging(value);
					this.SendPropertyChanging();
					this._IdParc = value;
					this.SendPropertyChanged("IdParc");
					this.OnIdParcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NomParc", DbType="NVarChar(50)")]
		public string NomParc
		{
			get
			{
				return this._NomParc;
			}
			set
			{
				if ((this._NomParc != value))
				{
					this.OnNomParcChanging(value);
					this.SendPropertyChanging();
					this._NomParc = value;
					this.SendPropertyChanged("NomParc");
					this.OnNomParcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(1)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PARC_EMPLACEMENT", Storage="_EMPLACEMENT", ThisKey="IdParc", OtherKey="IdParc")]
		public EntitySet<EMPLACEMENT> EMPLACEMENT
		{
			get
			{
				return this._EMPLACEMENT;
			}
			set
			{
				this._EMPLACEMENT.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PARC_UTILISATEUR", Storage="_UTILISATEUR", ThisKey="IdParc", OtherKey="IdParc")]
		public EntitySet<UTILISATEUR> UTILISATEUR
		{
			get
			{
				return this._UTILISATEUR;
			}
			set
			{
				this._UTILISATEUR.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PARC_MOUVEMENT_TC", Storage="_MOUVEMENT_TC", ThisKey="IdParc", OtherKey="IdParc")]
		public EntitySet<MOUVEMENT_TC> MOUVEMENT_TC
		{
			get
			{
				return this._MOUVEMENT_TC;
			}
			set
			{
				this._MOUVEMENT_TC.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PARC_CONTENEUR_TC", Storage="_CONTENEUR_TC", ThisKey="IdParc", OtherKey="IdParcParquing")]
		public EntitySet<CONTENEUR_TC> CONTENEUR_TC
		{
			get
			{
				return this._CONTENEUR_TC;
			}
			set
			{
				this._CONTENEUR_TC.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EMPLACEMENT(EMPLACEMENT entity)
		{
			this.SendPropertyChanging();
			entity.PARC = this;
		}
		
		private void detach_EMPLACEMENT(EMPLACEMENT entity)
		{
			this.SendPropertyChanging();
			entity.PARC = null;
		}
		
		private void attach_UTILISATEUR(UTILISATEUR entity)
		{
			this.SendPropertyChanging();
			entity.PARC = this;
		}
		
		private void detach_UTILISATEUR(UTILISATEUR entity)
		{
			this.SendPropertyChanging();
			entity.PARC = null;
		}
		
		private void attach_MOUVEMENT_TC(MOUVEMENT_TC entity)
		{
			this.SendPropertyChanging();
			entity.PARC = this;
		}
		
		private void detach_MOUVEMENT_TC(MOUVEMENT_TC entity)
		{
			this.SendPropertyChanging();
			entity.PARC = null;
		}
		
		private void attach_CONTENEUR_TC(CONTENEUR_TC entity)
		{
			this.SendPropertyChanging();
			entity.PARC = this;
		}
		
		private void detach_CONTENEUR_TC(CONTENEUR_TC entity)
		{
			this.SendPropertyChanging();
			entity.PARC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DISPOSITION_CONTENEUR")]
	public partial class DISPOSITION_CONTENEUR : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdDisposition;
		
		private System.Nullable<int> _IdBooking;
		
		private System.Nullable<int> _NombreTC;
		
		private string _TypeCtr;
		
		private string _ContactTransitaire;
		
		private string _Empotage;
		
		private string _SortieVia;
		
		private string _TypeHabillage;
		
		private string _RefDisposition;
		
		private EntitySet<CONTENEUR_TC> _CONTENEUR_TC;
		
		private EntityRef<CONNAISSEMENT> _CONNAISSEMENT;
		
		private EntityRef<TYPE_CONTENEUR> _TYPE_CONTENEUR;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdDispositionChanging(int value);
    partial void OnIdDispositionChanged();
    partial void OnIdBookingChanging(System.Nullable<int> value);
    partial void OnIdBookingChanged();
    partial void OnNombreTCChanging(System.Nullable<int> value);
    partial void OnNombreTCChanged();
    partial void OnTypeCtrChanging(string value);
    partial void OnTypeCtrChanged();
    partial void OnContactTransitaireChanging(string value);
    partial void OnContactTransitaireChanged();
    partial void OnEmpotageChanging(string value);
    partial void OnEmpotageChanged();
    partial void OnSortieViaChanging(string value);
    partial void OnSortieViaChanged();
    partial void OnTypeHabillageChanging(string value);
    partial void OnTypeHabillageChanged();
    partial void OnRefDispositionChanging(string value);
    partial void OnRefDispositionChanged();
    #endregion
		
		public DISPOSITION_CONTENEUR()
		{
			this._CONTENEUR_TC = new EntitySet<CONTENEUR_TC>(new Action<CONTENEUR_TC>(this.attach_CONTENEUR_TC), new Action<CONTENEUR_TC>(this.detach_CONTENEUR_TC));
			this._CONNAISSEMENT = default(EntityRef<CONNAISSEMENT>);
			this._TYPE_CONTENEUR = default(EntityRef<TYPE_CONTENEUR>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDisposition", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdDisposition
		{
			get
			{
				return this._IdDisposition;
			}
			set
			{
				if ((this._IdDisposition != value))
				{
					this.OnIdDispositionChanging(value);
					this.SendPropertyChanging();
					this._IdDisposition = value;
					this.SendPropertyChanged("IdDisposition");
					this.OnIdDispositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdBooking", DbType="Int")]
		public System.Nullable<int> IdBooking
		{
			get
			{
				return this._IdBooking;
			}
			set
			{
				if ((this._IdBooking != value))
				{
					if (this._CONNAISSEMENT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdBookingChanging(value);
					this.SendPropertyChanging();
					this._IdBooking = value;
					this.SendPropertyChanged("IdBooking");
					this.OnIdBookingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NombreTC", DbType="Int")]
		public System.Nullable<int> NombreTC
		{
			get
			{
				return this._NombreTC;
			}
			set
			{
				if ((this._NombreTC != value))
				{
					this.OnNombreTCChanging(value);
					this.SendPropertyChanging();
					this._NombreTC = value;
					this.SendPropertyChanged("NombreTC");
					this.OnNombreTCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeCtr", DbType="NVarChar(20)")]
		public string TypeCtr
		{
			get
			{
				return this._TypeCtr;
			}
			set
			{
				if ((this._TypeCtr != value))
				{
					if (this._TYPE_CONTENEUR.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeCtrChanging(value);
					this.SendPropertyChanging();
					this._TypeCtr = value;
					this.SendPropertyChanged("TypeCtr");
					this.OnTypeCtrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactTransitaire", DbType="NVarChar(50)")]
		public string ContactTransitaire
		{
			get
			{
				return this._ContactTransitaire;
			}
			set
			{
				if ((this._ContactTransitaire != value))
				{
					this.OnContactTransitaireChanging(value);
					this.SendPropertyChanging();
					this._ContactTransitaire = value;
					this.SendPropertyChanged("ContactTransitaire");
					this.OnContactTransitaireChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Empotage", DbType="NVarChar(100)")]
		public string Empotage
		{
			get
			{
				return this._Empotage;
			}
			set
			{
				if ((this._Empotage != value))
				{
					this.OnEmpotageChanging(value);
					this.SendPropertyChanging();
					this._Empotage = value;
					this.SendPropertyChanged("Empotage");
					this.OnEmpotageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortieVia", DbType="NVarChar(50)")]
		public string SortieVia
		{
			get
			{
				return this._SortieVia;
			}
			set
			{
				if ((this._SortieVia != value))
				{
					this.OnSortieViaChanging(value);
					this.SendPropertyChanging();
					this._SortieVia = value;
					this.SendPropertyChanged("SortieVia");
					this.OnSortieViaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeHabillage", DbType="NVarChar(255)")]
		public string TypeHabillage
		{
			get
			{
				return this._TypeHabillage;
			}
			set
			{
				if ((this._TypeHabillage != value))
				{
					this.OnTypeHabillageChanging(value);
					this.SendPropertyChanging();
					this._TypeHabillage = value;
					this.SendPropertyChanged("TypeHabillage");
					this.OnTypeHabillageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefDisposition", DbType="NVarChar(20)")]
		public string RefDisposition
		{
			get
			{
				return this._RefDisposition;
			}
			set
			{
				if ((this._RefDisposition != value))
				{
					this.OnRefDispositionChanging(value);
					this.SendPropertyChanging();
					this._RefDisposition = value;
					this.SendPropertyChanged("RefDisposition");
					this.OnRefDispositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DISPOSITION_CONTENEUR_CONTENEUR_TC", Storage="_CONTENEUR_TC", ThisKey="IdDisposition", OtherKey="IdMiseADisposition")]
		public EntitySet<CONTENEUR_TC> CONTENEUR_TC
		{
			get
			{
				return this._CONTENEUR_TC;
			}
			set
			{
				this._CONTENEUR_TC.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONNAISSEMENT_DISPOSITION_CONTENEUR", Storage="_CONNAISSEMENT", ThisKey="IdBooking", OtherKey="IdBL", IsForeignKey=true)]
		public CONNAISSEMENT CONNAISSEMENT
		{
			get
			{
				return this._CONNAISSEMENT.Entity;
			}
			set
			{
				CONNAISSEMENT previousValue = this._CONNAISSEMENT.Entity;
				if (((previousValue != value) 
							|| (this._CONNAISSEMENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CONNAISSEMENT.Entity = null;
						previousValue.DISPOSITION_CONTENEUR.Remove(this);
					}
					this._CONNAISSEMENT.Entity = value;
					if ((value != null))
					{
						value.DISPOSITION_CONTENEUR.Add(this);
						this._IdBooking = value.IdBL;
					}
					else
					{
						this._IdBooking = default(Nullable<int>);
					}
					this.SendPropertyChanged("CONNAISSEMENT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TYPE_CONTENEUR_DISPOSITION_CONTENEUR", Storage="_TYPE_CONTENEUR", ThisKey="TypeCtr", OtherKey="CodeTypeCtr", IsForeignKey=true)]
		public TYPE_CONTENEUR TYPE_CONTENEUR
		{
			get
			{
				return this._TYPE_CONTENEUR.Entity;
			}
			set
			{
				TYPE_CONTENEUR previousValue = this._TYPE_CONTENEUR.Entity;
				if (((previousValue != value) 
							|| (this._TYPE_CONTENEUR.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TYPE_CONTENEUR.Entity = null;
						previousValue.DISPOSITION_CONTENEUR.Remove(this);
					}
					this._TYPE_CONTENEUR.Entity = value;
					if ((value != null))
					{
						value.DISPOSITION_CONTENEUR.Add(this);
						this._TypeCtr = value.CodeTypeCtr;
					}
					else
					{
						this._TypeCtr = default(string);
					}
					this.SendPropertyChanged("TYPE_CONTENEUR");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CONTENEUR_TC(CONTENEUR_TC entity)
		{
			this.SendPropertyChanging();
			entity.DISPOSITION_CONTENEUR = this;
		}
		
		private void detach_CONTENEUR_TC(CONTENEUR_TC entity)
		{
			this.SendPropertyChanging();
			entity.DISPOSITION_CONTENEUR = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.INTERCHANGE")]
	public partial class INTERCHANGE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdCtr;
		
		private int _IdTypeSinistre;
		
		private string _InfoIdentification;
		
		private string _InfoSortie;
		
		private string _InfoRetour;
		
		private string _InfoParquing;
		
		private string _InfoSortieVide;
		
		private string _InfoRetourPlein;
		
		private string _InfoEmbarquement;
		
		private string _InfoRetourArmateur;
		
		private string _InfoConstatContradictoire;
		
		private string _InfoRestitution;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdCtrChanging(int value);
    partial void OnIdCtrChanged();
    partial void OnIdTypeSinistreChanging(int value);
    partial void OnIdTypeSinistreChanged();
    partial void OnInfoIdentificationChanging(string value);
    partial void OnInfoIdentificationChanged();
    partial void OnInfoSortieChanging(string value);
    partial void OnInfoSortieChanged();
    partial void OnInfoRetourChanging(string value);
    partial void OnInfoRetourChanged();
    partial void OnInfoParquingChanging(string value);
    partial void OnInfoParquingChanged();
    partial void OnInfoSortieVideChanging(string value);
    partial void OnInfoSortieVideChanged();
    partial void OnInfoRetourPleinChanging(string value);
    partial void OnInfoRetourPleinChanged();
    partial void OnInfoEmbarquementChanging(string value);
    partial void OnInfoEmbarquementChanged();
    partial void OnInfoRetourArmateurChanging(string value);
    partial void OnInfoRetourArmateurChanged();
    partial void OnInfoConstatContradictoireChanging(string value);
    partial void OnInfoConstatContradictoireChanged();
    partial void OnInfoRestitutionChanging(string value);
    partial void OnInfoRestitutionChanged();
    #endregion
		
		public INTERCHANGE()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCtr", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdCtr
		{
			get
			{
				return this._IdCtr;
			}
			set
			{
				if ((this._IdCtr != value))
				{
					this.OnIdCtrChanging(value);
					this.SendPropertyChanging();
					this._IdCtr = value;
					this.SendPropertyChanged("IdCtr");
					this.OnIdCtrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTypeSinistre", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdTypeSinistre
		{
			get
			{
				return this._IdTypeSinistre;
			}
			set
			{
				if ((this._IdTypeSinistre != value))
				{
					this.OnIdTypeSinistreChanging(value);
					this.SendPropertyChanging();
					this._IdTypeSinistre = value;
					this.SendPropertyChanged("IdTypeSinistre");
					this.OnIdTypeSinistreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InfoIdentification", DbType="NVarChar(1)")]
		public string InfoIdentification
		{
			get
			{
				return this._InfoIdentification;
			}
			set
			{
				if ((this._InfoIdentification != value))
				{
					this.OnInfoIdentificationChanging(value);
					this.SendPropertyChanging();
					this._InfoIdentification = value;
					this.SendPropertyChanged("InfoIdentification");
					this.OnInfoIdentificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InfoSortie", DbType="NVarChar(1)")]
		public string InfoSortie
		{
			get
			{
				return this._InfoSortie;
			}
			set
			{
				if ((this._InfoSortie != value))
				{
					this.OnInfoSortieChanging(value);
					this.SendPropertyChanging();
					this._InfoSortie = value;
					this.SendPropertyChanged("InfoSortie");
					this.OnInfoSortieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InfoRetour", DbType="NVarChar(1)")]
		public string InfoRetour
		{
			get
			{
				return this._InfoRetour;
			}
			set
			{
				if ((this._InfoRetour != value))
				{
					this.OnInfoRetourChanging(value);
					this.SendPropertyChanging();
					this._InfoRetour = value;
					this.SendPropertyChanged("InfoRetour");
					this.OnInfoRetourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InfoParquing", DbType="NVarChar(1)")]
		public string InfoParquing
		{
			get
			{
				return this._InfoParquing;
			}
			set
			{
				if ((this._InfoParquing != value))
				{
					this.OnInfoParquingChanging(value);
					this.SendPropertyChanging();
					this._InfoParquing = value;
					this.SendPropertyChanged("InfoParquing");
					this.OnInfoParquingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InfoSortieVide", DbType="NVarChar(1)")]
		public string InfoSortieVide
		{
			get
			{
				return this._InfoSortieVide;
			}
			set
			{
				if ((this._InfoSortieVide != value))
				{
					this.OnInfoSortieVideChanging(value);
					this.SendPropertyChanging();
					this._InfoSortieVide = value;
					this.SendPropertyChanged("InfoSortieVide");
					this.OnInfoSortieVideChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InfoRetourPlein", DbType="NVarChar(1)")]
		public string InfoRetourPlein
		{
			get
			{
				return this._InfoRetourPlein;
			}
			set
			{
				if ((this._InfoRetourPlein != value))
				{
					this.OnInfoRetourPleinChanging(value);
					this.SendPropertyChanging();
					this._InfoRetourPlein = value;
					this.SendPropertyChanged("InfoRetourPlein");
					this.OnInfoRetourPleinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InfoEmbarquement", DbType="NVarChar(1)")]
		public string InfoEmbarquement
		{
			get
			{
				return this._InfoEmbarquement;
			}
			set
			{
				if ((this._InfoEmbarquement != value))
				{
					this.OnInfoEmbarquementChanging(value);
					this.SendPropertyChanging();
					this._InfoEmbarquement = value;
					this.SendPropertyChanged("InfoEmbarquement");
					this.OnInfoEmbarquementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InfoRetourArmateur", DbType="NVarChar(1)")]
		public string InfoRetourArmateur
		{
			get
			{
				return this._InfoRetourArmateur;
			}
			set
			{
				if ((this._InfoRetourArmateur != value))
				{
					this.OnInfoRetourArmateurChanging(value);
					this.SendPropertyChanging();
					this._InfoRetourArmateur = value;
					this.SendPropertyChanged("InfoRetourArmateur");
					this.OnInfoRetourArmateurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InfoConstatContradictoire", DbType="NVarChar(1)")]
		public string InfoConstatContradictoire
		{
			get
			{
				return this._InfoConstatContradictoire;
			}
			set
			{
				if ((this._InfoConstatContradictoire != value))
				{
					this.OnInfoConstatContradictoireChanging(value);
					this.SendPropertyChanging();
					this._InfoConstatContradictoire = value;
					this.SendPropertyChanged("InfoConstatContradictoire");
					this.OnInfoConstatContradictoireChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InfoRestitution", DbType="NVarChar(1)")]
		public string InfoRestitution
		{
			get
			{
				return this._InfoRestitution;
			}
			set
			{
				if ((this._InfoRestitution != value))
				{
					this.OnInfoRestitutionChanging(value);
					this.SendPropertyChanging();
					this._InfoRestitution = value;
					this.SendPropertyChanged("InfoRestitution");
					this.OnInfoRestitutionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FACTURE_SOCOMAR")]
	public partial class FACTURE_SOCOMAR : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdFSoc;
		
		private System.Nullable<System.DateTime> _DCFSoc;
		
		private string _AIFSoc;
		
		private System.Nullable<int> _MHT;
		
		private System.Nullable<int> _MTVA;
		
		private System.Nullable<int> _MTTC;
		
		private System.Nullable<int> _IdEsc;
		
		private System.Nullable<int> _IdU;
		
		private System.Nullable<int> _IdDocSAP;
		
		private string _Statut;
		
		private string _FType;
		
		private EntitySet<LIGNE_FACTURE_SOCOMAR> _LIGNE_FACTURE_SOCOMAR;
		
		private EntityRef<ESCALE> _ESCALE;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdFSocChanging(int value);
    partial void OnIdFSocChanged();
    partial void OnDCFSocChanging(System.Nullable<System.DateTime> value);
    partial void OnDCFSocChanged();
    partial void OnAIFSocChanging(string value);
    partial void OnAIFSocChanged();
    partial void OnMHTChanging(System.Nullable<int> value);
    partial void OnMHTChanged();
    partial void OnMTVAChanging(System.Nullable<int> value);
    partial void OnMTVAChanged();
    partial void OnMTTCChanging(System.Nullable<int> value);
    partial void OnMTTCChanged();
    partial void OnIdEscChanging(System.Nullable<int> value);
    partial void OnIdEscChanged();
    partial void OnIdUChanging(System.Nullable<int> value);
    partial void OnIdUChanged();
    partial void OnIdDocSAPChanging(System.Nullable<int> value);
    partial void OnIdDocSAPChanged();
    partial void OnStatutChanging(string value);
    partial void OnStatutChanged();
    partial void OnFTypeChanging(string value);
    partial void OnFTypeChanged();
    #endregion
		
		public FACTURE_SOCOMAR()
		{
			this._LIGNE_FACTURE_SOCOMAR = new EntitySet<LIGNE_FACTURE_SOCOMAR>(new Action<LIGNE_FACTURE_SOCOMAR>(this.attach_LIGNE_FACTURE_SOCOMAR), new Action<LIGNE_FACTURE_SOCOMAR>(this.detach_LIGNE_FACTURE_SOCOMAR));
			this._ESCALE = default(EntityRef<ESCALE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFSoc", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdFSoc
		{
			get
			{
				return this._IdFSoc;
			}
			set
			{
				if ((this._IdFSoc != value))
				{
					this.OnIdFSocChanging(value);
					this.SendPropertyChanging();
					this._IdFSoc = value;
					this.SendPropertyChanged("IdFSoc");
					this.OnIdFSocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DCFSoc", DbType="DateTime")]
		public System.Nullable<System.DateTime> DCFSoc
		{
			get
			{
				return this._DCFSoc;
			}
			set
			{
				if ((this._DCFSoc != value))
				{
					this.OnDCFSocChanging(value);
					this.SendPropertyChanging();
					this._DCFSoc = value;
					this.SendPropertyChanged("DCFSoc");
					this.OnDCFSocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AIFSoc", DbType="NVarChar(255)")]
		public string AIFSoc
		{
			get
			{
				return this._AIFSoc;
			}
			set
			{
				if ((this._AIFSoc != value))
				{
					this.OnAIFSocChanging(value);
					this.SendPropertyChanging();
					this._AIFSoc = value;
					this.SendPropertyChanged("AIFSoc");
					this.OnAIFSocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MHT", DbType="Int")]
		public System.Nullable<int> MHT
		{
			get
			{
				return this._MHT;
			}
			set
			{
				if ((this._MHT != value))
				{
					this.OnMHTChanging(value);
					this.SendPropertyChanging();
					this._MHT = value;
					this.SendPropertyChanged("MHT");
					this.OnMHTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MTVA", DbType="Int")]
		public System.Nullable<int> MTVA
		{
			get
			{
				return this._MTVA;
			}
			set
			{
				if ((this._MTVA != value))
				{
					this.OnMTVAChanging(value);
					this.SendPropertyChanging();
					this._MTVA = value;
					this.SendPropertyChanged("MTVA");
					this.OnMTVAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MTTC", DbType="Int")]
		public System.Nullable<int> MTTC
		{
			get
			{
				return this._MTTC;
			}
			set
			{
				if ((this._MTTC != value))
				{
					this.OnMTTCChanging(value);
					this.SendPropertyChanging();
					this._MTTC = value;
					this.SendPropertyChanged("MTTC");
					this.OnMTTCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEsc", DbType="Int")]
		public System.Nullable<int> IdEsc
		{
			get
			{
				return this._IdEsc;
			}
			set
			{
				if ((this._IdEsc != value))
				{
					if (this._ESCALE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdEscChanging(value);
					this.SendPropertyChanging();
					this._IdEsc = value;
					this.SendPropertyChanged("IdEsc");
					this.OnIdEscChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdU", DbType="Int")]
		public System.Nullable<int> IdU
		{
			get
			{
				return this._IdU;
			}
			set
			{
				if ((this._IdU != value))
				{
					this.OnIdUChanging(value);
					this.SendPropertyChanging();
					this._IdU = value;
					this.SendPropertyChanged("IdU");
					this.OnIdUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDocSAP", DbType="Int")]
		public System.Nullable<int> IdDocSAP
		{
			get
			{
				return this._IdDocSAP;
			}
			set
			{
				if ((this._IdDocSAP != value))
				{
					this.OnIdDocSAPChanging(value);
					this.SendPropertyChanging();
					this._IdDocSAP = value;
					this.SendPropertyChanged("IdDocSAP");
					this.OnIdDocSAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Statut", DbType="Varchar(10)")]
		public string Statut
		{
			get
			{
				return this._Statut;
			}
			set
			{
				if ((this._Statut != value))
				{
					this.OnStatutChanging(value);
					this.SendPropertyChanging();
					this._Statut = value;
					this.SendPropertyChanged("Statut");
					this.OnStatutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FType", DbType="varchar(10)")]
		public string FType
		{
			get
			{
				return this._FType;
			}
			set
			{
				if ((this._FType != value))
				{
					this.OnFTypeChanging(value);
					this.SendPropertyChanging();
					this._FType = value;
					this.SendPropertyChanged("FType");
					this.OnFTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FACTURE_SOCOMAR_LIGNE_FACTURE_SOCOMAR", Storage="_LIGNE_FACTURE_SOCOMAR", ThisKey="IdFSoc", OtherKey="IdFSoc")]
		public EntitySet<LIGNE_FACTURE_SOCOMAR> LIGNE_FACTURE_SOCOMAR
		{
			get
			{
				return this._LIGNE_FACTURE_SOCOMAR;
			}
			set
			{
				this._LIGNE_FACTURE_SOCOMAR.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ESCALE_FACTURE_SOCOMAR", Storage="_ESCALE", ThisKey="IdEsc", OtherKey="IdEsc", IsForeignKey=true)]
		public ESCALE ESCALE
		{
			get
			{
				return this._ESCALE.Entity;
			}
			set
			{
				ESCALE previousValue = this._ESCALE.Entity;
				if (((previousValue != value) 
							|| (this._ESCALE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ESCALE.Entity = null;
						previousValue.FACTURE_SOCOMAR.Remove(this);
					}
					this._ESCALE.Entity = value;
					if ((value != null))
					{
						value.FACTURE_SOCOMAR.Add(this);
						this._IdEsc = value.IdEsc;
					}
					else
					{
						this._IdEsc = default(Nullable<int>);
					}
					this.SendPropertyChanged("ESCALE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LIGNE_FACTURE_SOCOMAR(LIGNE_FACTURE_SOCOMAR entity)
		{
			this.SendPropertyChanging();
			entity.FACTURE_SOCOMAR = this;
		}
		
		private void detach_LIGNE_FACTURE_SOCOMAR(LIGNE_FACTURE_SOCOMAR entity)
		{
			this.SendPropertyChanging();
			entity.FACTURE_SOCOMAR = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LIGNE_FACTURE_SOCOMAR")]
	public partial class LIGNE_FACTURE_SOCOMAR : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdFSoc;
		
		private int _IdJEF;
		
		private string _Statut;
		
		private EntityRef<FACTURE_SOCOMAR> _FACTURE_SOCOMAR;
		
		private EntityRef<ELEMENT_FACTURATION> _ELEMENT_FACTURATION;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdFSocChanging(int value);
    partial void OnIdFSocChanged();
    partial void OnIdJEFChanging(int value);
    partial void OnIdJEFChanged();
    partial void OnStatutChanging(string value);
    partial void OnStatutChanged();
    #endregion
		
		public LIGNE_FACTURE_SOCOMAR()
		{
			this._FACTURE_SOCOMAR = default(EntityRef<FACTURE_SOCOMAR>);
			this._ELEMENT_FACTURATION = default(EntityRef<ELEMENT_FACTURATION>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFSoc", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdFSoc
		{
			get
			{
				return this._IdFSoc;
			}
			set
			{
				if ((this._IdFSoc != value))
				{
					if (this._FACTURE_SOCOMAR.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdFSocChanging(value);
					this.SendPropertyChanging();
					this._IdFSoc = value;
					this.SendPropertyChanged("IdFSoc");
					this.OnIdFSocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdJEF", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdJEF
		{
			get
			{
				return this._IdJEF;
			}
			set
			{
				if ((this._IdJEF != value))
				{
					if (this._ELEMENT_FACTURATION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdJEFChanging(value);
					this.SendPropertyChanging();
					this._IdJEF = value;
					this.SendPropertyChanged("IdJEF");
					this.OnIdJEFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Statut", DbType="NVarChar(1)")]
		public string Statut
		{
			get
			{
				return this._Statut;
			}
			set
			{
				if ((this._Statut != value))
				{
					this.OnStatutChanging(value);
					this.SendPropertyChanging();
					this._Statut = value;
					this.SendPropertyChanged("Statut");
					this.OnStatutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FACTURE_SOCOMAR_LIGNE_FACTURE_SOCOMAR", Storage="_FACTURE_SOCOMAR", ThisKey="IdFSoc", OtherKey="IdFSoc", IsForeignKey=true)]
		public FACTURE_SOCOMAR FACTURE_SOCOMAR
		{
			get
			{
				return this._FACTURE_SOCOMAR.Entity;
			}
			set
			{
				FACTURE_SOCOMAR previousValue = this._FACTURE_SOCOMAR.Entity;
				if (((previousValue != value) 
							|| (this._FACTURE_SOCOMAR.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FACTURE_SOCOMAR.Entity = null;
						previousValue.LIGNE_FACTURE_SOCOMAR.Remove(this);
					}
					this._FACTURE_SOCOMAR.Entity = value;
					if ((value != null))
					{
						value.LIGNE_FACTURE_SOCOMAR.Add(this);
						this._IdFSoc = value.IdFSoc;
					}
					else
					{
						this._IdFSoc = default(int);
					}
					this.SendPropertyChanged("FACTURE_SOCOMAR");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ELEMENT_FACTURATION_LIGNE_FACTURE_SOCOMAR", Storage="_ELEMENT_FACTURATION", ThisKey="IdJEF", OtherKey="IdJEF", IsForeignKey=true)]
		public ELEMENT_FACTURATION ELEMENT_FACTURATION
		{
			get
			{
				return this._ELEMENT_FACTURATION.Entity;
			}
			set
			{
				ELEMENT_FACTURATION previousValue = this._ELEMENT_FACTURATION.Entity;
				if (((previousValue != value) 
							|| (this._ELEMENT_FACTURATION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ELEMENT_FACTURATION.Entity = null;
						previousValue.LIGNE_FACTURE_SOCOMAR.Remove(this);
					}
					this._ELEMENT_FACTURATION.Entity = value;
					if ((value != null))
					{
						value.LIGNE_FACTURE_SOCOMAR.Add(this);
						this._IdJEF = value.IdJEF;
					}
					else
					{
						this._IdJEF = default(int);
					}
					this.SendPropertyChanged("ELEMENT_FACTURATION");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.REQUESTS")]
	public partial class REQUESTS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDAUTO;
		
		private System.DateTime _DATEREQUEST;
		
		private string _TYPE;
		
		private bool _ISTREATED;
		
		private string _DIRECTION;
		
		private EntitySet<REQUESTS_DETAILS> _REQUESTS_DETAILS;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDAUTOChanging(int value);
    partial void OnIDAUTOChanged();
    partial void OnDATEREQUESTChanging(System.DateTime value);
    partial void OnDATEREQUESTChanged();
    partial void OnTYPEChanging(string value);
    partial void OnTYPEChanged();
    partial void OnISTREATEDChanging(bool value);
    partial void OnISTREATEDChanged();
    partial void OnDIRECTIONChanging(string value);
    partial void OnDIRECTIONChanged();
    #endregion
		
		public REQUESTS()
		{
			this._REQUESTS_DETAILS = new EntitySet<REQUESTS_DETAILS>(new Action<REQUESTS_DETAILS>(this.attach_REQUESTS_DETAILS), new Action<REQUESTS_DETAILS>(this.detach_REQUESTS_DETAILS));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDAUTO", DbType="Int NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDAUTO
		{
			get
			{
				return this._IDAUTO;
			}
			set
			{
				if ((this._IDAUTO != value))
				{
					this.OnIDAUTOChanging(value);
					this.SendPropertyChanging();
					this._IDAUTO = value;
					this.SendPropertyChanged("IDAUTO");
					this.OnIDAUTOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATEREQUEST", DbType="DateTime")]
		public System.DateTime DATEREQUEST
		{
			get
			{
				return this._DATEREQUEST;
			}
			set
			{
				if ((this._DATEREQUEST != value))
				{
					this.OnDATEREQUESTChanging(value);
					this.SendPropertyChanging();
					this._DATEREQUEST = value;
					this.SendPropertyChanged("DATEREQUEST");
					this.OnDATEREQUESTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TYPE", DbType="nvarchar(20)", CanBeNull=false)]
		public string TYPE
		{
			get
			{
				return this._TYPE;
			}
			set
			{
				if ((this._TYPE != value))
				{
					this.OnTYPEChanging(value);
					this.SendPropertyChanging();
					this._TYPE = value;
					this.SendPropertyChanged("TYPE");
					this.OnTYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISTREATED", DbType="bit")]
		public bool ISTREATED
		{
			get
			{
				return this._ISTREATED;
			}
			set
			{
				if ((this._ISTREATED != value))
				{
					this.OnISTREATEDChanging(value);
					this.SendPropertyChanging();
					this._ISTREATED = value;
					this.SendPropertyChanged("ISTREATED");
					this.OnISTREATEDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIRECTION", DbType="nvarchar(10)")]
		public string DIRECTION
		{
			get
			{
				return this._DIRECTION;
			}
			set
			{
				if ((this._DIRECTION != value))
				{
					this.OnDIRECTIONChanging(value);
					this.SendPropertyChanging();
					this._DIRECTION = value;
					this.SendPropertyChanged("DIRECTION");
					this.OnDIRECTIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="REQUESTS_REQUESTS_DETAILS", Storage="_REQUESTS_DETAILS", ThisKey="IDAUTO", OtherKey="IDREQUEST")]
		public EntitySet<REQUESTS_DETAILS> REQUESTS_DETAILS
		{
			get
			{
				return this._REQUESTS_DETAILS;
			}
			set
			{
				this._REQUESTS_DETAILS.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_REQUESTS_DETAILS(REQUESTS_DETAILS entity)
		{
			this.SendPropertyChanging();
			entity.REQUESTS = this;
		}
		
		private void detach_REQUESTS_DETAILS(REQUESTS_DETAILS entity)
		{
			this.SendPropertyChanging();
			entity.REQUESTS = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.REQUESTS_DETAILS")]
	public partial class REQUESTS_DETAILS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDAUTO;
		
		private int _IDREQUEST;
		
		private string _ESC_NUM_MANIF;
		
		private string _ESC_NUM_VOY;
		
		private System.Nullable<System.DateTime> _ESC_DATEARR_REEL;
		
		private System.Nullable<System.DateTime> _ESC_DATEDEP_REEL;
		
		private string _ESC_ARMATEUR_CODE;
		
		private string _ESC_ACONIER_CODE;
		
		private string _ESC_CODE_NAVIRE;
		
		private System.Nullable<int> _ESC_NBRE_VHL;
		
		private string _ESC_PORT_EMBA;
		
		private string _VHL_CHASSIS;
		
		private string _VHL_DESC;
		
		private System.Nullable<double> _VHL_VOL;
		
		private System.Nullable<float> _VHL_LONGUEUR;
		
		private System.Nullable<float> _VHL_LARG;
		
		private System.Nullable<float> _VHL_HAUT;
		
		private System.Nullable<int> _VHL_POIDS;
		
		private string _VHL_PORTE;
		
		private string _VHL_ATELE;
		
		private string _VHL_NUM_BL;
		
		private string _VHL_NUM_ADD;
		
		private string _VHL_ENLEVEUR_NOM;
		
		private string _VHL_ENLEVEUR_CNI;
		
		private string _VHL_ENLEVEUR_TEL;
		
		private string _VHL_NUM_DEC;
		
		private string _VHL_NUM_QUIT;
		
		private string _VHL_STATUT;
		
		private string _VHL_EMPLACEMENT;
		
		private string _VHL_TYPE;
		
		private System.Nullable<System.DateTime> _VHL_DAT_S;
		
		private System.Nullable<System.DateTime> _DATE_ENTREE;
		
		private string _VHL_CONSIGNEE;
		
		private System.Nullable<System.DateTime> _DATE_REQUEST;
		
		private System.Nullable<System.DateTime> _ESC_DATEDEP_PREV;
		
		private string _ARMATEUR_NOM;
		
		private string _ACCONIER_NOM;
		
		private string _NAVIRE_NOM;
		
		private string _VHL_BS_REF;
		
		private System.Nullable<System.DateTime> _VHL_BS_DATE;
		
		private EntityRef<REQUESTS> _REQUESTS;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDAUTOChanging(int value);
    partial void OnIDAUTOChanged();
    partial void OnIDREQUESTChanging(int value);
    partial void OnIDREQUESTChanged();
    partial void OnESC_NUM_MANIFChanging(string value);
    partial void OnESC_NUM_MANIFChanged();
    partial void OnESC_NUM_VOYChanging(string value);
    partial void OnESC_NUM_VOYChanged();
    partial void OnESC_DATEARR_REELChanging(System.Nullable<System.DateTime> value);
    partial void OnESC_DATEARR_REELChanged();
    partial void OnESC_DATEDEP_REELChanging(System.Nullable<System.DateTime> value);
    partial void OnESC_DATEDEP_REELChanged();
    partial void OnESC_ARMATEUR_CODEChanging(string value);
    partial void OnESC_ARMATEUR_CODEChanged();
    partial void OnESC_ACONIER_CODEChanging(string value);
    partial void OnESC_ACONIER_CODEChanged();
    partial void OnESC_CODE_NAVIREChanging(string value);
    partial void OnESC_CODE_NAVIREChanged();
    partial void OnESC_NBRE_VHLChanging(System.Nullable<int> value);
    partial void OnESC_NBRE_VHLChanged();
    partial void OnESC_PORT_EMBAChanging(string value);
    partial void OnESC_PORT_EMBAChanged();
    partial void OnVHL_CHASSISChanging(string value);
    partial void OnVHL_CHASSISChanged();
    partial void OnVHL_DESCChanging(string value);
    partial void OnVHL_DESCChanged();
    partial void OnVHL_VOLChanging(System.Nullable<double> value);
    partial void OnVHL_VOLChanged();
    partial void OnVHL_LONGUEURChanging(System.Nullable<float> value);
    partial void OnVHL_LONGUEURChanged();
    partial void OnVHL_LARGChanging(System.Nullable<float> value);
    partial void OnVHL_LARGChanged();
    partial void OnVHL_HAUTChanging(System.Nullable<float> value);
    partial void OnVHL_HAUTChanged();
    partial void OnVHL_POIDSChanging(System.Nullable<int> value);
    partial void OnVHL_POIDSChanged();
    partial void OnVHL_PORTEChanging(string value);
    partial void OnVHL_PORTEChanged();
    partial void OnVHL_ATELEChanging(string value);
    partial void OnVHL_ATELEChanged();
    partial void OnVHL_NUM_BLChanging(string value);
    partial void OnVHL_NUM_BLChanged();
    partial void OnVHL_NUM_ADDChanging(string value);
    partial void OnVHL_NUM_ADDChanged();
    partial void OnVHL_ENLEVEUR_NOMChanging(string value);
    partial void OnVHL_ENLEVEUR_NOMChanged();
    partial void OnVHL_ENLEVEUR_CNIChanging(string value);
    partial void OnVHL_ENLEVEUR_CNIChanged();
    partial void OnVHL_ENLEVEUR_TELChanging(string value);
    partial void OnVHL_ENLEVEUR_TELChanged();
    partial void OnVHL_NUM_DECChanging(string value);
    partial void OnVHL_NUM_DECChanged();
    partial void OnVHL_NUM_QUITChanging(string value);
    partial void OnVHL_NUM_QUITChanged();
    partial void OnVHL_STATUTChanging(string value);
    partial void OnVHL_STATUTChanged();
    partial void OnVHL_EMPLACEMENTChanging(string value);
    partial void OnVHL_EMPLACEMENTChanged();
    partial void OnVHL_TYPEChanging(string value);
    partial void OnVHL_TYPEChanged();
    partial void OnVHL_DAT_SChanging(System.Nullable<System.DateTime> value);
    partial void OnVHL_DAT_SChanged();
    partial void OnDATE_ENTREEChanging(System.Nullable<System.DateTime> value);
    partial void OnDATE_ENTREEChanged();
    partial void OnVHL_CONSIGNEEChanging(string value);
    partial void OnVHL_CONSIGNEEChanged();
    partial void OnDATE_REQUESTChanging(System.Nullable<System.DateTime> value);
    partial void OnDATE_REQUESTChanged();
    partial void OnESC_DATEDEP_PREVChanging(System.Nullable<System.DateTime> value);
    partial void OnESC_DATEDEP_PREVChanged();
    partial void OnARMATEUR_NOMChanging(string value);
    partial void OnARMATEUR_NOMChanged();
    partial void OnACCONIER_NOMChanging(string value);
    partial void OnACCONIER_NOMChanged();
    partial void OnNAVIRE_NOMChanging(string value);
    partial void OnNAVIRE_NOMChanged();
    partial void OnVHL_BS_REFChanging(string value);
    partial void OnVHL_BS_REFChanged();
    partial void OnVHL_BS_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnVHL_BS_DATEChanged();
    #endregion
		
		public REQUESTS_DETAILS()
		{
			this._REQUESTS = default(EntityRef<REQUESTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDAUTO", DbType="Int NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDAUTO
		{
			get
			{
				return this._IDAUTO;
			}
			set
			{
				if ((this._IDAUTO != value))
				{
					this.OnIDAUTOChanging(value);
					this.SendPropertyChanging();
					this._IDAUTO = value;
					this.SendPropertyChanged("IDAUTO");
					this.OnIDAUTOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDREQUEST", DbType="Int Not NULL")]
		public int IDREQUEST
		{
			get
			{
				return this._IDREQUEST;
			}
			set
			{
				if ((this._IDREQUEST != value))
				{
					if (this._REQUESTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDREQUESTChanging(value);
					this.SendPropertyChanging();
					this._IDREQUEST = value;
					this.SendPropertyChanged("IDREQUEST");
					this.OnIDREQUESTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ESC_NUM_MANIF", DbType="nvarchar(10)")]
		public string ESC_NUM_MANIF
		{
			get
			{
				return this._ESC_NUM_MANIF;
			}
			set
			{
				if ((this._ESC_NUM_MANIF != value))
				{
					this.OnESC_NUM_MANIFChanging(value);
					this.SendPropertyChanging();
					this._ESC_NUM_MANIF = value;
					this.SendPropertyChanged("ESC_NUM_MANIF");
					this.OnESC_NUM_MANIFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ESC_NUM_VOY", DbType="nvarchar(10)")]
		public string ESC_NUM_VOY
		{
			get
			{
				return this._ESC_NUM_VOY;
			}
			set
			{
				if ((this._ESC_NUM_VOY != value))
				{
					this.OnESC_NUM_VOYChanging(value);
					this.SendPropertyChanging();
					this._ESC_NUM_VOY = value;
					this.SendPropertyChanged("ESC_NUM_VOY");
					this.OnESC_NUM_VOYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ESC_DATEARR_REEL", DbType="DateTime")]
		public System.Nullable<System.DateTime> ESC_DATEARR_REEL
		{
			get
			{
				return this._ESC_DATEARR_REEL;
			}
			set
			{
				if ((this._ESC_DATEARR_REEL != value))
				{
					this.OnESC_DATEARR_REELChanging(value);
					this.SendPropertyChanging();
					this._ESC_DATEARR_REEL = value;
					this.SendPropertyChanged("ESC_DATEARR_REEL");
					this.OnESC_DATEARR_REELChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ESC_DATEDEP_REEL", DbType="DateTime")]
		public System.Nullable<System.DateTime> ESC_DATEDEP_REEL
		{
			get
			{
				return this._ESC_DATEDEP_REEL;
			}
			set
			{
				if ((this._ESC_DATEDEP_REEL != value))
				{
					this.OnESC_DATEDEP_REELChanging(value);
					this.SendPropertyChanging();
					this._ESC_DATEDEP_REEL = value;
					this.SendPropertyChanged("ESC_DATEDEP_REEL");
					this.OnESC_DATEDEP_REELChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ESC_ARMATEUR_CODE", DbType="nvarchar(10)")]
		public string ESC_ARMATEUR_CODE
		{
			get
			{
				return this._ESC_ARMATEUR_CODE;
			}
			set
			{
				if ((this._ESC_ARMATEUR_CODE != value))
				{
					this.OnESC_ARMATEUR_CODEChanging(value);
					this.SendPropertyChanging();
					this._ESC_ARMATEUR_CODE = value;
					this.SendPropertyChanged("ESC_ARMATEUR_CODE");
					this.OnESC_ARMATEUR_CODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ESC_ACONIER_CODE", DbType="nvarchar(10)")]
		public string ESC_ACONIER_CODE
		{
			get
			{
				return this._ESC_ACONIER_CODE;
			}
			set
			{
				if ((this._ESC_ACONIER_CODE != value))
				{
					this.OnESC_ACONIER_CODEChanging(value);
					this.SendPropertyChanging();
					this._ESC_ACONIER_CODE = value;
					this.SendPropertyChanged("ESC_ACONIER_CODE");
					this.OnESC_ACONIER_CODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ESC_CODE_NAVIRE", DbType="nvarchar(10)")]
		public string ESC_CODE_NAVIRE
		{
			get
			{
				return this._ESC_CODE_NAVIRE;
			}
			set
			{
				if ((this._ESC_CODE_NAVIRE != value))
				{
					this.OnESC_CODE_NAVIREChanging(value);
					this.SendPropertyChanging();
					this._ESC_CODE_NAVIRE = value;
					this.SendPropertyChanged("ESC_CODE_NAVIRE");
					this.OnESC_CODE_NAVIREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ESC_NBRE_VHL", DbType="Int")]
		public System.Nullable<int> ESC_NBRE_VHL
		{
			get
			{
				return this._ESC_NBRE_VHL;
			}
			set
			{
				if ((this._ESC_NBRE_VHL != value))
				{
					this.OnESC_NBRE_VHLChanging(value);
					this.SendPropertyChanging();
					this._ESC_NBRE_VHL = value;
					this.SendPropertyChanged("ESC_NBRE_VHL");
					this.OnESC_NBRE_VHLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ESC_PORT_EMBA", DbType="nvarchar(10)")]
		public string ESC_PORT_EMBA
		{
			get
			{
				return this._ESC_PORT_EMBA;
			}
			set
			{
				if ((this._ESC_PORT_EMBA != value))
				{
					this.OnESC_PORT_EMBAChanging(value);
					this.SendPropertyChanging();
					this._ESC_PORT_EMBA = value;
					this.SendPropertyChanged("ESC_PORT_EMBA");
					this.OnESC_PORT_EMBAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VHL_CHASSIS", DbType="nvarchar(20)")]
		public string VHL_CHASSIS
		{
			get
			{
				return this._VHL_CHASSIS;
			}
			set
			{
				if ((this._VHL_CHASSIS != value))
				{
					this.OnVHL_CHASSISChanging(value);
					this.SendPropertyChanging();
					this._VHL_CHASSIS = value;
					this.SendPropertyChanged("VHL_CHASSIS");
					this.OnVHL_CHASSISChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VHL_DESC", DbType="nvarchar(255)")]
		public string VHL_DESC
		{
			get
			{
				return this._VHL_DESC;
			}
			set
			{
				if ((this._VHL_DESC != value))
				{
					this.OnVHL_DESCChanging(value);
					this.SendPropertyChanging();
					this._VHL_DESC = value;
					this.SendPropertyChanged("VHL_DESC");
					this.OnVHL_DESCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VHL_VOL", DbType="Float")]
		public System.Nullable<double> VHL_VOL
		{
			get
			{
				return this._VHL_VOL;
			}
			set
			{
				if ((this._VHL_VOL != value))
				{
					this.OnVHL_VOLChanging(value);
					this.SendPropertyChanging();
					this._VHL_VOL = value;
					this.SendPropertyChanged("VHL_VOL");
					this.OnVHL_VOLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VHL_LONGUEUR", DbType="Real")]
		public System.Nullable<float> VHL_LONGUEUR
		{
			get
			{
				return this._VHL_LONGUEUR;
			}
			set
			{
				if ((this._VHL_LONGUEUR != value))
				{
					this.OnVHL_LONGUEURChanging(value);
					this.SendPropertyChanging();
					this._VHL_LONGUEUR = value;
					this.SendPropertyChanged("VHL_LONGUEUR");
					this.OnVHL_LONGUEURChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VHL_LARG", DbType="Real")]
		public System.Nullable<float> VHL_LARG
		{
			get
			{
				return this._VHL_LARG;
			}
			set
			{
				if ((this._VHL_LARG != value))
				{
					this.OnVHL_LARGChanging(value);
					this.SendPropertyChanging();
					this._VHL_LARG = value;
					this.SendPropertyChanged("VHL_LARG");
					this.OnVHL_LARGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VHL_HAUT", DbType="Real")]
		public System.Nullable<float> VHL_HAUT
		{
			get
			{
				return this._VHL_HAUT;
			}
			set
			{
				if ((this._VHL_HAUT != value))
				{
					this.OnVHL_HAUTChanging(value);
					this.SendPropertyChanging();
					this._VHL_HAUT = value;
					this.SendPropertyChanged("VHL_HAUT");
					this.OnVHL_HAUTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VHL_POIDS", DbType="Int")]
		public System.Nullable<int> VHL_POIDS
		{
			get
			{
				return this._VHL_POIDS;
			}
			set
			{
				if ((this._VHL_POIDS != value))
				{
					this.OnVHL_POIDSChanging(value);
					this.SendPropertyChanging();
					this._VHL_POIDS = value;
					this.SendPropertyChanged("VHL_POIDS");
					this.OnVHL_POIDSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VHL_PORTE", DbType="nvarchar(5)")]
		public string VHL_PORTE
		{
			get
			{
				return this._VHL_PORTE;
			}
			set
			{
				if ((this._VHL_PORTE != value))
				{
					this.OnVHL_PORTEChanging(value);
					this.SendPropertyChanging();
					this._VHL_PORTE = value;
					this.SendPropertyChanged("VHL_PORTE");
					this.OnVHL_PORTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VHL_ATELE", DbType="nvarchar(5)")]
		public string VHL_ATELE
		{
			get
			{
				return this._VHL_ATELE;
			}
			set
			{
				if ((this._VHL_ATELE != value))
				{
					this.OnVHL_ATELEChanging(value);
					this.SendPropertyChanging();
					this._VHL_ATELE = value;
					this.SendPropertyChanged("VHL_ATELE");
					this.OnVHL_ATELEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VHL_NUM_BL", DbType="nvarchar(50)")]
		public string VHL_NUM_BL
		{
			get
			{
				return this._VHL_NUM_BL;
			}
			set
			{
				if ((this._VHL_NUM_BL != value))
				{
					this.OnVHL_NUM_BLChanging(value);
					this.SendPropertyChanging();
					this._VHL_NUM_BL = value;
					this.SendPropertyChanged("VHL_NUM_BL");
					this.OnVHL_NUM_BLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VHL_NUM_ADD", DbType="nvarchar(20)")]
		public string VHL_NUM_ADD
		{
			get
			{
				return this._VHL_NUM_ADD;
			}
			set
			{
				if ((this._VHL_NUM_ADD != value))
				{
					this.OnVHL_NUM_ADDChanging(value);
					this.SendPropertyChanging();
					this._VHL_NUM_ADD = value;
					this.SendPropertyChanged("VHL_NUM_ADD");
					this.OnVHL_NUM_ADDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VHL_ENLEVEUR_NOM", DbType="nvarchar(50)")]
		public string VHL_ENLEVEUR_NOM
		{
			get
			{
				return this._VHL_ENLEVEUR_NOM;
			}
			set
			{
				if ((this._VHL_ENLEVEUR_NOM != value))
				{
					this.OnVHL_ENLEVEUR_NOMChanging(value);
					this.SendPropertyChanging();
					this._VHL_ENLEVEUR_NOM = value;
					this.SendPropertyChanged("VHL_ENLEVEUR_NOM");
					this.OnVHL_ENLEVEUR_NOMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VHL_ENLEVEUR_CNI", DbType="nvarchar(20)")]
		public string VHL_ENLEVEUR_CNI
		{
			get
			{
				return this._VHL_ENLEVEUR_CNI;
			}
			set
			{
				if ((this._VHL_ENLEVEUR_CNI != value))
				{
					this.OnVHL_ENLEVEUR_CNIChanging(value);
					this.SendPropertyChanging();
					this._VHL_ENLEVEUR_CNI = value;
					this.SendPropertyChanged("VHL_ENLEVEUR_CNI");
					this.OnVHL_ENLEVEUR_CNIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VHL_ENLEVEUR_TEL", DbType="nvarchar(20)")]
		public string VHL_ENLEVEUR_TEL
		{
			get
			{
				return this._VHL_ENLEVEUR_TEL;
			}
			set
			{
				if ((this._VHL_ENLEVEUR_TEL != value))
				{
					this.OnVHL_ENLEVEUR_TELChanging(value);
					this.SendPropertyChanging();
					this._VHL_ENLEVEUR_TEL = value;
					this.SendPropertyChanged("VHL_ENLEVEUR_TEL");
					this.OnVHL_ENLEVEUR_TELChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VHL_NUM_DEC", DbType="nvarchar(20)")]
		public string VHL_NUM_DEC
		{
			get
			{
				return this._VHL_NUM_DEC;
			}
			set
			{
				if ((this._VHL_NUM_DEC != value))
				{
					this.OnVHL_NUM_DECChanging(value);
					this.SendPropertyChanging();
					this._VHL_NUM_DEC = value;
					this.SendPropertyChanged("VHL_NUM_DEC");
					this.OnVHL_NUM_DECChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VHL_NUM_QUIT", DbType="nvarchar(20)")]
		public string VHL_NUM_QUIT
		{
			get
			{
				return this._VHL_NUM_QUIT;
			}
			set
			{
				if ((this._VHL_NUM_QUIT != value))
				{
					this.OnVHL_NUM_QUITChanging(value);
					this.SendPropertyChanging();
					this._VHL_NUM_QUIT = value;
					this.SendPropertyChanged("VHL_NUM_QUIT");
					this.OnVHL_NUM_QUITChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VHL_STATUT", DbType="nvarchar(20)")]
		public string VHL_STATUT
		{
			get
			{
				return this._VHL_STATUT;
			}
			set
			{
				if ((this._VHL_STATUT != value))
				{
					this.OnVHL_STATUTChanging(value);
					this.SendPropertyChanging();
					this._VHL_STATUT = value;
					this.SendPropertyChanged("VHL_STATUT");
					this.OnVHL_STATUTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VHL_EMPLACEMENT", DbType="nvarchar(50)")]
		public string VHL_EMPLACEMENT
		{
			get
			{
				return this._VHL_EMPLACEMENT;
			}
			set
			{
				if ((this._VHL_EMPLACEMENT != value))
				{
					this.OnVHL_EMPLACEMENTChanging(value);
					this.SendPropertyChanging();
					this._VHL_EMPLACEMENT = value;
					this.SendPropertyChanged("VHL_EMPLACEMENT");
					this.OnVHL_EMPLACEMENTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VHL_TYPE", DbType="nvarchar(20)")]
		public string VHL_TYPE
		{
			get
			{
				return this._VHL_TYPE;
			}
			set
			{
				if ((this._VHL_TYPE != value))
				{
					this.OnVHL_TYPEChanging(value);
					this.SendPropertyChanging();
					this._VHL_TYPE = value;
					this.SendPropertyChanged("VHL_TYPE");
					this.OnVHL_TYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VHL_DAT_S", DbType="DateTime")]
		public System.Nullable<System.DateTime> VHL_DAT_S
		{
			get
			{
				return this._VHL_DAT_S;
			}
			set
			{
				if ((this._VHL_DAT_S != value))
				{
					this.OnVHL_DAT_SChanging(value);
					this.SendPropertyChanging();
					this._VHL_DAT_S = value;
					this.SendPropertyChanged("VHL_DAT_S");
					this.OnVHL_DAT_SChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATE_ENTREE", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATE_ENTREE
		{
			get
			{
				return this._DATE_ENTREE;
			}
			set
			{
				if ((this._DATE_ENTREE != value))
				{
					this.OnDATE_ENTREEChanging(value);
					this.SendPropertyChanging();
					this._DATE_ENTREE = value;
					this.SendPropertyChanged("DATE_ENTREE");
					this.OnDATE_ENTREEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VHL_CONSIGNEE", DbType="nvarchar(50)")]
		public string VHL_CONSIGNEE
		{
			get
			{
				return this._VHL_CONSIGNEE;
			}
			set
			{
				if ((this._VHL_CONSIGNEE != value))
				{
					this.OnVHL_CONSIGNEEChanging(value);
					this.SendPropertyChanging();
					this._VHL_CONSIGNEE = value;
					this.SendPropertyChanged("VHL_CONSIGNEE");
					this.OnVHL_CONSIGNEEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATE_REQUEST", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATE_REQUEST
		{
			get
			{
				return this._DATE_REQUEST;
			}
			set
			{
				if ((this._DATE_REQUEST != value))
				{
					this.OnDATE_REQUESTChanging(value);
					this.SendPropertyChanging();
					this._DATE_REQUEST = value;
					this.SendPropertyChanged("DATE_REQUEST");
					this.OnDATE_REQUESTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ESC_DATEDEP_PREV", DbType="DateTime")]
		public System.Nullable<System.DateTime> ESC_DATEDEP_PREV
		{
			get
			{
				return this._ESC_DATEDEP_PREV;
			}
			set
			{
				if ((this._ESC_DATEDEP_PREV != value))
				{
					this.OnESC_DATEDEP_PREVChanging(value);
					this.SendPropertyChanging();
					this._ESC_DATEDEP_PREV = value;
					this.SendPropertyChanged("ESC_DATEDEP_PREV");
					this.OnESC_DATEDEP_PREVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ARMATEUR_NOM", DbType="nvarchar(50)")]
		public string ARMATEUR_NOM
		{
			get
			{
				return this._ARMATEUR_NOM;
			}
			set
			{
				if ((this._ARMATEUR_NOM != value))
				{
					this.OnARMATEUR_NOMChanging(value);
					this.SendPropertyChanging();
					this._ARMATEUR_NOM = value;
					this.SendPropertyChanged("ARMATEUR_NOM");
					this.OnARMATEUR_NOMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACCONIER_NOM", DbType="nvarchar(50)")]
		public string ACCONIER_NOM
		{
			get
			{
				return this._ACCONIER_NOM;
			}
			set
			{
				if ((this._ACCONIER_NOM != value))
				{
					this.OnACCONIER_NOMChanging(value);
					this.SendPropertyChanging();
					this._ACCONIER_NOM = value;
					this.SendPropertyChanged("ACCONIER_NOM");
					this.OnACCONIER_NOMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAVIRE_NOM", DbType="nvarchar(50)")]
		public string NAVIRE_NOM
		{
			get
			{
				return this._NAVIRE_NOM;
			}
			set
			{
				if ((this._NAVIRE_NOM != value))
				{
					this.OnNAVIRE_NOMChanging(value);
					this.SendPropertyChanging();
					this._NAVIRE_NOM = value;
					this.SendPropertyChanged("NAVIRE_NOM");
					this.OnNAVIRE_NOMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VHL_BS_REF", DbType="nvarchar(50)")]
		public string VHL_BS_REF
		{
			get
			{
				return this._VHL_BS_REF;
			}
			set
			{
				if ((this._VHL_BS_REF != value))
				{
					this.OnVHL_BS_REFChanging(value);
					this.SendPropertyChanging();
					this._VHL_BS_REF = value;
					this.SendPropertyChanged("VHL_BS_REF");
					this.OnVHL_BS_REFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VHL_BS_DATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> VHL_BS_DATE
		{
			get
			{
				return this._VHL_BS_DATE;
			}
			set
			{
				if ((this._VHL_BS_DATE != value))
				{
					this.OnVHL_BS_DATEChanging(value);
					this.SendPropertyChanging();
					this._VHL_BS_DATE = value;
					this.SendPropertyChanged("VHL_BS_DATE");
					this.OnVHL_BS_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="REQUESTS_REQUESTS_DETAILS", Storage="_REQUESTS", ThisKey="IDREQUEST", OtherKey="IDAUTO", IsForeignKey=true)]
		public REQUESTS REQUESTS
		{
			get
			{
				return this._REQUESTS.Entity;
			}
			set
			{
				REQUESTS previousValue = this._REQUESTS.Entity;
				if (((previousValue != value) 
							|| (this._REQUESTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._REQUESTS.Entity = null;
						previousValue.REQUESTS_DETAILS.Remove(this);
					}
					this._REQUESTS.Entity = value;
					if ((value != null))
					{
						value.REQUESTS_DETAILS.Add(this);
						this._IDREQUEST = value.IDAUTO;
					}
					else
					{
						this._IDREQUEST = default(int);
					}
					this.SendPropertyChanged("REQUESTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class PSION_SORTIES : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _CHASSIS;
		
		private System.Nullable<System.DateTime> _SCAN;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCHASSISChanging(string value);
    partial void OnCHASSISChanged();
    partial void OnSCANChanging(System.Nullable<System.DateTime> value);
    partial void OnSCANChanged();
    #endregion
		
		public PSION_SORTIES()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHASSIS", DbType="NVARCHAR(17)")]
		public string CHASSIS
		{
			get
			{
				return this._CHASSIS;
			}
			set
			{
				if ((this._CHASSIS != value))
				{
					this.OnCHASSISChanging(value);
					this.SendPropertyChanging();
					this._CHASSIS = value;
					this.SendPropertyChanged("CHASSIS");
					this.OnCHASSISChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SCAN", DbType="DateTime")]
		public System.Nullable<System.DateTime> SCAN
		{
			get
			{
				return this._SCAN;
			}
			set
			{
				if ((this._SCAN != value))
				{
					this.OnSCANChanging(value);
					this.SendPropertyChanging();
					this._SCAN = value;
					this.SendPropertyChanged("SCAN");
					this.OnSCANChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class TRANSACTIONS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDAUTO;
		
		private string _CJ;
		
		private string _DPIECE;
		
		private string _TPIECE;
		
		private string _CMPTGEN;
		
		private string _CMPTTYP;
		
		private string _CMPTAUX;
		
		private string _REF;
		
		private string _LIB;
		
		private string _PAYMOD;
		
		private string _DATECH;
		
		private string _SENS;
		
		private string _MONTANT;
		
		private string _TYPE;
		
		private string _CODE_TVA;
		
		private string _TAUX;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDAUTOChanging(int value);
    partial void OnIDAUTOChanged();
    partial void OnCJChanging(string value);
    partial void OnCJChanged();
    partial void OnDPIECEChanging(string value);
    partial void OnDPIECEChanged();
    partial void OnTPIECEChanging(string value);
    partial void OnTPIECEChanged();
    partial void OnCMPTGENChanging(string value);
    partial void OnCMPTGENChanged();
    partial void OnCMPTTYPChanging(string value);
    partial void OnCMPTTYPChanged();
    partial void OnCMPTAUXChanging(string value);
    partial void OnCMPTAUXChanged();
    partial void OnREFChanging(string value);
    partial void OnREFChanged();
    partial void OnLIBChanging(string value);
    partial void OnLIBChanged();
    partial void OnPAYMODChanging(string value);
    partial void OnPAYMODChanged();
    partial void OnDATECHChanging(string value);
    partial void OnDATECHChanged();
    partial void OnSENSChanging(string value);
    partial void OnSENSChanged();
    partial void OnMONTANTChanging(string value);
    partial void OnMONTANTChanged();
    partial void OnTYPEChanging(string value);
    partial void OnTYPEChanged();
    partial void OnCODE_TVAChanging(string value);
    partial void OnCODE_TVAChanged();
    partial void OnTAUXChanging(string value);
    partial void OnTAUXChanged();
    #endregion
		
		public TRANSACTIONS()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDAUTO", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDAUTO
		{
			get
			{
				return this._IDAUTO;
			}
			set
			{
				if ((this._IDAUTO != value))
				{
					this.OnIDAUTOChanging(value);
					this.SendPropertyChanging();
					this._IDAUTO = value;
					this.SendPropertyChanged("IDAUTO");
					this.OnIDAUTOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CJ", DbType="nvarchar(3)")]
		public string CJ
		{
			get
			{
				return this._CJ;
			}
			set
			{
				if ((this._CJ != value))
				{
					this.OnCJChanging(value);
					this.SendPropertyChanging();
					this._CJ = value;
					this.SendPropertyChanged("CJ");
					this.OnCJChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DPIECE", DbType="nvarchar(6)")]
		public string DPIECE
		{
			get
			{
				return this._DPIECE;
			}
			set
			{
				if ((this._DPIECE != value))
				{
					this.OnDPIECEChanging(value);
					this.SendPropertyChanging();
					this._DPIECE = value;
					this.SendPropertyChanged("DPIECE");
					this.OnDPIECEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TPIECE", DbType="nvarchar(2)")]
		public string TPIECE
		{
			get
			{
				return this._TPIECE;
			}
			set
			{
				if ((this._TPIECE != value))
				{
					this.OnTPIECEChanging(value);
					this.SendPropertyChanging();
					this._TPIECE = value;
					this.SendPropertyChanged("TPIECE");
					this.OnTPIECEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CMPTGEN", DbType="nvarchar(13)")]
		public string CMPTGEN
		{
			get
			{
				return this._CMPTGEN;
			}
			set
			{
				if ((this._CMPTGEN != value))
				{
					this.OnCMPTGENChanging(value);
					this.SendPropertyChanging();
					this._CMPTGEN = value;
					this.SendPropertyChanged("CMPTGEN");
					this.OnCMPTGENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CMPTTYP", DbType="nvarchar(1)")]
		public string CMPTTYP
		{
			get
			{
				return this._CMPTTYP;
			}
			set
			{
				if ((this._CMPTTYP != value))
				{
					this.OnCMPTTYPChanging(value);
					this.SendPropertyChanging();
					this._CMPTTYP = value;
					this.SendPropertyChanged("CMPTTYP");
					this.OnCMPTTYPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CMPTAUX", DbType="nvarchar(13)")]
		public string CMPTAUX
		{
			get
			{
				return this._CMPTAUX;
			}
			set
			{
				if ((this._CMPTAUX != value))
				{
					this.OnCMPTAUXChanging(value);
					this.SendPropertyChanging();
					this._CMPTAUX = value;
					this.SendPropertyChanged("CMPTAUX");
					this.OnCMPTAUXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REF", DbType="nvarchar(13)")]
		public string REF
		{
			get
			{
				return this._REF;
			}
			set
			{
				if ((this._REF != value))
				{
					this.OnREFChanging(value);
					this.SendPropertyChanging();
					this._REF = value;
					this.SendPropertyChanged("REF");
					this.OnREFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LIB", DbType="nvarchar(25)", CanBeNull=false)]
		public string LIB
		{
			get
			{
				return this._LIB;
			}
			set
			{
				if ((this._LIB != value))
				{
					this.OnLIBChanging(value);
					this.SendPropertyChanging();
					this._LIB = value;
					this.SendPropertyChanged("LIB");
					this.OnLIBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PAYMOD", DbType="nvarchar(1)")]
		public string PAYMOD
		{
			get
			{
				return this._PAYMOD;
			}
			set
			{
				if ((this._PAYMOD != value))
				{
					this.OnPAYMODChanging(value);
					this.SendPropertyChanging();
					this._PAYMOD = value;
					this.SendPropertyChanged("PAYMOD");
					this.OnPAYMODChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATECH", DbType="nvarchar(6)")]
		public string DATECH
		{
			get
			{
				return this._DATECH;
			}
			set
			{
				if ((this._DATECH != value))
				{
					this.OnDATECHChanging(value);
					this.SendPropertyChanging();
					this._DATECH = value;
					this.SendPropertyChanged("DATECH");
					this.OnDATECHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SENS", DbType="nvarchar(1)")]
		public string SENS
		{
			get
			{
				return this._SENS;
			}
			set
			{
				if ((this._SENS != value))
				{
					this.OnSENSChanging(value);
					this.SendPropertyChanging();
					this._SENS = value;
					this.SendPropertyChanged("SENS");
					this.OnSENSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MONTANT", DbType="nvarchar(20)")]
		public string MONTANT
		{
			get
			{
				return this._MONTANT;
			}
			set
			{
				if ((this._MONTANT != value))
				{
					this.OnMONTANTChanging(value);
					this.SendPropertyChanging();
					this._MONTANT = value;
					this.SendPropertyChanged("MONTANT");
					this.OnMONTANTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TYPE", DbType="nvarchar(1)")]
		public string TYPE
		{
			get
			{
				return this._TYPE;
			}
			set
			{
				if ((this._TYPE != value))
				{
					this.OnTYPEChanging(value);
					this.SendPropertyChanging();
					this._TYPE = value;
					this.SendPropertyChanged("TYPE");
					this.OnTYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CODE_TVA", DbType="nvarchar(10)")]
		public string CODE_TVA
		{
			get
			{
				return this._CODE_TVA;
			}
			set
			{
				if ((this._CODE_TVA != value))
				{
					this.OnCODE_TVAChanging(value);
					this.SendPropertyChanging();
					this._CODE_TVA = value;
					this.SendPropertyChanged("CODE_TVA");
					this.OnCODE_TVAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TAUX", DbType="nvarchar(5)")]
		public string TAUX
		{
			get
			{
				return this._TAUX;
			}
			set
			{
				if ((this._TAUX != value))
				{
					this.OnTAUXChanging(value);
					this.SendPropertyChanging();
					this._TAUX = value;
					this.SendPropertyChanged("TAUX");
					this.OnTAUXChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class AVOIR_SPOT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdFA;
		
		private System.DateTime _DCFA;
		
		private string _AIFA;
		
		private string _StatutFA;
		
		private System.Nullable<int> _MHT;
		
		private System.Nullable<int> _MTTC;
		
		private System.Nullable<int> _MTVA;
		
		private System.Nullable<int> _IdU;
		
		private int _IdClient;
		
		private EntitySet<CLIENT> _CLIENT;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdFAChanging(int value);
    partial void OnIdFAChanged();
    partial void OnDCFAChanging(System.DateTime value);
    partial void OnDCFAChanged();
    partial void OnAIFAChanging(string value);
    partial void OnAIFAChanged();
    partial void OnStatutFAChanging(string value);
    partial void OnStatutFAChanged();
    partial void OnMHTChanging(System.Nullable<int> value);
    partial void OnMHTChanged();
    partial void OnMTTCChanging(System.Nullable<int> value);
    partial void OnMTTCChanged();
    partial void OnMTVAChanging(System.Nullable<int> value);
    partial void OnMTVAChanged();
    partial void OnIdUChanging(System.Nullable<int> value);
    partial void OnIdUChanged();
    partial void OnIdClientChanging(int value);
    partial void OnIdClientChanged();
    #endregion
		
		public AVOIR_SPOT()
		{
			this._CLIENT = new EntitySet<CLIENT>(new Action<CLIENT>(this.attach_CLIENT), new Action<CLIENT>(this.detach_CLIENT));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFA", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdFA
		{
			get
			{
				return this._IdFA;
			}
			set
			{
				if ((this._IdFA != value))
				{
					this.OnIdFAChanging(value);
					this.SendPropertyChanging();
					this._IdFA = value;
					this.SendPropertyChanged("IdFA");
					this.OnIdFAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DCFA", DbType="datetime")]
		public System.DateTime DCFA
		{
			get
			{
				return this._DCFA;
			}
			set
			{
				if ((this._DCFA != value))
				{
					this.OnDCFAChanging(value);
					this.SendPropertyChanging();
					this._DCFA = value;
					this.SendPropertyChanged("DCFA");
					this.OnDCFAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AIFA", DbType="nvarchar(255)")]
		public string AIFA
		{
			get
			{
				return this._AIFA;
			}
			set
			{
				if ((this._AIFA != value))
				{
					this.OnAIFAChanging(value);
					this.SendPropertyChanging();
					this._AIFA = value;
					this.SendPropertyChanged("AIFA");
					this.OnAIFAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatutFA", DbType="nvarchar(1)")]
		public string StatutFA
		{
			get
			{
				return this._StatutFA;
			}
			set
			{
				if ((this._StatutFA != value))
				{
					this.OnStatutFAChanging(value);
					this.SendPropertyChanging();
					this._StatutFA = value;
					this.SendPropertyChanged("StatutFA");
					this.OnStatutFAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MHT", DbType="int")]
		public System.Nullable<int> MHT
		{
			get
			{
				return this._MHT;
			}
			set
			{
				if ((this._MHT != value))
				{
					this.OnMHTChanging(value);
					this.SendPropertyChanging();
					this._MHT = value;
					this.SendPropertyChanged("MHT");
					this.OnMHTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MTTC", DbType="int")]
		public System.Nullable<int> MTTC
		{
			get
			{
				return this._MTTC;
			}
			set
			{
				if ((this._MTTC != value))
				{
					this.OnMTTCChanging(value);
					this.SendPropertyChanging();
					this._MTTC = value;
					this.SendPropertyChanged("MTTC");
					this.OnMTTCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MTVA", DbType="int")]
		public System.Nullable<int> MTVA
		{
			get
			{
				return this._MTVA;
			}
			set
			{
				if ((this._MTVA != value))
				{
					this.OnMTVAChanging(value);
					this.SendPropertyChanging();
					this._MTVA = value;
					this.SendPropertyChanged("MTVA");
					this.OnMTVAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdU", DbType="int")]
		public System.Nullable<int> IdU
		{
			get
			{
				return this._IdU;
			}
			set
			{
				if ((this._IdU != value))
				{
					this.OnIdUChanging(value);
					this.SendPropertyChanging();
					this._IdU = value;
					this.SendPropertyChanged("IdU");
					this.OnIdUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdClient", DbType="int")]
		public int IdClient
		{
			get
			{
				return this._IdClient;
			}
			set
			{
				if ((this._IdClient != value))
				{
					this.OnIdClientChanging(value);
					this.SendPropertyChanging();
					this._IdClient = value;
					this.SendPropertyChanged("IdClient");
					this.OnIdClientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AVOIR_SPOT_CLIENT", Storage="_CLIENT", ThisKey="IdClient", OtherKey="IdClient")]
		public EntitySet<CLIENT> CLIENT
		{
			get
			{
				return this._CLIENT;
			}
			set
			{
				this._CLIENT.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CLIENT(CLIENT entity)
		{
			this.SendPropertyChanging();
			entity.AVOIR_SPOT = this;
		}
		
		private void detach_CLIENT(CLIENT entity)
		{
			this.SendPropertyChanging();
			entity.AVOIR_SPOT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class LIGNE_AVOIR_SPOT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdFA;
		
		private short _CodeArticle;
		
		private string _StatutLP;
		
		private double _PUEF;
		
		private float _QTEEF;
		
		private double _TauxTVA;
		
		private int _IdAuto;
		
		private string _Lib;
		
		private string _CCOMPTABLE;
		
		private System.Nullable<int> _IDJEF;
		
		private EntitySet<ARTICLE> _ARTICLE;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdFAChanging(int value);
    partial void OnIdFAChanged();
    partial void OnCodeArticleChanging(short value);
    partial void OnCodeArticleChanged();
    partial void OnStatutLPChanging(string value);
    partial void OnStatutLPChanged();
    partial void OnPUEFChanging(double value);
    partial void OnPUEFChanged();
    partial void OnQTEEFChanging(float value);
    partial void OnQTEEFChanged();
    partial void OnTauxTVAChanging(double value);
    partial void OnTauxTVAChanged();
    partial void OnIdAutoChanging(int value);
    partial void OnIdAutoChanged();
    partial void OnLibChanging(string value);
    partial void OnLibChanged();
    partial void OnCCOMPTABLEChanging(string value);
    partial void OnCCOMPTABLEChanged();
    partial void OnIDJEFChanging(System.Nullable<int> value);
    partial void OnIDJEFChanged();
    #endregion
		
		public LIGNE_AVOIR_SPOT()
		{
			this._ARTICLE = new EntitySet<ARTICLE>(new Action<ARTICLE>(this.attach_ARTICLE), new Action<ARTICLE>(this.detach_ARTICLE));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFA", DbType="int ")]
		public int IdFA
		{
			get
			{
				return this._IdFA;
			}
			set
			{
				if ((this._IdFA != value))
				{
					this.OnIdFAChanging(value);
					this.SendPropertyChanging();
					this._IdFA = value;
					this.SendPropertyChanged("IdFA");
					this.OnIdFAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeArticle", DbType="SmallInt ")]
		public short CodeArticle
		{
			get
			{
				return this._CodeArticle;
			}
			set
			{
				if ((this._CodeArticle != value))
				{
					this.OnCodeArticleChanging(value);
					this.SendPropertyChanging();
					this._CodeArticle = value;
					this.SendPropertyChanged("CodeArticle");
					this.OnCodeArticleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatutLP", DbType="nvarchar(1)")]
		public string StatutLP
		{
			get
			{
				return this._StatutLP;
			}
			set
			{
				if ((this._StatutLP != value))
				{
					this.OnStatutLPChanging(value);
					this.SendPropertyChanging();
					this._StatutLP = value;
					this.SendPropertyChanged("StatutLP");
					this.OnStatutLPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PUEF", DbType="float")]
		public double PUEF
		{
			get
			{
				return this._PUEF;
			}
			set
			{
				if ((this._PUEF != value))
				{
					this.OnPUEFChanging(value);
					this.SendPropertyChanging();
					this._PUEF = value;
					this.SendPropertyChanged("PUEF");
					this.OnPUEFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTEEF", DbType="float")]
		public float QTEEF
		{
			get
			{
				return this._QTEEF;
			}
			set
			{
				if ((this._QTEEF != value))
				{
					this.OnQTEEFChanging(value);
					this.SendPropertyChanging();
					this._QTEEF = value;
					this.SendPropertyChanged("QTEEF");
					this.OnQTEEFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TauxTVA", DbType="real")]
		public double TauxTVA
		{
			get
			{
				return this._TauxTVA;
			}
			set
			{
				if ((this._TauxTVA != value))
				{
					this.OnTauxTVAChanging(value);
					this.SendPropertyChanging();
					this._TauxTVA = value;
					this.SendPropertyChanged("TauxTVA");
					this.OnTauxTVAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdAuto", AutoSync=AutoSync.OnInsert, DbType="int", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdAuto
		{
			get
			{
				return this._IdAuto;
			}
			set
			{
				if ((this._IdAuto != value))
				{
					this.OnIdAutoChanging(value);
					this.SendPropertyChanging();
					this._IdAuto = value;
					this.SendPropertyChanged("IdAuto");
					this.OnIdAutoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lib", DbType="nvarchar(80)")]
		public string Lib
		{
			get
			{
				return this._Lib;
			}
			set
			{
				if ((this._Lib != value))
				{
					this.OnLibChanging(value);
					this.SendPropertyChanging();
					this._Lib = value;
					this.SendPropertyChanged("Lib");
					this.OnLibChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCOMPTABLE", DbType="nvarchar(10)")]
		public string CCOMPTABLE
		{
			get
			{
				return this._CCOMPTABLE;
			}
			set
			{
				if ((this._CCOMPTABLE != value))
				{
					this.OnCCOMPTABLEChanging(value);
					this.SendPropertyChanging();
					this._CCOMPTABLE = value;
					this.SendPropertyChanged("CCOMPTABLE");
					this.OnCCOMPTABLEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDJEF", DbType="int")]
		public System.Nullable<int> IDJEF
		{
			get
			{
				return this._IDJEF;
			}
			set
			{
				if ((this._IDJEF != value))
				{
					this.OnIDJEFChanging(value);
					this.SendPropertyChanging();
					this._IDJEF = value;
					this.SendPropertyChanged("IDJEF");
					this.OnIDJEFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LIGNE_AVOIR_SPOT_ARTICLE", Storage="_ARTICLE", ThisKey="CodeArticle", OtherKey="CodeArticle")]
		public EntitySet<ARTICLE> ARTICLE
		{
			get
			{
				return this._ARTICLE;
			}
			set
			{
				this._ARTICLE.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ARTICLE(ARTICLE entity)
		{
			this.SendPropertyChanging();
			entity.LIGNE_AVOIR_SPOT = this;
		}
		
		private void detach_ARTICLE(ARTICLE entity)
		{
			this.SendPropertyChanging();
			entity.LIGNE_AVOIR_SPOT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class RMT_FACTURES : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SysId;
		
		private System.DateTime _DCFD;
		
		private string _StatutFD;
		
		private int _MHT;
		
		private int _MTTC;
		
		private int _MTVA;
		
		private int _IdCli;
		
		private int _IdPay;
		
		private System.Nullable<int> _IdBl;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSysIdChanging(int value);
    partial void OnSysIdChanged();
    partial void OnDCFDChanging(System.DateTime value);
    partial void OnDCFDChanged();
    partial void OnStatutFDChanging(string value);
    partial void OnStatutFDChanged();
    partial void OnMHTChanging(int value);
    partial void OnMHTChanged();
    partial void OnMTTCChanging(int value);
    partial void OnMTTCChanged();
    partial void OnMTVAChanging(int value);
    partial void OnMTVAChanged();
    partial void OnIdCliChanging(int value);
    partial void OnIdCliChanged();
    partial void OnIdPayChanging(int value);
    partial void OnIdPayChanged();
    partial void OnIdBlChanging(System.Nullable<int> value);
    partial void OnIdBlChanged();
    #endregion
		
		public RMT_FACTURES()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SysId", DbType="int", IsPrimaryKey=true)]
		public int SysId
		{
			get
			{
				return this._SysId;
			}
			set
			{
				if ((this._SysId != value))
				{
					this.OnSysIdChanging(value);
					this.SendPropertyChanging();
					this._SysId = value;
					this.SendPropertyChanged("SysId");
					this.OnSysIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DCFD", DbType="datetime")]
		public System.DateTime DCFD
		{
			get
			{
				return this._DCFD;
			}
			set
			{
				if ((this._DCFD != value))
				{
					this.OnDCFDChanging(value);
					this.SendPropertyChanging();
					this._DCFD = value;
					this.SendPropertyChanged("DCFD");
					this.OnDCFDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatutFD", DbType="nvarchar(10)", CanBeNull=false)]
		public string StatutFD
		{
			get
			{
				return this._StatutFD;
			}
			set
			{
				if ((this._StatutFD != value))
				{
					this.OnStatutFDChanging(value);
					this.SendPropertyChanging();
					this._StatutFD = value;
					this.SendPropertyChanged("StatutFD");
					this.OnStatutFDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MHT", DbType="int")]
		public int MHT
		{
			get
			{
				return this._MHT;
			}
			set
			{
				if ((this._MHT != value))
				{
					this.OnMHTChanging(value);
					this.SendPropertyChanging();
					this._MHT = value;
					this.SendPropertyChanged("MHT");
					this.OnMHTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MTTC", DbType="int")]
		public int MTTC
		{
			get
			{
				return this._MTTC;
			}
			set
			{
				if ((this._MTTC != value))
				{
					this.OnMTTCChanging(value);
					this.SendPropertyChanging();
					this._MTTC = value;
					this.SendPropertyChanged("MTTC");
					this.OnMTTCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MTVA", DbType="int")]
		public int MTVA
		{
			get
			{
				return this._MTVA;
			}
			set
			{
				if ((this._MTVA != value))
				{
					this.OnMTVAChanging(value);
					this.SendPropertyChanging();
					this._MTVA = value;
					this.SendPropertyChanged("MTVA");
					this.OnMTVAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCli", DbType="int")]
		public int IdCli
		{
			get
			{
				return this._IdCli;
			}
			set
			{
				if ((this._IdCli != value))
				{
					this.OnIdCliChanging(value);
					this.SendPropertyChanging();
					this._IdCli = value;
					this.SendPropertyChanged("IdCli");
					this.OnIdCliChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPay", DbType="int")]
		public int IdPay
		{
			get
			{
				return this._IdPay;
			}
			set
			{
				if ((this._IdPay != value))
				{
					this.OnIdPayChanging(value);
					this.SendPropertyChanging();
					this._IdPay = value;
					this.SendPropertyChanged("IdPay");
					this.OnIdPayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdBl", DbType="int")]
		public System.Nullable<int> IdBl
		{
			get
			{
				return this._IdBl;
			}
			set
			{
				if ((this._IdBl != value))
				{
					this.OnIdBlChanging(value);
					this.SendPropertyChanging();
					this._IdBl = value;
					this.SendPropertyChanged("IdBl");
					this.OnIdBlChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class RMT_CONNAISSEMENT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SysId;
		
		private string _NumBl;
		
		private string _Consignee;
		
		private string _Adresse;
		
		private string _Notify;
		
		private int _Client;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSysIdChanging(int value);
    partial void OnSysIdChanged();
    partial void OnNumBlChanging(string value);
    partial void OnNumBlChanged();
    partial void OnConsigneeChanging(string value);
    partial void OnConsigneeChanged();
    partial void OnAdresseChanging(string value);
    partial void OnAdresseChanged();
    partial void OnNotifyChanging(string value);
    partial void OnNotifyChanged();
    partial void OnClientChanging(int value);
    partial void OnClientChanged();
    #endregion
		
		public RMT_CONNAISSEMENT()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SysId", IsPrimaryKey=true)]
		public int SysId
		{
			get
			{
				return this._SysId;
			}
			set
			{
				if ((this._SysId != value))
				{
					this.OnSysIdChanging(value);
					this.SendPropertyChanging();
					this._SysId = value;
					this.SendPropertyChanged("SysId");
					this.OnSysIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumBl", DbType="nvarchar(45)", CanBeNull=false)]
		public string NumBl
		{
			get
			{
				return this._NumBl;
			}
			set
			{
				if ((this._NumBl != value))
				{
					this.OnNumBlChanging(value);
					this.SendPropertyChanging();
					this._NumBl = value;
					this.SendPropertyChanged("NumBl");
					this.OnNumBlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Consignee", DbType="nvarchar(50)", CanBeNull=false)]
		public string Consignee
		{
			get
			{
				return this._Consignee;
			}
			set
			{
				if ((this._Consignee != value))
				{
					this.OnConsigneeChanging(value);
					this.SendPropertyChanging();
					this._Consignee = value;
					this.SendPropertyChanged("Consignee");
					this.OnConsigneeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adresse", DbType="nvarchar(100)", CanBeNull=false)]
		public string Adresse
		{
			get
			{
				return this._Adresse;
			}
			set
			{
				if ((this._Adresse != value))
				{
					this.OnAdresseChanging(value);
					this.SendPropertyChanging();
					this._Adresse = value;
					this.SendPropertyChanged("Adresse");
					this.OnAdresseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notify", DbType="nvarchar(80)", CanBeNull=false)]
		public string Notify
		{
			get
			{
				return this._Notify;
			}
			set
			{
				if ((this._Notify != value))
				{
					this.OnNotifyChanging(value);
					this.SendPropertyChanging();
					this._Notify = value;
					this.SendPropertyChanged("Notify");
					this.OnNotifyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Client", DbType="int")]
		public int Client
		{
			get
			{
				return this._Client;
			}
			set
			{
				if ((this._Client != value))
				{
					this.OnClientChanging(value);
					this.SendPropertyChanging();
					this._Client = value;
					this.SendPropertyChanged("Client");
					this.OnClientChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class RMT_ELEMENT_FACTURE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SysId;
		
		private string _Elt;
		
		private string _Lib;
		
		private int _PU;
		
		private double _Qte;
		
		private string _Unite;
		
		private System.Nullable<int> _IdBl;
		
		private string _CodeTva;
		
		private string _TauxTva;
		
		private System.Nullable<int> _IdFD;
		
		private string _Statut;
		
		private string _CodeArt;
		
		private System.Nullable<int> _IdFA;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSysIdChanging(int value);
    partial void OnSysIdChanged();
    partial void OnEltChanging(string value);
    partial void OnEltChanged();
    partial void OnLibChanging(string value);
    partial void OnLibChanged();
    partial void OnPUChanging(int value);
    partial void OnPUChanged();
    partial void OnQteChanging(double value);
    partial void OnQteChanged();
    partial void OnUniteChanging(string value);
    partial void OnUniteChanged();
    partial void OnIdBlChanging(System.Nullable<int> value);
    partial void OnIdBlChanged();
    partial void OnCodeTvaChanging(string value);
    partial void OnCodeTvaChanged();
    partial void OnTauxTvaChanging(string value);
    partial void OnTauxTvaChanged();
    partial void OnIdFDChanging(System.Nullable<int> value);
    partial void OnIdFDChanged();
    partial void OnStatutChanging(string value);
    partial void OnStatutChanged();
    partial void OnCodeArtChanging(string value);
    partial void OnCodeArtChanged();
    partial void OnIdFAChanging(System.Nullable<int> value);
    partial void OnIdFAChanged();
    #endregion
		
		public RMT_ELEMENT_FACTURE()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SysId", DbType="int", IsPrimaryKey=true)]
		public int SysId
		{
			get
			{
				return this._SysId;
			}
			set
			{
				if ((this._SysId != value))
				{
					this.OnSysIdChanging(value);
					this.SendPropertyChanging();
					this._SysId = value;
					this.SendPropertyChanged("SysId");
					this.OnSysIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Elt", DbType="nvarchar(10)", CanBeNull=false)]
		public string Elt
		{
			get
			{
				return this._Elt;
			}
			set
			{
				if ((this._Elt != value))
				{
					this.OnEltChanging(value);
					this.SendPropertyChanging();
					this._Elt = value;
					this.SendPropertyChanged("Elt");
					this.OnEltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lib", DbType="nvarchar(150)", CanBeNull=false)]
		public string Lib
		{
			get
			{
				return this._Lib;
			}
			set
			{
				if ((this._Lib != value))
				{
					this.OnLibChanging(value);
					this.SendPropertyChanging();
					this._Lib = value;
					this.SendPropertyChanged("Lib");
					this.OnLibChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PU", DbType="int")]
		public int PU
		{
			get
			{
				return this._PU;
			}
			set
			{
				if ((this._PU != value))
				{
					this.OnPUChanging(value);
					this.SendPropertyChanging();
					this._PU = value;
					this.SendPropertyChanged("PU");
					this.OnPUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Qte", DbType="float")]
		public double Qte
		{
			get
			{
				return this._Qte;
			}
			set
			{
				if ((this._Qte != value))
				{
					this.OnQteChanging(value);
					this.SendPropertyChanging();
					this._Qte = value;
					this.SendPropertyChanged("Qte");
					this.OnQteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unite", DbType="nvarchar(5)", CanBeNull=false)]
		public string Unite
		{
			get
			{
				return this._Unite;
			}
			set
			{
				if ((this._Unite != value))
				{
					this.OnUniteChanging(value);
					this.SendPropertyChanging();
					this._Unite = value;
					this.SendPropertyChanged("Unite");
					this.OnUniteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdBl", DbType="int")]
		public System.Nullable<int> IdBl
		{
			get
			{
				return this._IdBl;
			}
			set
			{
				if ((this._IdBl != value))
				{
					this.OnIdBlChanging(value);
					this.SendPropertyChanging();
					this._IdBl = value;
					this.SendPropertyChanged("IdBl");
					this.OnIdBlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeTva", DbType="nvarchar(10)", CanBeNull=false)]
		public string CodeTva
		{
			get
			{
				return this._CodeTva;
			}
			set
			{
				if ((this._CodeTva != value))
				{
					this.OnCodeTvaChanging(value);
					this.SendPropertyChanging();
					this._CodeTva = value;
					this.SendPropertyChanged("CodeTva");
					this.OnCodeTvaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TauxTva", DbType="nvarchar(7)", CanBeNull=false)]
		public string TauxTva
		{
			get
			{
				return this._TauxTva;
			}
			set
			{
				if ((this._TauxTva != value))
				{
					this.OnTauxTvaChanging(value);
					this.SendPropertyChanging();
					this._TauxTva = value;
					this.SendPropertyChanged("TauxTva");
					this.OnTauxTvaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFD", DbType="int")]
		public System.Nullable<int> IdFD
		{
			get
			{
				return this._IdFD;
			}
			set
			{
				if ((this._IdFD != value))
				{
					this.OnIdFDChanging(value);
					this.SendPropertyChanging();
					this._IdFD = value;
					this.SendPropertyChanged("IdFD");
					this.OnIdFDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Statut", DbType="nvarchar(10)", CanBeNull=false)]
		public string Statut
		{
			get
			{
				return this._Statut;
			}
			set
			{
				if ((this._Statut != value))
				{
					this.OnStatutChanging(value);
					this.SendPropertyChanging();
					this._Statut = value;
					this.SendPropertyChanged("Statut");
					this.OnStatutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeArt", DbType="nvarchar(5)", CanBeNull=false)]
		public string CodeArt
		{
			get
			{
				return this._CodeArt;
			}
			set
			{
				if ((this._CodeArt != value))
				{
					this.OnCodeArtChanging(value);
					this.SendPropertyChanging();
					this._CodeArt = value;
					this.SendPropertyChanged("CodeArt");
					this.OnCodeArtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFA", DbType="int")]
		public System.Nullable<int> IdFA
		{
			get
			{
				return this._IdFA;
			}
			set
			{
				if ((this._IdFA != value))
				{
					this.OnIdFAChanging(value);
					this.SendPropertyChanging();
					this._IdFA = value;
					this.SendPropertyChanged("IdFA");
					this.OnIdFAChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class RMT_AVOIR : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SysId;
		
		private int _MTTC;
		
		private int _MTVA;
		
		private int _MHT;
		
		private System.DateTime _DCFA;
		
		private string _Note;
		
		private System.Nullable<int> _IdFD;
		
		private string _Typ;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSysIdChanging(int value);
    partial void OnSysIdChanged();
    partial void OnMTTCChanging(int value);
    partial void OnMTTCChanged();
    partial void OnMTVAChanging(int value);
    partial void OnMTVAChanged();
    partial void OnMHTChanging(int value);
    partial void OnMHTChanged();
    partial void OnDCFAChanging(System.DateTime value);
    partial void OnDCFAChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnIdFDChanging(System.Nullable<int> value);
    partial void OnIdFDChanged();
    partial void OnTypChanging(string value);
    partial void OnTypChanged();
    #endregion
		
		public RMT_AVOIR()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SysId", DbType="int", IsPrimaryKey=true)]
		public int SysId
		{
			get
			{
				return this._SysId;
			}
			set
			{
				if ((this._SysId != value))
				{
					this.OnSysIdChanging(value);
					this.SendPropertyChanging();
					this._SysId = value;
					this.SendPropertyChanged("SysId");
					this.OnSysIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MTTC", DbType="int")]
		public int MTTC
		{
			get
			{
				return this._MTTC;
			}
			set
			{
				if ((this._MTTC != value))
				{
					this.OnMTTCChanging(value);
					this.SendPropertyChanging();
					this._MTTC = value;
					this.SendPropertyChanged("MTTC");
					this.OnMTTCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MTVA", DbType="int")]
		public int MTVA
		{
			get
			{
				return this._MTVA;
			}
			set
			{
				if ((this._MTVA != value))
				{
					this.OnMTVAChanging(value);
					this.SendPropertyChanging();
					this._MTVA = value;
					this.SendPropertyChanged("MTVA");
					this.OnMTVAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MHT", DbType="int")]
		public int MHT
		{
			get
			{
				return this._MHT;
			}
			set
			{
				if ((this._MHT != value))
				{
					this.OnMHTChanging(value);
					this.SendPropertyChanging();
					this._MHT = value;
					this.SendPropertyChanged("MHT");
					this.OnMHTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DCFA", DbType="datetime")]
		public System.DateTime DCFA
		{
			get
			{
				return this._DCFA;
			}
			set
			{
				if ((this._DCFA != value))
				{
					this.OnDCFAChanging(value);
					this.SendPropertyChanging();
					this._DCFA = value;
					this.SendPropertyChanged("DCFA");
					this.OnDCFAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="nvarchar(150)", CanBeNull=false)]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFD", DbType="int")]
		public System.Nullable<int> IdFD
		{
			get
			{
				return this._IdFD;
			}
			set
			{
				if ((this._IdFD != value))
				{
					this.OnIdFDChanging(value);
					this.SendPropertyChanging();
					this._IdFD = value;
					this.SendPropertyChanged("IdFD");
					this.OnIdFDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Typ", DbType="nvarchar(10)", CanBeNull=false)]
		public string Typ
		{
			get
			{
				return this._Typ;
			}
			set
			{
				if ((this._Typ != value))
				{
					this.OnTypChanging(value);
					this.SendPropertyChanging();
					this._Typ = value;
					this.SendPropertyChanged("Typ");
					this.OnTypChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class RMT_PAYEMENT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SysId;
		
		private System.Nullable<System.DateTime> _DatePay;
		
		private System.Nullable<int> _ModePay;
		
		private System.Nullable<int> _MAPay;
		
		private System.Nullable<int> _MRPay;
		
		private string _AIPay;
		
		private System.Nullable<int> _IdBL;
		
		private System.Nullable<int> _IdClient;
		
		private string _NumCheque;
		
		private string _RefVirement;
		
		private string _Banque;
		
		private string _NumCompte;
		
		private string _StatutPay;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSysIdChanging(int value);
    partial void OnSysIdChanged();
    partial void OnDatePayChanging(System.Nullable<System.DateTime> value);
    partial void OnDatePayChanged();
    partial void OnModePayChanging(System.Nullable<int> value);
    partial void OnModePayChanged();
    partial void OnMAPayChanging(System.Nullable<int> value);
    partial void OnMAPayChanged();
    partial void OnMRPayChanging(System.Nullable<int> value);
    partial void OnMRPayChanged();
    partial void OnAIPayChanging(string value);
    partial void OnAIPayChanged();
    partial void OnIdBLChanging(System.Nullable<int> value);
    partial void OnIdBLChanged();
    partial void OnIdClientChanging(System.Nullable<int> value);
    partial void OnIdClientChanged();
    partial void OnNumChequeChanging(string value);
    partial void OnNumChequeChanged();
    partial void OnRefVirementChanging(string value);
    partial void OnRefVirementChanged();
    partial void OnBanqueChanging(string value);
    partial void OnBanqueChanged();
    partial void OnNumCompteChanging(string value);
    partial void OnNumCompteChanged();
    partial void OnStatutPayChanging(string value);
    partial void OnStatutPayChanged();
    #endregion
		
		public RMT_PAYEMENT()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SysId", DbType="int", IsPrimaryKey=true)]
		public int SysId
		{
			get
			{
				return this._SysId;
			}
			set
			{
				if ((this._SysId != value))
				{
					this.OnSysIdChanging(value);
					this.SendPropertyChanging();
					this._SysId = value;
					this.SendPropertyChanged("SysId");
					this.OnSysIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatePay", DbType="datetime")]
		public System.Nullable<System.DateTime> DatePay
		{
			get
			{
				return this._DatePay;
			}
			set
			{
				if ((this._DatePay != value))
				{
					this.OnDatePayChanging(value);
					this.SendPropertyChanging();
					this._DatePay = value;
					this.SendPropertyChanged("DatePay");
					this.OnDatePayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModePay", DbType="smallint")]
		public System.Nullable<int> ModePay
		{
			get
			{
				return this._ModePay;
			}
			set
			{
				if ((this._ModePay != value))
				{
					this.OnModePayChanging(value);
					this.SendPropertyChanging();
					this._ModePay = value;
					this.SendPropertyChanged("ModePay");
					this.OnModePayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPay", DbType="int")]
		public System.Nullable<int> MAPay
		{
			get
			{
				return this._MAPay;
			}
			set
			{
				if ((this._MAPay != value))
				{
					this.OnMAPayChanging(value);
					this.SendPropertyChanging();
					this._MAPay = value;
					this.SendPropertyChanged("MAPay");
					this.OnMAPayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MRPay", DbType="int")]
		public System.Nullable<int> MRPay
		{
			get
			{
				return this._MRPay;
			}
			set
			{
				if ((this._MRPay != value))
				{
					this.OnMRPayChanging(value);
					this.SendPropertyChanging();
					this._MRPay = value;
					this.SendPropertyChanged("MRPay");
					this.OnMRPayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AIPay", DbType="nvarchar(255)")]
		public string AIPay
		{
			get
			{
				return this._AIPay;
			}
			set
			{
				if ((this._AIPay != value))
				{
					this.OnAIPayChanging(value);
					this.SendPropertyChanging();
					this._AIPay = value;
					this.SendPropertyChanged("AIPay");
					this.OnAIPayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdBL", DbType="int")]
		public System.Nullable<int> IdBL
		{
			get
			{
				return this._IdBL;
			}
			set
			{
				if ((this._IdBL != value))
				{
					this.OnIdBLChanging(value);
					this.SendPropertyChanging();
					this._IdBL = value;
					this.SendPropertyChanged("IdBL");
					this.OnIdBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdClient", DbType="int")]
		public System.Nullable<int> IdClient
		{
			get
			{
				return this._IdClient;
			}
			set
			{
				if ((this._IdClient != value))
				{
					this.OnIdClientChanging(value);
					this.SendPropertyChanging();
					this._IdClient = value;
					this.SendPropertyChanged("IdClient");
					this.OnIdClientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumCheque", DbType="nvarchar(50)")]
		public string NumCheque
		{
			get
			{
				return this._NumCheque;
			}
			set
			{
				if ((this._NumCheque != value))
				{
					this.OnNumChequeChanging(value);
					this.SendPropertyChanging();
					this._NumCheque = value;
					this.SendPropertyChanged("NumCheque");
					this.OnNumChequeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefVirement", DbType="nvarchar(50)")]
		public string RefVirement
		{
			get
			{
				return this._RefVirement;
			}
			set
			{
				if ((this._RefVirement != value))
				{
					this.OnRefVirementChanging(value);
					this.SendPropertyChanging();
					this._RefVirement = value;
					this.SendPropertyChanged("RefVirement");
					this.OnRefVirementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Banque", DbType="nvarchar(50)")]
		public string Banque
		{
			get
			{
				return this._Banque;
			}
			set
			{
				if ((this._Banque != value))
				{
					this.OnBanqueChanging(value);
					this.SendPropertyChanging();
					this._Banque = value;
					this.SendPropertyChanged("Banque");
					this.OnBanqueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumCompte", DbType="nvarchar(50)")]
		public string NumCompte
		{
			get
			{
				return this._NumCompte;
			}
			set
			{
				if ((this._NumCompte != value))
				{
					this.OnNumCompteChanging(value);
					this.SendPropertyChanging();
					this._NumCompte = value;
					this.SendPropertyChanged("NumCompte");
					this.OnNumCompteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatutPay", DbType="nvarchar(1)", CanBeNull=false)]
		public string StatutPay
		{
			get
			{
				return this._StatutPay;
			}
			set
			{
				if ((this._StatutPay != value))
				{
					this.OnStatutPayChanging(value);
					this.SendPropertyChanging();
					this._StatutPay = value;
					this.SendPropertyChanged("StatutPay");
					this.OnStatutPayChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class CLIENT_FIN_COND : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _DOSSIER;
		
		private int _IDCLIENT;
		
		private System.Nullable<int> _CTR_FRET;
		
		private System.Nullable<int> _CTR_SUR;
		
		private System.Nullable<int> _CTR_DET;
		
		private System.Nullable<int> _CTR_REP;
		
		private System.Nullable<int> _CTR_VAL_RSDL;
		
		private System.Nullable<int> _CTR_OP_DIVERS;
		
		private string _CTR_M_PAY;
		
		private string _CAUTION_T;
		
		private System.Nullable<int> _CAUTION_MT;
		
		private string _CAUTION_M_PAY;
		
		private System.Nullable<int> _VEH_MANUT;
		
		private System.Nullable<int> _VEH_PG;
		
		private System.Nullable<int> _VEH_FRET;
		
		private System.Nullable<int> _VEH_SEJOUR;
		
		private System.Nullable<int> _VEH_OP_DIVERS;
		
		private System.Nullable<int> _CONV_MANUT;
		
		private System.Nullable<int> _CONV_SEJOUR;
		
		private System.Nullable<int> _CONV_OP_DIVERS;
		
		private System.Nullable<int> _PLAFOND;
		
		private System.Nullable<int> _COVVD;
		
		private string _SENS;
		
		private System.Nullable<System.DateTime> _DATE_ENREG;
		
		private int _ID_AUTO;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDOSSIERChanging(System.Nullable<int> value);
    partial void OnDOSSIERChanged();
    partial void OnIDCLIENTChanging(int value);
    partial void OnIDCLIENTChanged();
    partial void OnCTR_FRETChanging(System.Nullable<int> value);
    partial void OnCTR_FRETChanged();
    partial void OnCTR_SURChanging(System.Nullable<int> value);
    partial void OnCTR_SURChanged();
    partial void OnCTR_DETChanging(System.Nullable<int> value);
    partial void OnCTR_DETChanged();
    partial void OnCTR_REPChanging(System.Nullable<int> value);
    partial void OnCTR_REPChanged();
    partial void OnCTR_VAL_RSDLChanging(System.Nullable<int> value);
    partial void OnCTR_VAL_RSDLChanged();
    partial void OnCTR_OP_DIVERSChanging(System.Nullable<int> value);
    partial void OnCTR_OP_DIVERSChanged();
    partial void OnCTR_M_PAYChanging(string value);
    partial void OnCTR_M_PAYChanged();
    partial void OnCAUTION_TChanging(string value);
    partial void OnCAUTION_TChanged();
    partial void OnCAUTION_MTChanging(System.Nullable<int> value);
    partial void OnCAUTION_MTChanged();
    partial void OnCAUTION_M_PAYChanging(string value);
    partial void OnCAUTION_M_PAYChanged();
    partial void OnVEH_MANUTChanging(System.Nullable<int> value);
    partial void OnVEH_MANUTChanged();
    partial void OnVEH_PGChanging(System.Nullable<int> value);
    partial void OnVEH_PGChanged();
    partial void OnVEH_FRETChanging(System.Nullable<int> value);
    partial void OnVEH_FRETChanged();
    partial void OnVEH_SEJOURChanging(System.Nullable<int> value);
    partial void OnVEH_SEJOURChanged();
    partial void OnVEH_OP_DIVERSChanging(System.Nullable<int> value);
    partial void OnVEH_OP_DIVERSChanged();
    partial void OnCONV_MANUTChanging(System.Nullable<int> value);
    partial void OnCONV_MANUTChanged();
    partial void OnCONV_SEJOURChanging(System.Nullable<int> value);
    partial void OnCONV_SEJOURChanged();
    partial void OnCONV_OP_DIVERSChanging(System.Nullable<int> value);
    partial void OnCONV_OP_DIVERSChanged();
    partial void OnPLAFONDChanging(System.Nullable<int> value);
    partial void OnPLAFONDChanged();
    partial void OnCOVVDChanging(System.Nullable<int> value);
    partial void OnCOVVDChanged();
    partial void OnSENSChanging(string value);
    partial void OnSENSChanged();
    partial void OnDATE_ENREGChanging(System.Nullable<System.DateTime> value);
    partial void OnDATE_ENREGChanged();
    partial void OnID_AUTOChanging(int value);
    partial void OnID_AUTOChanged();
    #endregion
		
		public CLIENT_FIN_COND()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOSSIER", DbType="int")]
		public System.Nullable<int> DOSSIER
		{
			get
			{
				return this._DOSSIER;
			}
			set
			{
				if ((this._DOSSIER != value))
				{
					this.OnDOSSIERChanging(value);
					this.SendPropertyChanging();
					this._DOSSIER = value;
					this.SendPropertyChanged("DOSSIER");
					this.OnDOSSIERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCLIENT", DbType="int")]
		public int IDCLIENT
		{
			get
			{
				return this._IDCLIENT;
			}
			set
			{
				if ((this._IDCLIENT != value))
				{
					this.OnIDCLIENTChanging(value);
					this.SendPropertyChanging();
					this._IDCLIENT = value;
					this.SendPropertyChanged("IDCLIENT");
					this.OnIDCLIENTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CTR_FRET", DbType="int")]
		public System.Nullable<int> CTR_FRET
		{
			get
			{
				return this._CTR_FRET;
			}
			set
			{
				if ((this._CTR_FRET != value))
				{
					this.OnCTR_FRETChanging(value);
					this.SendPropertyChanging();
					this._CTR_FRET = value;
					this.SendPropertyChanged("CTR_FRET");
					this.OnCTR_FRETChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CTR_SUR", DbType="int")]
		public System.Nullable<int> CTR_SUR
		{
			get
			{
				return this._CTR_SUR;
			}
			set
			{
				if ((this._CTR_SUR != value))
				{
					this.OnCTR_SURChanging(value);
					this.SendPropertyChanging();
					this._CTR_SUR = value;
					this.SendPropertyChanged("CTR_SUR");
					this.OnCTR_SURChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CTR_DET", DbType="int")]
		public System.Nullable<int> CTR_DET
		{
			get
			{
				return this._CTR_DET;
			}
			set
			{
				if ((this._CTR_DET != value))
				{
					this.OnCTR_DETChanging(value);
					this.SendPropertyChanging();
					this._CTR_DET = value;
					this.SendPropertyChanged("CTR_DET");
					this.OnCTR_DETChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CTR_REP", DbType="int")]
		public System.Nullable<int> CTR_REP
		{
			get
			{
				return this._CTR_REP;
			}
			set
			{
				if ((this._CTR_REP != value))
				{
					this.OnCTR_REPChanging(value);
					this.SendPropertyChanging();
					this._CTR_REP = value;
					this.SendPropertyChanged("CTR_REP");
					this.OnCTR_REPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CTR_VAL_RSDL", DbType="int")]
		public System.Nullable<int> CTR_VAL_RSDL
		{
			get
			{
				return this._CTR_VAL_RSDL;
			}
			set
			{
				if ((this._CTR_VAL_RSDL != value))
				{
					this.OnCTR_VAL_RSDLChanging(value);
					this.SendPropertyChanging();
					this._CTR_VAL_RSDL = value;
					this.SendPropertyChanged("CTR_VAL_RSDL");
					this.OnCTR_VAL_RSDLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CTR_OP_DIVERS", DbType="int")]
		public System.Nullable<int> CTR_OP_DIVERS
		{
			get
			{
				return this._CTR_OP_DIVERS;
			}
			set
			{
				if ((this._CTR_OP_DIVERS != value))
				{
					this.OnCTR_OP_DIVERSChanging(value);
					this.SendPropertyChanging();
					this._CTR_OP_DIVERS = value;
					this.SendPropertyChanged("CTR_OP_DIVERS");
					this.OnCTR_OP_DIVERSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CTR_M_PAY", DbType="nvarchar(50)")]
		public string CTR_M_PAY
		{
			get
			{
				return this._CTR_M_PAY;
			}
			set
			{
				if ((this._CTR_M_PAY != value))
				{
					this.OnCTR_M_PAYChanging(value);
					this.SendPropertyChanging();
					this._CTR_M_PAY = value;
					this.SendPropertyChanged("CTR_M_PAY");
					this.OnCTR_M_PAYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CAUTION_T", DbType="nvarchar(50)")]
		public string CAUTION_T
		{
			get
			{
				return this._CAUTION_T;
			}
			set
			{
				if ((this._CAUTION_T != value))
				{
					this.OnCAUTION_TChanging(value);
					this.SendPropertyChanging();
					this._CAUTION_T = value;
					this.SendPropertyChanged("CAUTION_T");
					this.OnCAUTION_TChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CAUTION_MT", DbType="int")]
		public System.Nullable<int> CAUTION_MT
		{
			get
			{
				return this._CAUTION_MT;
			}
			set
			{
				if ((this._CAUTION_MT != value))
				{
					this.OnCAUTION_MTChanging(value);
					this.SendPropertyChanging();
					this._CAUTION_MT = value;
					this.SendPropertyChanged("CAUTION_MT");
					this.OnCAUTION_MTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CAUTION_M_PAY", DbType="nvarchar(50)")]
		public string CAUTION_M_PAY
		{
			get
			{
				return this._CAUTION_M_PAY;
			}
			set
			{
				if ((this._CAUTION_M_PAY != value))
				{
					this.OnCAUTION_M_PAYChanging(value);
					this.SendPropertyChanging();
					this._CAUTION_M_PAY = value;
					this.SendPropertyChanged("CAUTION_M_PAY");
					this.OnCAUTION_M_PAYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VEH_MANUT", DbType="int")]
		public System.Nullable<int> VEH_MANUT
		{
			get
			{
				return this._VEH_MANUT;
			}
			set
			{
				if ((this._VEH_MANUT != value))
				{
					this.OnVEH_MANUTChanging(value);
					this.SendPropertyChanging();
					this._VEH_MANUT = value;
					this.SendPropertyChanged("VEH_MANUT");
					this.OnVEH_MANUTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VEH_PG", DbType="int")]
		public System.Nullable<int> VEH_PG
		{
			get
			{
				return this._VEH_PG;
			}
			set
			{
				if ((this._VEH_PG != value))
				{
					this.OnVEH_PGChanging(value);
					this.SendPropertyChanging();
					this._VEH_PG = value;
					this.SendPropertyChanged("VEH_PG");
					this.OnVEH_PGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VEH_FRET", DbType="int")]
		public System.Nullable<int> VEH_FRET
		{
			get
			{
				return this._VEH_FRET;
			}
			set
			{
				if ((this._VEH_FRET != value))
				{
					this.OnVEH_FRETChanging(value);
					this.SendPropertyChanging();
					this._VEH_FRET = value;
					this.SendPropertyChanged("VEH_FRET");
					this.OnVEH_FRETChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VEH_SEJOUR", DbType="int")]
		public System.Nullable<int> VEH_SEJOUR
		{
			get
			{
				return this._VEH_SEJOUR;
			}
			set
			{
				if ((this._VEH_SEJOUR != value))
				{
					this.OnVEH_SEJOURChanging(value);
					this.SendPropertyChanging();
					this._VEH_SEJOUR = value;
					this.SendPropertyChanged("VEH_SEJOUR");
					this.OnVEH_SEJOURChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VEH_OP_DIVERS", DbType="int")]
		public System.Nullable<int> VEH_OP_DIVERS
		{
			get
			{
				return this._VEH_OP_DIVERS;
			}
			set
			{
				if ((this._VEH_OP_DIVERS != value))
				{
					this.OnVEH_OP_DIVERSChanging(value);
					this.SendPropertyChanging();
					this._VEH_OP_DIVERS = value;
					this.SendPropertyChanged("VEH_OP_DIVERS");
					this.OnVEH_OP_DIVERSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CONV_MANUT", DbType="int")]
		public System.Nullable<int> CONV_MANUT
		{
			get
			{
				return this._CONV_MANUT;
			}
			set
			{
				if ((this._CONV_MANUT != value))
				{
					this.OnCONV_MANUTChanging(value);
					this.SendPropertyChanging();
					this._CONV_MANUT = value;
					this.SendPropertyChanged("CONV_MANUT");
					this.OnCONV_MANUTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CONV_SEJOUR", DbType="int")]
		public System.Nullable<int> CONV_SEJOUR
		{
			get
			{
				return this._CONV_SEJOUR;
			}
			set
			{
				if ((this._CONV_SEJOUR != value))
				{
					this.OnCONV_SEJOURChanging(value);
					this.SendPropertyChanging();
					this._CONV_SEJOUR = value;
					this.SendPropertyChanged("CONV_SEJOUR");
					this.OnCONV_SEJOURChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CONV_OP_DIVERS", DbType="int")]
		public System.Nullable<int> CONV_OP_DIVERS
		{
			get
			{
				return this._CONV_OP_DIVERS;
			}
			set
			{
				if ((this._CONV_OP_DIVERS != value))
				{
					this.OnCONV_OP_DIVERSChanging(value);
					this.SendPropertyChanging();
					this._CONV_OP_DIVERS = value;
					this.SendPropertyChanged("CONV_OP_DIVERS");
					this.OnCONV_OP_DIVERSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PLAFOND", DbType="int")]
		public System.Nullable<int> PLAFOND
		{
			get
			{
				return this._PLAFOND;
			}
			set
			{
				if ((this._PLAFOND != value))
				{
					this.OnPLAFONDChanging(value);
					this.SendPropertyChanging();
					this._PLAFOND = value;
					this.SendPropertyChanged("PLAFOND");
					this.OnPLAFONDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COVVD", DbType="int")]
		public System.Nullable<int> COVVD
		{
			get
			{
				return this._COVVD;
			}
			set
			{
				if ((this._COVVD != value))
				{
					this.OnCOVVDChanging(value);
					this.SendPropertyChanging();
					this._COVVD = value;
					this.SendPropertyChanged("COVVD");
					this.OnCOVVDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SENS", DbType="nvarchar(1)", CanBeNull=false)]
		public string SENS
		{
			get
			{
				return this._SENS;
			}
			set
			{
				if ((this._SENS != value))
				{
					this.OnSENSChanging(value);
					this.SendPropertyChanging();
					this._SENS = value;
					this.SendPropertyChanged("SENS");
					this.OnSENSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATE_ENREG", DbType="datetime")]
		public System.Nullable<System.DateTime> DATE_ENREG
		{
			get
			{
				return this._DATE_ENREG;
			}
			set
			{
				if ((this._DATE_ENREG != value))
				{
					this.OnDATE_ENREGChanging(value);
					this.SendPropertyChanging();
					this._DATE_ENREG = value;
					this.SendPropertyChanged("DATE_ENREG");
					this.OnDATE_ENREGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_AUTO", DbType="int", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_AUTO
		{
			get
			{
				return this._ID_AUTO;
			}
			set
			{
				if ((this._ID_AUTO != value))
				{
					this.OnID_AUTOChanging(value);
					this.SendPropertyChanging();
					this._ID_AUTO = value;
					this.SendPropertyChanged("ID_AUTO");
					this.OnID_AUTOChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class CLIENT_M_PAY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDCLIENT;
		
		private string _SENS;
		
		private string _TYPE;
		
		private System.Nullable<System.DateTime> _DATE_ENREG;
		
		private string _STATUS;
		
		private bool _CASH;
		
		private bool _CC;
		
		private bool _CB;
		
		private bool _WT;
		
		private System.Nullable<bool> _CS;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDCLIENTChanging(int value);
    partial void OnIDCLIENTChanged();
    partial void OnSENSChanging(string value);
    partial void OnSENSChanged();
    partial void OnTYPEChanging(string value);
    partial void OnTYPEChanged();
    partial void OnDATE_ENREGChanging(System.Nullable<System.DateTime> value);
    partial void OnDATE_ENREGChanged();
    partial void OnSTATUSChanging(string value);
    partial void OnSTATUSChanged();
    partial void OnCASHChanging(bool value);
    partial void OnCASHChanged();
    partial void OnCCChanging(bool value);
    partial void OnCCChanged();
    partial void OnCBChanging(bool value);
    partial void OnCBChanged();
    partial void OnWTChanging(bool value);
    partial void OnWTChanged();
    partial void OnCSChanging(System.Nullable<bool> value);
    partial void OnCSChanged();
    #endregion
		
		public CLIENT_M_PAY()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCLIENT", DbType="int", IsPrimaryKey=true)]
		public int IDCLIENT
		{
			get
			{
				return this._IDCLIENT;
			}
			set
			{
				if ((this._IDCLIENT != value))
				{
					this.OnIDCLIENTChanging(value);
					this.SendPropertyChanging();
					this._IDCLIENT = value;
					this.SendPropertyChanged("IDCLIENT");
					this.OnIDCLIENTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SENS", DbType="nvarchar(5)", CanBeNull=false, IsPrimaryKey=true)]
		public string SENS
		{
			get
			{
				return this._SENS;
			}
			set
			{
				if ((this._SENS != value))
				{
					this.OnSENSChanging(value);
					this.SendPropertyChanging();
					this._SENS = value;
					this.SendPropertyChanged("SENS");
					this.OnSENSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TYPE", DbType="nvarchar(5)", CanBeNull=false, IsPrimaryKey=true)]
		public string TYPE
		{
			get
			{
				return this._TYPE;
			}
			set
			{
				if ((this._TYPE != value))
				{
					this.OnTYPEChanging(value);
					this.SendPropertyChanging();
					this._TYPE = value;
					this.SendPropertyChanged("TYPE");
					this.OnTYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATE_ENREG", DbType="datetime")]
		public System.Nullable<System.DateTime> DATE_ENREG
		{
			get
			{
				return this._DATE_ENREG;
			}
			set
			{
				if ((this._DATE_ENREG != value))
				{
					this.OnDATE_ENREGChanging(value);
					this.SendPropertyChanging();
					this._DATE_ENREG = value;
					this.SendPropertyChanged("DATE_ENREG");
					this.OnDATE_ENREGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATUS", DbType="nvarchar(10)")]
		public string STATUS
		{
			get
			{
				return this._STATUS;
			}
			set
			{
				if ((this._STATUS != value))
				{
					this.OnSTATUSChanging(value);
					this.SendPropertyChanging();
					this._STATUS = value;
					this.SendPropertyChanged("STATUS");
					this.OnSTATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CASH", DbType="bit")]
		public bool CASH
		{
			get
			{
				return this._CASH;
			}
			set
			{
				if ((this._CASH != value))
				{
					this.OnCASHChanging(value);
					this.SendPropertyChanging();
					this._CASH = value;
					this.SendPropertyChanged("CASH");
					this.OnCASHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CC", DbType="bit")]
		public bool CC
		{
			get
			{
				return this._CC;
			}
			set
			{
				if ((this._CC != value))
				{
					this.OnCCChanging(value);
					this.SendPropertyChanging();
					this._CC = value;
					this.SendPropertyChanged("CC");
					this.OnCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CB", DbType="bit")]
		public bool CB
		{
			get
			{
				return this._CB;
			}
			set
			{
				if ((this._CB != value))
				{
					this.OnCBChanging(value);
					this.SendPropertyChanging();
					this._CB = value;
					this.SendPropertyChanged("CB");
					this.OnCBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WT", DbType="bit")]
		public bool WT
		{
			get
			{
				return this._WT;
			}
			set
			{
				if ((this._WT != value))
				{
					this.OnWTChanging(value);
					this.SendPropertyChanging();
					this._WT = value;
					this.SendPropertyChanged("WT");
					this.OnWTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CS", DbType="bit")]
		public System.Nullable<bool> CS
		{
			get
			{
				return this._CS;
			}
			set
			{
				if ((this._CS != value))
				{
					this.OnCSChanging(value);
					this.SendPropertyChanging();
					this._CS = value;
					this.SendPropertyChanged("CS");
					this.OnCSChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class FACTURE_CTRL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDFD;
		
		private System.DateTime _DOP;
		
		private string _STATUT;
		
		private int _IDCli;
		
		private int _IdU;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDFDChanging(int value);
    partial void OnIDFDChanged();
    partial void OnDOPChanging(System.DateTime value);
    partial void OnDOPChanged();
    partial void OnSTATUTChanging(string value);
    partial void OnSTATUTChanged();
    partial void OnIDCliChanging(int value);
    partial void OnIDCliChanged();
    partial void OnIdUChanging(int value);
    partial void OnIdUChanged();
    #endregion
		
		public FACTURE_CTRL()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDFD", DbType="int", IsPrimaryKey=true)]
		public int IDFD
		{
			get
			{
				return this._IDFD;
			}
			set
			{
				if ((this._IDFD != value))
				{
					this.OnIDFDChanging(value);
					this.SendPropertyChanging();
					this._IDFD = value;
					this.SendPropertyChanged("IDFD");
					this.OnIDFDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOP", DbType="datetime")]
		public System.DateTime DOP
		{
			get
			{
				return this._DOP;
			}
			set
			{
				if ((this._DOP != value))
				{
					this.OnDOPChanging(value);
					this.SendPropertyChanging();
					this._DOP = value;
					this.SendPropertyChanged("DOP");
					this.OnDOPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATUT", DbType="nvarchar(7)", CanBeNull=false)]
		public string STATUT
		{
			get
			{
				return this._STATUT;
			}
			set
			{
				if ((this._STATUT != value))
				{
					this.OnSTATUTChanging(value);
					this.SendPropertyChanging();
					this._STATUT = value;
					this.SendPropertyChanged("STATUT");
					this.OnSTATUTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCli", DbType="int")]
		public int IDCli
		{
			get
			{
				return this._IDCli;
			}
			set
			{
				if ((this._IDCli != value))
				{
					this.OnIDCliChanging(value);
					this.SendPropertyChanging();
					this._IDCli = value;
					this.SendPropertyChanged("IDCli");
					this.OnIDCliChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdU", DbType="int")]
		public int IdU
		{
			get
			{
				return this._IdU;
			}
			set
			{
				if ((this._IdU != value))
				{
					this.OnIdUChanging(value);
					this.SendPropertyChanging();
					this._IdU = value;
					this.SendPropertyChanged("IdU");
					this.OnIdUChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
